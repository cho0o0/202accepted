{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":0},{"_id":"source/images/favicon512.png","path":"images/favicon512.png","modified":1,"renderable":0},{"_id":"source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":0},{"_id":"themes/202accepted/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/202accepted/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/202accepted/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/202accepted/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/202accepted/source/js/index.js","path":"js/index.js","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/202accepted/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/index.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511444021693},{"_id":"themes/202accepted/.DS_Store","hash":"725462407654e4f5a04c5d95fff4e371ff2c48b3","modified":1511587143013},{"_id":"themes/202accepted/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1511415204902},{"_id":"themes/202accepted/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1511415204903},{"_id":"themes/202accepted/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1511415204903},{"_id":"themes/202accepted/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1511415204903},{"_id":"themes/202accepted/_config.yml","hash":"77a670ea59454eb1cbfe244354119cdb58aa216b","modified":1512182829270},{"_id":"themes/202accepted/package-lock.json","hash":"86fa2b4ba4b35e3349a35f319cdbc0a63375eb20","modified":1512053955450},{"_id":"themes/202accepted/package.json","hash":"64bbf468e9c576f1f59470d5572ed44820f36853","modified":1512053955428},{"_id":"source/_posts/how-to-create-a-custom-index.md","hash":"5ce08008c9f7c95878c14f0e4cf2c6034eee9342","modified":1511788112441},{"_id":"source/_posts/use-three-or-more-arguments-in-lambda-expressions.md","hash":"d9dce8b134829541285e52adfdcd5224a8ba3ddd","modified":1511788119974},{"_id":"source/_posts/try-catch-finally-and-exceptions.md","hash":"e09da94fdd4a3a149f33ace82c7d025e9fe6071b","modified":1511788116039},{"_id":"source/_posts/communication-among-components-in-vue.md","hash":"2342fca07fdd281c3f742360ba5fc77ab709a145","modified":1511788108828},{"_id":"source/_posts/a-polymorphism-puzzle.md","hash":"aa5c333ec9eaacdf4010f397c068dea0113e0c55","modified":1511869828479},{"_id":"source/images/favicon.ico","hash":"6d86ef84954347da58ba8097b637b002b1cf3f05","modified":1511587256853},{"_id":"source/blog/index.md","hash":"60916a927e678f6ac2e0d8db9dfc82cb7727b1df","modified":1511699171961},{"_id":"source/images/favicon512.png","hash":"a9a5733f387bf8d638528dd2095636f20458269e","modified":1511880379033},{"_id":"source/js/test.js","hash":"369eb22113b1394691b28441b55cd537307dd4f1","modified":1512182928809},{"_id":"source/images/favicon.png","hash":"4d4e9fdb36ee27f4e9c12f5dabc0dd7943749a2f","modified":1511874709439},{"_id":"themes/202accepted/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1511415204910},{"_id":"themes/202accepted/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1511415204910},{"_id":"themes/202accepted/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1511415204911},{"_id":"themes/202accepted/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1511415204912},{"_id":"themes/202accepted/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1511415204911},{"_id":"themes/202accepted/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1511415204913},{"_id":"themes/202accepted/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1511415204913},{"_id":"themes/202accepted/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1511415204930},{"_id":"themes/202accepted/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1511700309483},{"_id":"themes/202accepted/layout/layout.ejs","hash":"9c71fc97f3b3805eff79ea3d70f2b671582a5b5b","modified":1511698826079},{"_id":"themes/202accepted/layout/blog.ejs","hash":"aac4c36c17b335551544cfb46db96bd183c4f743","modified":1511881185319},{"_id":"themes/202accepted/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1511415204933},{"_id":"themes/202accepted/source/.DS_Store","hash":"71de49345b332e02516e8cd5f553d3a97c7c0bf7","modified":1511587136593},{"_id":"themes/202accepted/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1511415204931},{"_id":"themes/202accepted/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1511415204932},{"_id":"themes/202accepted/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1511415204932},{"_id":"themes/202accepted/node_modules/exit/.npmignore","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1379691245000},{"_id":"themes/202accepted/node_modules/findup-sync/.npmignore","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1351803462000},{"_id":"themes/202accepted/node_modules/nopt/.npmignore","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1317851223000},{"_id":"themes/202accepted/layout/_partial/after-footer.ejs","hash":"3478e2b11be25e634c52bc8c09dd3a94bd71e322","modified":1512053556301},{"_id":"themes/202accepted/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1511415204917},{"_id":"themes/202accepted/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1511415204915},{"_id":"themes/202accepted/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1511415204916},{"_id":"themes/202accepted/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1511415204918},{"_id":"themes/202accepted/layout/_partial/header.ejs","hash":"d25904ff43d3b76be1a778605976c476b80bac3f","modified":1511700614888},{"_id":"themes/202accepted/layout/_partial/footer.ejs","hash":"b7b65627593b40620dab520cd5271fdceaec176a","modified":1511592062208},{"_id":"themes/202accepted/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1511415204920},{"_id":"themes/202accepted/layout/_partial/index.ejs","hash":"bda860f38eaa578103be9deb0b5eb0a97374a860","modified":1512053713449},{"_id":"themes/202accepted/layout/_partial/head.ejs","hash":"ff92c8181628f1bbfe9f69396dc46921e2154bd8","modified":1511879826000},{"_id":"themes/202accepted/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1511415204928},{"_id":"themes/202accepted/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1511415204929},{"_id":"themes/202accepted/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1511415204929},{"_id":"themes/202accepted/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1511415204930},{"_id":"themes/202accepted/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1511415204928},{"_id":"themes/202accepted/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1511415204929},{"_id":"themes/202accepted/source/css/.DS_Store","hash":"94a9483292cd7f33d0ee10197ac6333e16adb778","modified":1511587136597},{"_id":"themes/202accepted/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1511415204934},{"_id":"themes/202accepted/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511415204951},{"_id":"themes/202accepted/source/css/_variables.styl","hash":"6d9aae493da2020f2dd898f17464b699bdf3eb55","modified":1511587679673},{"_id":"themes/202accepted/source/css/index.styl","hash":"4d5666162b163c04601f3a0c52a5280f79116ec0","modified":1511587738253},{"_id":"themes/202accepted/source/css/style.styl","hash":"e191f09d0314d93712610b6652b93094a1df755c","modified":1511444834575},{"_id":"themes/202accepted/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511415204951},{"_id":"themes/202accepted/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511415204952},{"_id":"themes/202accepted/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511415204952},{"_id":"themes/202accepted/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511415204953},{"_id":"themes/202accepted/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511415204953},{"_id":"themes/202accepted/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1511415204956},{"_id":"themes/202accepted/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1511415204958},{"_id":"themes/202accepted/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1511415204957},{"_id":"themes/202accepted/node_modules/abbrev/LICENSE","hash":"34d4249a8ef23970810fd3018b9399b1268dc052","modified":1506566796000},{"_id":"themes/202accepted/source/js/index.js","hash":"63572c71ac10581e0b4b2458007712703117f0e3","modified":1512182728564},{"_id":"themes/202accepted/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1511415204957},{"_id":"themes/202accepted/node_modules/abbrev/README.md","hash":"c520bc857ec612ed88e13d794c47882d5aed3286","modified":1286218346000},{"_id":"themes/202accepted/node_modules/abbrev/abbrev.js","hash":"e33940719dacc3ea04a0fb3efd7f5a57987b6257","modified":1487053799000},{"_id":"themes/202accepted/node_modules/abbrev/package.json","hash":"1d514f4b56832af5a9b0b13e5ff723aed0f61ae6","modified":1512053955217},{"_id":"themes/202accepted/node_modules/argparse/HISTORY.md","hash":"2f93eafec7f66f0924f7e146f699d47fcf2e41d4","modified":1417456148000},{"_id":"themes/202accepted/node_modules/argparse/README.md","hash":"c5cd7c91eecc2c93c8df881ecd74761505dd0f1f","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/LICENSE","hash":"dbbafd9d668fb6b582e4b4e3c5f3e893a353f5ef","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/index.js","hash":"fbee159aa9d54e9ff6331e8cf57e6af2b8c086a8","modified":1417455549000},{"_id":"themes/202accepted/node_modules/async/.gitmodules","hash":"5a82cf42e007663dfd60e92485c77cfb6e492c62","modified":1330309380000},{"_id":"themes/202accepted/node_modules/async/.npmignore","hash":"7a636ce8ce21a17d255497dd188fa82f9f7c0edc","modified":1330309380000},{"_id":"themes/202accepted/node_modules/argparse/package.json","hash":"df2594257ecd7633fbc616a4ffcc145eea8ca722","modified":1512053955219},{"_id":"themes/202accepted/node_modules/async/Makefile","hash":"eee69a0169161e838d24faf6c1e609a6cbe688e4","modified":1330310311000},{"_id":"themes/202accepted/node_modules/async/package.json","hash":"21bc60aac3699cfc1c8bcfba3a53f26008d0be92","modified":1512053955217},{"_id":"themes/202accepted/node_modules/async/LICENSE","hash":"99e50b7dfe39753bccb8aabce3cd1f80e960713b","modified":1330309380000},{"_id":"themes/202accepted/node_modules/async/README.md","hash":"0205ee7a0742fc9868e6197d03521d22c2337670","modified":1337842210000},{"_id":"themes/202accepted/node_modules/async/index.js","hash":"a27ab3350a1167bc607fc738645eeb82eadb5c11","modified":1330309380000},{"_id":"themes/202accepted/node_modules/.bin/esvalidate","hash":"f3414e385c8ed5f18eec4bb53fbb45321281b3ae","modified":1512053955311},{"_id":"themes/202accepted/node_modules/.bin/cake","hash":"800093682cd061078b68634a2940222459f7fbc6","modified":1512053955303},{"_id":"themes/202accepted/node_modules/.bin/coffee","hash":"53426d453e8518879d69c1d8925b91434ebf8f80","modified":1512053955302},{"_id":"themes/202accepted/node_modules/.bin/esparse","hash":"4f5180f8bb99ea6e2d1975a2d7a4c8ec2664c3a4","modified":1512053955311},{"_id":"themes/202accepted/node_modules/.bin/js-yaml","hash":"53bede9c65e71860490461458ee5baae4efefe56","modified":1512053955335},{"_id":"themes/202accepted/node_modules/.bin/rimraf","hash":"f6e74628b82bbd551e11947abad295c1b87cf6df","modified":1512053955321},{"_id":"themes/202accepted/node_modules/.bin/which","hash":"a57845c25b005b3298ba1482d3fe8fd988e0b7ea","modified":1512053955339},{"_id":"themes/202accepted/node_modules/.bin/nopt","hash":"46110bf51a470f7413fb5da0abfe8790030b6762","modified":1512053955318},{"_id":"themes/202accepted/node_modules/colors/MIT-LICENSE.txt","hash":"98053a44e1cdefb39af37fc6fdaf6752d72e39a0","modified":1374816967000},{"_id":"themes/202accepted/node_modules/colors/colors.js","hash":"ae7ec5ee848724835176628fb62283202612efa6","modified":1377126803000},{"_id":"themes/202accepted/node_modules/colors/example.js","hash":"59c3df605b63a9756c0b6bdc0fd6064383df7371","modified":1377120062000},{"_id":"themes/202accepted/node_modules/colors/ReadMe.md","hash":"d969ffe7d0bd51e20c086257bf4233fb863f50ae","modified":1374816967000},{"_id":"themes/202accepted/node_modules/colors/example.html","hash":"2637d809a0a44bc68b35a83de95db7635069f3bf","modified":1374816967000},{"_id":"themes/202accepted/node_modules/colors/package.json","hash":"73f812e87a54c703d89235e7b7ab4391c5d216a3","modified":1512053955217},{"_id":"themes/202accepted/node_modules/colors/test.js","hash":"a2bd30291ba9d1a51dcfbe1bdbcce3d715c6fc74","modified":1377120677000},{"_id":"themes/202accepted/node_modules/esprima/README.md","hash":"dcfdc84f7982c295425f9f22b8bd8bdcbb5b4bc7","modified":1377750976000},{"_id":"themes/202accepted/node_modules/dateformat/Readme.md","hash":"cc2452996e7233e017fef78f764b068eb2354487","modified":1317208002000},{"_id":"themes/202accepted/node_modules/dateformat/package.json","hash":"59b43c9ac45424d65aa33948f561d85ddf949c9d","modified":1512053955217},{"_id":"themes/202accepted/node_modules/esprima/package.json","hash":"356fa2af2d9c090d87d67eb596750d7bfb86cf55","modified":1512053955221},{"_id":"themes/202accepted/node_modules/coffee-script/LICENSE","hash":"89cbbb510c5d7f8dbdfa360a442faac1c8e54976","modified":1334084354000},{"_id":"themes/202accepted/node_modules/coffee-script/README","hash":"6f18b3028c51aaa01978665e9688b62ae7594895","modified":1320793659000},{"_id":"themes/202accepted/node_modules/coffee-script/.npmignore","hash":"81ce9d5e8a41d8c108b73e6f3e06020b732658c1","modified":1312514256000},{"_id":"themes/202accepted/node_modules/coffee-script/CNAME","hash":"68c58ea14f5d4a99aedabb4dcb8d4f3bc03467a7","modified":1334084270000},{"_id":"themes/202accepted/node_modules/coffee-script/Rakefile","hash":"0d27b5b6f3767272df49a0ea7a3876f54d3a45ac","modified":1293075363000},{"_id":"themes/202accepted/node_modules/coffee-script/package.json","hash":"94f0af7c0828bd996f2faec0cc072d0076865070","modified":1512053955220},{"_id":"themes/202accepted/node_modules/exit/.jshintrc","hash":"0587e11e5cb53577f178a5ec54e8291f7c8803b3","modified":1379691245000},{"_id":"themes/202accepted/node_modules/exit/.travis.yml","hash":"dd90533610ce61425fd0a3d2ad81a8c32b77bdf3","modified":1379691245000},{"_id":"themes/202accepted/node_modules/exit/LICENSE-MIT","hash":"b418ef01b1aa695789ec0237509d4c54bbec98ee","modified":1379691245000},{"_id":"themes/202accepted/node_modules/exit/Gruntfile.js","hash":"7af27352d82472a9cea4f14b5756a759ce98df96","modified":1379691245000},{"_id":"themes/202accepted/node_modules/exit/package.json","hash":"072645188ce64e643493b3e4b3a13276a8de9e2f","modified":1512053955217},{"_id":"themes/202accepted/node_modules/exit/README.md","hash":"02e47ddbc94f472863846785579f7cce96226600","modified":1385493795000},{"_id":"themes/202accepted/node_modules/eventemitter2/README.md","hash":"fb7c8c8ad5cdfd6b9d9e23942f9ac447a8672c65","modified":1403539644000},{"_id":"themes/202accepted/node_modules/eventemitter2/index.js","hash":"a38bca78b416dccd824b14d360e4a4c3593b6673","modified":1403539644000},{"_id":"themes/202accepted/node_modules/eventemitter2/package.json","hash":"a35087f3002a1a3cdaabb438852ad53c67f6f474","modified":1512053955217},{"_id":"themes/202accepted/node_modules/findup-sync/.jshintrc","hash":"072aadbeb5b08628c662cb71fb2a80c77a5fefe7","modified":1394807285000},{"_id":"themes/202accepted/node_modules/findup-sync/.travis.yml","hash":"071a53a529e9acfd52d2dc2b83af3169140a6a94","modified":1362771040000},{"_id":"themes/202accepted/node_modules/findup-sync/Gruntfile.js","hash":"046f1771d8cee96dc3ee1c351445ac56b3ac84a5","modified":1351803707000},{"_id":"themes/202accepted/node_modules/findup-sync/LICENSE-MIT","hash":"b418ef01b1aa695789ec0237509d4c54bbec98ee","modified":1362770767000},{"_id":"themes/202accepted/node_modules/findup-sync/README.md","hash":"a0c6442301c0ffebcc94378ade4b70bdee876dc0","modified":1394807394000},{"_id":"themes/202accepted/node_modules/getobject/.jshintrc","hash":"29433d358ee71a9b57a8059eaa4a01a227c3e664","modified":1385064107000},{"_id":"themes/202accepted/node_modules/findup-sync/package.json","hash":"1b5b710c5430395ad9c57e7a8ef2df25e2c6c335","modified":1512053955218},{"_id":"themes/202accepted/node_modules/getobject/.travis.yml","hash":"75d47644e03b370399b1c187df69c8f10f780b65","modified":1385064107000},{"_id":"themes/202accepted/node_modules/getobject/.npmignore","hash":"4908b67461dad9714fb835308800efdeea795c62","modified":1385064107000},{"_id":"themes/202accepted/node_modules/getobject/LICENSE-MIT","hash":"b418ef01b1aa695789ec0237509d4c54bbec98ee","modified":1385064107000},{"_id":"themes/202accepted/node_modules/getobject/Gruntfile.js","hash":"f69e615ca9653096cdaf8d3c18ba10e0dfa9118c","modified":1385064107000},{"_id":"themes/202accepted/node_modules/getobject/README.md","hash":"391e18fa52be1d8e5adad4fbf6805b90fdbac14c","modified":1385064360000},{"_id":"themes/202accepted/node_modules/getobject/package.json","hash":"dbd67baf10eea2454d55c3fd2c9c7d069e920e75","modified":1512053955217},{"_id":"themes/202accepted/node_modules/glob/.travis.yml","hash":"b0e08ffb1a32bb17941785759a4154f995139ae8","modified":1344299893000},{"_id":"themes/202accepted/node_modules/glob/.npmignore","hash":"df0230e54e04f0f4739f4cdf671570dced4a1223","modified":1350315195000},{"_id":"themes/202accepted/node_modules/glob/LICENSE","hash":"a042a6c4248c82d810b9b617958f222c0de0f6c2","modified":1343093261000},{"_id":"themes/202accepted/node_modules/glob/glob.js","hash":"f3efbd66544514b81ffc5f7e9e44da191cf015aa","modified":1361809438000},{"_id":"themes/202accepted/node_modules/glob/package.json","hash":"843aa001cf1b2f134d39e9c33b2c543a0e5aac8c","modified":1512053955219},{"_id":"themes/202accepted/node_modules/glob/README.md","hash":"d44c73a135f6fbbc73c54586e74aa35cf802c1b7","modified":1344287108000},{"_id":"themes/202accepted/node_modules/globule/LICENSE-MIT","hash":"b418ef01b1aa695789ec0237509d4c54bbec98ee","modified":1363728678000},{"_id":"themes/202accepted/node_modules/globule/.jshintrc","hash":"29433d358ee71a9b57a8059eaa4a01a227c3e664","modified":1363728678000},{"_id":"themes/202accepted/node_modules/globule/.npmignore","hash":"4908b67461dad9714fb835308800efdeea795c62","modified":1363728678000},{"_id":"themes/202accepted/node_modules/globule/.travis.yml","hash":"75d47644e03b370399b1c187df69c8f10f780b65","modified":1365707661000},{"_id":"themes/202accepted/node_modules/globule/Gruntfile.js","hash":"f69e615ca9653096cdaf8d3c18ba10e0dfa9118c","modified":1363894316000},{"_id":"themes/202accepted/node_modules/globule/package.json","hash":"cc0e05331fc5a8b91c50c6b7f42dc03cb377f94b","modified":1512053955218},{"_id":"themes/202accepted/node_modules/graceful-fs/.npmignore","hash":"3ca0e72fdfd533e411cc95dc9c91c5ec59661f95","modified":1322520827000},{"_id":"themes/202accepted/node_modules/globule/README.md","hash":"3977f5ddc732867ab17cbbfa40eab7959124b3bc","modified":1365709973000},{"_id":"themes/202accepted/node_modules/graceful-fs/README.md","hash":"c29647b03fe278f98effd353b3df894557b04b52","modified":1367341461000},{"_id":"themes/202accepted/node_modules/grunt/CONTRIBUTING.md","hash":"3c9d11bd6c0a87cbd8dfab255ace8ba90d18d042","modified":1399389581000},{"_id":"themes/202accepted/node_modules/graceful-fs/LICENSE","hash":"a042a6c4248c82d810b9b617958f222c0de0f6c2","modified":1369627536000},{"_id":"themes/202accepted/node_modules/graceful-fs/package.json","hash":"145f15e3e7400d027670b793e3f9f55630b5121c","modified":1512053955217},{"_id":"themes/202accepted/node_modules/graceful-fs/graceful-fs.js","hash":"4d221ed85a222893cd9b37f07d78ecad306c6b10","modified":1373442338000},{"_id":"themes/202accepted/node_modules/grunt/appveyor.yml","hash":"f4008f5045998b1bd37d0c36f7ce88e4434e1512","modified":1399664145000},{"_id":"themes/202accepted/node_modules/grunt/.npmignore","hash":"12221116446da7f5ac78e7b9574f2741444695a7","modified":1399664145000},{"_id":"themes/202accepted/node_modules/grunt/README.md","hash":"1ae230f11ff2a6887497cdf3444f7e25915fd54d","modified":1399390646000},{"_id":"themes/202accepted/node_modules/grunt/LICENSE-MIT","hash":"cceedc89ad746418d06ee918ccd7466df051f994","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/.travis.yml","hash":"ea6496c27b706e607a310ffa0045dfa2cb84b9d3","modified":1373491608000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/.npmignore","hash":"e3fe973725530c2c143d4f694d00e8da8c4a9020","modified":1373491608000},{"_id":"themes/202accepted/node_modules/grunt/package.json","hash":"051af6fbaa6aaad37802d77f02c393fcb560fc66","modified":1512053955219},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/.jshintrc","hash":"4607a7a6282542b3e6f8c2e5c23e5aac4c4b17c0","modified":1373491608000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/CONTRIBUTING.md","hash":"3c9d11bd6c0a87cbd8dfab255ace8ba90d18d042","modified":1373946346000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/AUTHORS","hash":"522c1045e170238d1cd108e5c502b5c3924b7305","modified":1373659716000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/Gruntfile.js","hash":"3c43e06ce663894041434f5c1444c2777c786a7d","modified":1373945841000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/CHANGELOG","hash":"eead732d943ac402ae9f1631d6fccad6273ac300","modified":1373946341000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/README.md","hash":"f4589462183ccf0bb8c5103fe141436556b32902","modified":1373946346000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/LICENSE-MIT","hash":"8165bcd987a6b5b40e0354484293626894c470e6","modified":1373659716000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/.jshintrc","hash":"1581b45e1162fee0738b9e6500cb6fa609c569d2","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/package.json","hash":"0002a168766eed6cf601601b8861bce8cf8ae182","modified":1512053955219},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/AUTHORS","hash":"a1e2f109a2a738b6e6cd65a9fb41454a59cc01df","modified":1364328401000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/.npmignore","hash":"f375daee415ce9f338f742da9b0cfd727b99e7f6","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/.travis.yml","hash":"7632dc2d94109f51d334b9d2e8843c381510f56b","modified":1363328672000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/CHANGELOG","hash":"51f6639ba8ec6e9b4a9c624388a0d0648304b20e","modified":1364328383000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/README.md","hash":"e51c82a4ecb53e0aa3e116123b2d346e84653450","modified":1364328241000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/CONTRIBUTING.md","hash":"3c9d11bd6c0a87cbd8dfab255ace8ba90d18d042","modified":1364328469000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/Gruntfile.js","hash":"d1cd2a27d832b58b788a06baa8a6da5f5a38158e","modified":1364328263000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/LICENSE-MIT","hash":"dd60195a9ee58f7d255a13736ef0e6f276c76c3c","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/.jshintrc","hash":"0587e11e5cb53577f178a5ec54e8291f7c8803b3","modified":1450886265000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1450886265000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/package.json","hash":"59bb25e570534d8e8f94ee72ad1999f8ae4e3370","modified":1512053955219},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/.travis.yml","hash":"ff2d426dd199c4804eb5befca0af52195b5fbf40","modified":1450886402000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/Gruntfile.js","hash":"5133165815b086f36f4bbf01f62483343c34d8eb","modified":1450886265000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/examples.js","hash":"d8ec800b2e3d99bf5ad84886445b056b667f89f7","modified":1450886265000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/LICENSE-MIT","hash":"cceedc89ad746418d06ee918ccd7466df051f994","modified":1450886265000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/README.md","hash":"e6c886b43ff8e41adb85a3ef87200bafde5b4a98","modified":1450886265000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/.jshintrc","hash":"0587e11e5cb53577f178a5ec54e8291f7c8803b3","modified":1432670742000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1432670742000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/package.json","hash":"cb7f8cdbb3e0969c77f31565de33e2e6cbd274dd","modified":1512053955217},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/index.js","hash":"79ea545547b0bbcb0ee8c4f85e50a0724dcaacda","modified":1450886402000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/LICENSE-MIT","hash":"ef57deb33efffbceb7041a96ab26c76024de1743","modified":1432671162000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/.travis.yml","hash":"e17f38d7614f38214f713c55d85f2e6fbe8c3c0b","modified":1432670742000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/README.md","hash":"11aff4cc51503a398489a06e7b91271300b90ebb","modified":1432671191000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/Gruntfile.js","hash":"5133165815b086f36f4bbf01f62483343c34d8eb","modified":1432670742000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/package.json","hash":"deec0a857c201b46779348cf1376febcb7e1576b","modified":1512053955217},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/index.js","hash":"bfe80b398de7f11de3a28fb7607bc3f4ced1d045","modified":1432671034000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/.jshintrc","hash":"0587e11e5cb53577f178a5ec54e8291f7c8803b3","modified":1399476917000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/README.md","hash":"59d34e00f93c01672dd37d33bc780d58c3e8d83b","modified":1399651632000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/.travis.yml","hash":"e17f38d7614f38214f713c55d85f2e6fbe8c3c0b","modified":1399477020000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/Gruntfile.js","hash":"5133165815b086f36f4bbf01f62483343c34d8eb","modified":1399476903000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/package.json","hash":"ef140c5e436cefebf904ee0e28aa04073ab46949","modified":1512053955219},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/LICENSE-MIT","hash":"cceedc89ad746418d06ee918ccd7466df051f994","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/index.js","hash":"f67938caf0e914754d408b8a6509e47c269380da","modified":1399651531000},{"_id":"themes/202accepted/node_modules/hooker/LICENSE-MIT","hash":"28153506c787aa9af20faa1139fb04244e9a9e69","modified":1327282452000},{"_id":"themes/202accepted/node_modules/hooker/grunt.js","hash":"6d8a487620c1bb798bfd07f18a0c5d9c50771c29","modified":1327282452000},{"_id":"themes/202accepted/node_modules/hooker/child.js","hash":"989bf3a67217c035ef911c334cb55f34f24f27b6","modified":1327432191000},{"_id":"themes/202accepted/node_modules/hooker/README.md","hash":"e7ac8e4968f6912bde51540738154ef328e37561","modified":1327282452000},{"_id":"themes/202accepted/node_modules/hooker/package.json","hash":"cf3e60b87400551e631aa022b3b16503730e6068","modified":1512053955217},{"_id":"themes/202accepted/node_modules/iconv-lite/LICENSE","hash":"4f3ca49a793f6bb8465a3731fd965a128757b8ce","modified":1320857905000},{"_id":"themes/202accepted/node_modules/hooker/parent.js","hash":"bad636f06dc7aad1dbcc63f0b2255390b6cae8e4","modified":1327432396000},{"_id":"themes/202accepted/node_modules/iconv-lite/.npmignore","hash":"7b346c0a5dc4328c38c17ddc9719f8b5768f99ae","modified":1336298551000},{"_id":"themes/202accepted/node_modules/iconv-lite/.travis.yml","hash":"a0d14c115074c1762cbdc07b4207a23eb59fa949","modified":1354651426000},{"_id":"themes/202accepted/node_modules/iconv-lite/README.md","hash":"89f8a01d1bc285aca49240e5e0954a0a1258505b","modified":1373851248000},{"_id":"themes/202accepted/node_modules/iconv-lite/README.md~","hash":"9e17e6bfbab303a80e13809b7d8bc20e838fa2f2","modified":1322052600000},{"_id":"themes/202accepted/node_modules/iconv-lite/package.json","hash":"0998380a060ac04a388dbf3576b2d2a290070464","modified":1512053955218},{"_id":"themes/202accepted/node_modules/iconv-lite/index.js","hash":"7fe902a9e2801eaf29c9e83838b3d5e49f33c9f1","modified":1373851118000},{"_id":"themes/202accepted/node_modules/inherits/inherits_browser.js","hash":"7c13eacf36e79e5e7dd257d80ec25846e4df7eb3","modified":1368715198000},{"_id":"themes/202accepted/node_modules/inherits/LICENSE","hash":"3b0e8d58a362b1787ef3504fba4f593b22f3cee4","modified":1376950172000},{"_id":"themes/202accepted/node_modules/inherits/README.md","hash":"f2f8d26f1cf5fb1e3a68aa225221b064f999fefb","modified":1368714278000},{"_id":"themes/202accepted/node_modules/inherits/inherits.js","hash":"491caba7b70590f6dcbe37d7edccd9f89ac1b9fd","modified":1473280161000},{"_id":"themes/202accepted/node_modules/js-yaml/LICENSE","hash":"325c71e01846ea7b7aeaeeb541644def35186cfd","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/HISTORY.md","hash":"abce83916ea064aee439f6b80eb81e6272c3a5c7","modified":1366987222000},{"_id":"themes/202accepted/node_modules/inherits/package.json","hash":"28cdc3e6aafbf53f743a4d9c0ffce1c7a9c9a8bc","modified":1512053955218},{"_id":"themes/202accepted/node_modules/js-yaml/README.md","hash":"6db8dd3ecbf80b8db25b390ab7f8bf9aee4f2f5f","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/index.js","hash":"d97562c3e28663b169489d3a3c90b44fef9ed68b","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/package.json","hash":"e3e900451728838490ec5d58d9ba516336b481b4","modified":1512053955221},{"_id":"themes/202accepted/node_modules/lodash/README.md","hash":"0a7001ea1ad8b16081b0636669c87f51efd0b434","modified":1377878417000},{"_id":"themes/202accepted/node_modules/lodash/package.json","hash":"535879eee8c27a98213dc1a6f3401dc0b3367c0f","modified":1512053955218},{"_id":"themes/202accepted/node_modules/lodash/lodash.min.js","hash":"61e2d40d3f02f31178334dfd7b6496e808e9c48f","modified":1356670301000},{"_id":"themes/202accepted/node_modules/lru-cache/.npmignore","hash":"cc16a69ea300506c49a0844bc69745bf8f34cf40","modified":1323392699000},{"_id":"themes/202accepted/node_modules/lodash/lodash.underscore.min.js","hash":"58ffea4a2bdfc281d1b0f6bf09090804d647e812","modified":1356670311000},{"_id":"themes/202accepted/node_modules/lru-cache/.travis.yml","hash":"ac2b64b93ab810be473f67745bd9f7d4c3e8e0ff","modified":1433355858000},{"_id":"themes/202accepted/node_modules/lru-cache/CONTRIBUTORS","hash":"6a6e5148568ff15b4756ee478f0da581ea97fc01","modified":1385053079000},{"_id":"themes/202accepted/node_modules/lru-cache/README.md","hash":"129fd032ba2ac7580e57e0d9988a4d06f1b344fd","modified":1448474798000},{"_id":"themes/202accepted/node_modules/lru-cache/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431999527000},{"_id":"themes/202accepted/node_modules/lru-cache/package.json","hash":"93d1b69a2d77d679c9c46af720e35b4b6b4cfcf6","modified":1512053955218},{"_id":"themes/202accepted/node_modules/minimatch/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1372866257000},{"_id":"themes/202accepted/node_modules/minimatch/README.md","hash":"32a95bf2d3d1c5463542d236af28b5ffb12b7d2d","modified":1387173103000},{"_id":"themes/202accepted/node_modules/minimatch/LICENSE","hash":"4a1927e74796f06ac7e7a687ca6b44d39c65d8f4","modified":1311966493000},{"_id":"themes/202accepted/node_modules/minimatch/package.json","hash":"ffbeb48468c46b22d551c81fff89a4928c9b9607","modified":1512053955218},{"_id":"themes/202accepted/node_modules/minimatch/minimatch.js","hash":"66de40ad270165fabe16e5af02fae0ce2d558b7f","modified":1387223424000},{"_id":"themes/202accepted/node_modules/nopt/LICENSE","hash":"4a1927e74796f06ac7e7a687ca6b44d39c65d8f4","modified":1317851223000},{"_id":"themes/202accepted/node_modules/nopt/README.md","hash":"5cb6bac3c202ae01f012115fbd5a196cab7d4edd","modified":1317851223000},{"_id":"themes/202accepted/node_modules/nopt/package.json","hash":"f5d1df873ae9b50b1f83e3a074c83768eb307844","modified":1512053955221},{"_id":"themes/202accepted/node_modules/rimraf/bin.js","hash":"f6e74628b82bbd551e11947abad295c1b87cf6df","modified":1512053955321},{"_id":"themes/202accepted/node_modules/rimraf/AUTHORS","hash":"18341b56fef79d520c3d862b737e91c6b24ea649","modified":1327889666000},{"_id":"themes/202accepted/node_modules/rimraf/LICENSE","hash":"4a1927e74796f06ac7e7a687ca6b44d39c65d8f4","modified":1306777682000},{"_id":"themes/202accepted/node_modules/rimraf/package.json","hash":"1a25cf399410deee11053282d4a7c3bd1ec058a4","modified":1512053955221},{"_id":"themes/202accepted/node_modules/rimraf/README.md","hash":"e579a194de49c69f6404ea8c8990a7b982d3e95c","modified":1385744303000},{"_id":"themes/202accepted/node_modules/rimraf/rimraf.js","hash":"44659e827a4ceb7bfb8793b80af86c5f96f8dd8c","modified":1399391937000},{"_id":"themes/202accepted/node_modules/sigmund/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1432106334000},{"_id":"themes/202accepted/node_modules/sigmund/README.md","hash":"6007650d6a1dc24c4dc57409e7611b6998d244aa","modified":1401638608000},{"_id":"themes/202accepted/node_modules/sigmund/package.json","hash":"fca3bf3b8c70c6410f16f306ad9c557a33b5c72e","modified":1512053955218},{"_id":"themes/202accepted/node_modules/sigmund/sigmund.js","hash":"7575ead5bf4fbb3eed15ead87c050cc8e306d446","modified":1344873467000},{"_id":"themes/202accepted/node_modules/sigmund/bench.js","hash":"7f512661bb09413fa3c814f89fdf58b157f08e63","modified":1344873467000},{"_id":"themes/202accepted/node_modules/underscore/LICENSE","hash":"4a536006299d219843f69f87ecac4b52158b3efc","modified":1392067000000},{"_id":"themes/202accepted/node_modules/underscore/README.md","hash":"fb13eed34314e90170be6290876a9a66c4051272","modified":1390328510000},{"_id":"themes/202accepted/node_modules/underscore/package.json","hash":"561de70bff7fb26b24fc469f633d3a6f0633fe99","modified":1512053955218},{"_id":"themes/202accepted/node_modules/underscore/underscore-min.js","hash":"fb26909af4ad2a6c240b9aa4b35bb983cf4b20e4","modified":1409091109000},{"_id":"themes/202accepted/node_modules/underscore.string/.travis.yml","hash":"e33e8d35cf94d67804af457d709d8db1d16f73ae","modified":1373449276000},{"_id":"themes/202accepted/node_modules/underscore.string/Gemfile","hash":"874b245ee171eaa4bed59896539e380e56ce99f0","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/Gemfile.lock","hash":"3917bc6cd244dbbf1e7458df89f83cb688d74684","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore/underscore.js","hash":"07147a83bfaba702d30426c7c31bccb25e692a2e","modified":1409091073000},{"_id":"themes/202accepted/node_modules/underscore.string/README.markdown","hash":"97465c8b60015f348232c19d0cbd41188b060774","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/Rakefile","hash":"36c73173ebaadef1ad9a49bd74c167f69f597061","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/package.json","hash":"edddf08e010d9593bcc08b8dd87e0b9f657f235e","modified":1512053955219},{"_id":"themes/202accepted/node_modules/which/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1416911659000},{"_id":"themes/202accepted/node_modules/which/README.md","hash":"23761d51e981dcb34d29a2d77f05c340cfe806a2","modified":1312741327000},{"_id":"themes/202accepted/node_modules/which/package.json","hash":"4135345e867af637e04db4aee1d3e72b30f63387","modified":1512053955221},{"_id":"themes/202accepted/node_modules/which/which.js","hash":"7d8ead9070991a0fba0db3a843e6e7d346fe219c","modified":1424896246000},{"_id":"themes/202accepted/node_modules/grunt-git/.jscs.json","hash":"73428bec9ada2425c87d1822e9bfc113c4e77b7b","modified":1398687678000},{"_id":"themes/202accepted/node_modules/grunt-git/.travis.yml","hash":"c331d27bf987dae046c753dccd09d4e467234217","modified":1401271749000},{"_id":"themes/202accepted/node_modules/grunt-git/LICENSE","hash":"b27124bde571104832b276ef0b11453ee3e98c14","modified":1362663155000},{"_id":"themes/202accepted/node_modules/load-grunt-tasks/load-grunt-tasks.js","hash":"197ceb005edc02926e28b9029e46f531dccd37c1","modified":1387295794000},{"_id":"themes/202accepted/node_modules/grunt-git/package.json","hash":"a447d42efde1bc91a95676a3f42955eaa614788a","modified":1512053955220},{"_id":"themes/202accepted/node_modules/grunt-git/README.md","hash":"01c435cb3cc13177b82678f9279ce60ed0a5a030","modified":1403525250000},{"_id":"themes/202accepted/node_modules/load-grunt-tasks/readme.md","hash":"8de843a842fc3a9c6bb974fa0691396b773931cc","modified":1387295794000},{"_id":"themes/202accepted/node_modules/load-grunt-tasks/package.json","hash":"d0e846b4a2e529a3b58cbaf75bda25938be8670c","modified":1512053955220},{"_id":"themes/202accepted/node_modules/esprima/esprima.js","hash":"ffe7461e5c7fd420c0038e38ee80bf7809c7e9aa","modified":1377753703000},{"_id":"themes/202accepted/node_modules/lodash/lodash.underscore.js","hash":"e391a12750ad716c2e501f2b2e0e02dd83a694de","modified":1356670304000},{"_id":"themes/202accepted/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1511415204922},{"_id":"themes/202accepted/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1511415204926},{"_id":"themes/202accepted/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1511415204927},{"_id":"themes/202accepted/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1511415204938},{"_id":"themes/202accepted/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1511415204938},{"_id":"themes/202accepted/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1511415204934},{"_id":"themes/202accepted/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1511415204935},{"_id":"themes/202accepted/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1511415204935},{"_id":"themes/202accepted/source/css/_partial/header.styl","hash":"d076f09be8943d83c54db30901241ae63a2048b6","modified":1511700646805},{"_id":"themes/202accepted/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1511415204936},{"_id":"themes/202accepted/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1511415204936},{"_id":"themes/202accepted/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1511415204935},{"_id":"themes/202accepted/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1511415204937},{"_id":"themes/202accepted/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1511415204937},{"_id":"themes/202accepted/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1511415204938},{"_id":"themes/202accepted/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1511415204926},{"_id":"themes/202accepted/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1511415204925},{"_id":"themes/202accepted/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1511415204925},{"_id":"themes/202accepted/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1511415204941},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1511415204942},{"_id":"themes/202accepted/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511415204954},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1511415204946},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1511415204954},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1511415204955},{"_id":"themes/202accepted/node_modules/argparse/examples/arguments.js","hash":"8538260bbb595bc63ac97334024edbd486bc9a12","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/choice.js","hash":"4bd9df73749f13da8a6b9b58ebe6fcd741ace616","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/constants.js","hash":"4359e41c37d33c52a1261d71eb5b217e51d63c60","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/help.js","hash":"3c71ee644bc9da6474e393b07b07721d39a94a9a","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/nargs.js","hash":"2afc15fe7d18fd3d139377f9f18e7f50361473af","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/parents.js","hash":"ea7c71c1006bbce0556e63346635f1575ecde977","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/prefix_chars.js","hash":"9deda23774d63ea26d4048454d10c958252b54dc","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/sub_commands.js","hash":"2b040be65fdf4e1a3061eb42693d27f8caa9883b","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/sum.js","hash":"49fb15434d36407af716ce4fd5cfd9f2a9b147ee","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/examples/testformatters.js","hash":"8b2812fce10dfe7deba2c3b74072ba2d5a0ec6f8","modified":1417455549000},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1511415204956},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1511415204954},{"_id":"themes/202accepted/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1511415204955},{"_id":"themes/202accepted/node_modules/esprima/bin/esparse.js","hash":"4f5180f8bb99ea6e2d1975a2d7a4c8ec2664c3a4","modified":1512053955311},{"_id":"themes/202accepted/node_modules/async/lib/async.js","hash":"64a9731748ff662d39c171db1ea0129cbf08505a","modified":1338402273000},{"_id":"themes/202accepted/node_modules/esprima/bin/esvalidate.js","hash":"f3414e385c8ed5f18eec4bb53fbb45321281b3ae","modified":1512053955311},{"_id":"themes/202accepted/node_modules/colors/themes/winston-dark.js","hash":"0202ddb900b38f79dd5a8db1c70070d428b14cd1","modified":1374816967000},{"_id":"themes/202accepted/node_modules/colors/themes/winston-light.js","hash":"ea9fb8f704581e751d85767563a3dcd826ead0e6","modified":1374816967000},{"_id":"themes/202accepted/node_modules/esprima/test/compat.js","hash":"7fc83f0e34c48231bc095d46e1a28052d84a44ea","modified":1377750976000},{"_id":"themes/202accepted/node_modules/esprima/test/run.js","hash":"75bf713cff15b900bca9ac63b986accb157e1856","modified":1377750976000},{"_id":"themes/202accepted/node_modules/esprima/test/reflect.js","hash":"d68e28079bd7fed77f6384639f763e158ffb0d17","modified":1377555589000},{"_id":"themes/202accepted/node_modules/esprima/test/runner.js","hash":"1e298c4fe2bcd99d73a60a3770b7f557a876313b","modified":1377750976000},{"_id":"themes/202accepted/node_modules/argparse/lib/action_container.js","hash":"d91bd33b8d0bd00596090b64be550ccbe6864d10","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action.js","hash":"c10af341c539268c4cb032e919d7a80fc2e3438f","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/argparse.js","hash":"8c53af72750678f55eaabc57d5e26056081514fe","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/const.js","hash":"94761a417f321678eca6c95cc169171017767d9a","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/namespace.js","hash":"85fb2005604feb9a7b777f9e37d9d75581fd17a2","modified":1417455549000},{"_id":"themes/202accepted/node_modules/dateformat/lib/dateformat.js","hash":"4d74d612f5c516cd14a472ffcd7c8b1bf7c2ecb1","modified":1317208002000},{"_id":"themes/202accepted/node_modules/argparse/lib/argument_parser.js","hash":"837404cd55846b7212ea9fa0a0c2d53976ce2844","modified":1417455549000},{"_id":"themes/202accepted/node_modules/dateformat/test/test_weekofyear.sh","hash":"6438e2c97d0c17982bc3c191f71eeab1e47b36d9","modified":1317208002000},{"_id":"themes/202accepted/node_modules/dateformat/test/test_weekofyear.js","hash":"349f414ec587f90e920fe8e9a11f55b188e5ff2e","modified":1317208002000},{"_id":"themes/202accepted/node_modules/coffee-script/bin/cake","hash":"800093682cd061078b68634a2940222459f7fbc6","modified":1512053955303},{"_id":"themes/202accepted/node_modules/coffee-script/bin/coffee","hash":"53426d453e8518879d69c1d8925b91434ebf8f80","modified":1512053955302},{"_id":"themes/202accepted/node_modules/exit/test/exit_test.js","hash":"fea2036b048caf700f06ac02ee7e5c7f9d8b7e38","modified":1380115375000},{"_id":"themes/202accepted/node_modules/exit/lib/exit.js","hash":"6252a9646834bf1332bd0c5659856877e445b030","modified":1385493708000},{"_id":"themes/202accepted/node_modules/coffee-script/extras/jsl.conf","hash":"dabefa7040209a8c2c6194e2eb3a4332dc0fcd42","modified":1290392533000},{"_id":"themes/202accepted/node_modules/eventemitter2/lib/eventemitter2.js","hash":"12e2481da72369e2887f47099362f84f81cf1048","modified":1403539644000},{"_id":"themes/202accepted/node_modules/findup-sync/lib/findup-sync.js","hash":"a62291fcd7de02d73513f01354aa2f8dfd208937","modified":1362770767000},{"_id":"themes/202accepted/node_modules/findup-sync/test/findup-sync_test.js","hash":"efe592317bc7d3dcef89ccf7023e4ce3df75e832","modified":1362770767000},{"_id":"themes/202accepted/node_modules/getobject/test/namespace_test.js","hash":"18f6003d346b34358c31340007e5806f288cbe16","modified":1385064314000},{"_id":"themes/202accepted/node_modules/glob/examples/usr-local.js","hash":"a82d273b8acbbb0728d1d8ba541f406ecb91d612","modified":1326931644000},{"_id":"themes/202accepted/node_modules/getobject/lib/getobject.js","hash":"377c18115d45974a4b4bc08e2fd27f3256476f9b","modified":1385064254000},{"_id":"themes/202accepted/node_modules/glob/examples/g.js","hash":"c5e6ed35ba98b68b876256e9fa7b15fbac79aa27","modified":1326929552000},{"_id":"themes/202accepted/node_modules/glob/test/cwd-test.js","hash":"3d7413c1706b868c4ee8730ecd58ebb87edcc137","modified":1358897151000},{"_id":"themes/202accepted/node_modules/glob/test/nocase-nomagic.js","hash":"0c1f3e2cf40a95940f301925052226c4c278c9e4","modified":1361809186000},{"_id":"themes/202accepted/node_modules/glob/test/00-setup.js","hash":"78da07aaaadb2b79467173cd94329dd64130de62","modified":1358897151000},{"_id":"themes/202accepted/node_modules/glob/test/pause-resume.js","hash":"2dfb282ca01b1c5187ec0aa8793560c89ef32d51","modified":1358897151000},{"_id":"themes/202accepted/node_modules/glob/test/root-nomount.js","hash":"13bdc59237d69e3fe0bbdea9d14a55b5c3cdeea7","modified":1358897151000},{"_id":"themes/202accepted/node_modules/glob/test/root.js","hash":"4ea6f42a975120c5fd51613775174a8ab1ceeaad","modified":1358897151000},{"_id":"themes/202accepted/node_modules/glob/test/zz-cleanup.js","hash":"cac3aa9dca8beaaffe9281f29ce2703a0211f345","modified":1358897151000},{"_id":"themes/202accepted/node_modules/globule/lib/globule.js","hash":"618ff718047feb15254e5cf24ce5af4fd6dc1812","modified":1365709870000},{"_id":"themes/202accepted/node_modules/glob/test/bash-comparison.js","hash":"c7e27558c5870b5edc3bcd461c88f133fb22b1e2","modified":1358897151000},{"_id":"themes/202accepted/node_modules/globule/test/globule_test.js","hash":"4564e9adeb6bb1e1e67da9dc664a574d282de006","modified":1365707547000},{"_id":"themes/202accepted/node_modules/glob/test/mark.js","hash":"f28c2ca48f13937b0a202f6f08219c0ad5b81924","modified":1358897151000},{"_id":"themes/202accepted/node_modules/glob/test/bash-results.json","hash":"05fd3e5b75f1b50f6eede1f544bbe7a8481e5097","modified":1361809529000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt.js","hash":"ca781fe2be38dd38d6185e8bda929681fef5cd33","modified":1399664190000},{"_id":"themes/202accepted/node_modules/graceful-fs/test/open.js","hash":"cba0c1a5ea28e35bebe95e5dfeea93fc73540d90","modified":1371011144000},{"_id":"themes/202accepted/node_modules/graceful-fs/test/ulimit.js","hash":"1b4b7cefd7fcaa3f78aab638a96c7c2f7aeb5cf9","modified":1371058145000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/docs/clean-examples.md","hash":"321f291ac7eb4953f74557876788e6e204d3123e","modified":1373659716000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/docs/clean-overview.md","hash":"87b33d3d7b8deabf64925094163af88dfd10be69","modified":1373659716000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/docs/overview.md","hash":"a7974f178895c9b227914c4c90d07775b100999c","modified":1373659716000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/test/clean_test.js","hash":"7c7328553c6cb124d6b5c10e0a085fb0d471b894","modified":1373659716000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/tasks/clean.js","hash":"5fa079752d19443367a39e1e5bf4b16ebc16881f","modified":1373946235000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/tasks/copy.js","hash":"8db2e37633009a0bc3567f64d2b4f7a3e7a97f86","modified":1364328263000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/docs/copy-examples.md","hash":"a43e07de5a9f49242c02803f0217f25c481fbffe","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/docs/copy-overview.md","hash":"1773dc725ac12c0ea3e85326d0d1b3d9e7ad3fd2","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/docs/copy-options.md","hash":"eb2247a7d7635f50c19edde354f03e0b271fa69f","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/copy_test.js","hash":"82ddaa9fca306ec340635e6ebb3f919bfe2b4435","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/docs/overview.md","hash":"45a9f280ca24504dccdcb14ab79589d8cb71d59e","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt/internal-tasks/subgrunt.js","hash":"3b415376df01baa985a53878f5669fbea576776a","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt/internal-tasks/bump.js","hash":"7ce258496aaec202e8ce172a0b3e50d5aaf9d01f","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/test/index.js","hash":"814509b8ba9bf413763ee7df8c37d1eae5f118ec","modified":1450886402000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/docs/clean-options.md","hash":"f448abca640f52214e679ba0198b1e3ab0e95ddd","modified":1373946235000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/test/index.js","hash":"72cc1aba54893536c22943deae22ff04439819d6","modified":1432671143000},{"_id":"themes/202accepted/node_modules/hooker/dist/ba-hooker.min.js","hash":"6cf4ad3546d824fbe25f66b1ee1fd51486c85ed4","modified":1327894459000},{"_id":"themes/202accepted/node_modules/hooker/dist/ba-hooker.js","hash":"f9b5b48e88a1df429688882546a074aefb67ab23","modified":1327894459000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/index.js","hash":"2f95a16f6bdc7745a5ead0842fd053522cbf42eb","modified":1399651531000},{"_id":"themes/202accepted/node_modules/hooker/test/hooker_test.js","hash":"c7413abf91cd1006681829913ce07c13df82980b","modified":1327870698000},{"_id":"themes/202accepted/node_modules/iconv-lite/encodings/big5.js","hash":"59e5fcae2f129b09d9432dedf5b70505cc6b7cba","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/encodings/gbk.js","hash":"e9e79e14f2cdd1039aafe9c967779b3ed5020bcf","modified":1373851113000},{"_id":"themes/202accepted/node_modules/hooker/lib/hooker.js","hash":"8e27b6af4c39931dfca517a50dd3bd886ec746f0","modified":1327503204000},{"_id":"themes/202accepted/node_modules/iconv-lite/encodings/singlebyte.js","hash":"2430737fa82b9beb1032b2495319325addca5379","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/big5-test.js","hash":"0fe2ebde723caf8c730a509ef8d7c67b3c15e5ca","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/big5File.txt","hash":"3436d4f12831c6d14d9849f4aeaf7f6e337e0773","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/generation/generate-singlebyte.js","hash":"5de2c9b10c468c6016b70e16a8e449317eb95593","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/gbk-test.js","hash":"6d522eee7746a96fb37a5c31797dcfedc15daca4","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/cyrillic-test.js","hash":"187f9aff6992aacbd08411a337f891d37b9b248d","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/greek-test.js","hash":"6b6882bf4648d4d9e081c70c5dcd78b8595649e4","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/performance.js","hash":"8b6e8d0bcc1408cb22e2f2e11f9a04f80d30de8f","modified":1369516868000},{"_id":"themes/202accepted/node_modules/iconv-lite/generation/generate-big5-table.js","hash":"15a22de91844a507582afa9700dd27275a79e74e","modified":1373851113000},{"_id":"themes/202accepted/node_modules/js-yaml/bin/js-yaml.js","hash":"53bede9c65e71860490461458ee5baae4efefe56","modified":1512053955335},{"_id":"themes/202accepted/node_modules/js-yaml/examples/custom_types.js","hash":"e49185f27da24f9d878d967b3d5cd21e1b99ef0b","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/examples/custom_types.yaml","hash":"4b5833b73d3f6d35520c0fba07a94e246272eeaf","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/examples/dumper.js","hash":"2147f88a765068046f46a7d2cf1f0937449b0ed7","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/examples/dumper.json","hash":"8bb8f301ec4f591e56cbf9848fe8807210b6ac38","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/examples/sample_document.js","hash":"9f8fa3a12991de01896acab2998109cf54282e27","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/examples/sample_document.yaml","hash":"d7ccb166f882439d1bc97b42fdc31e2bb4d801a5","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml.js","hash":"bf2d42d404f1659ad62d15bcf262c05dcf615048","modified":1366987222000},{"_id":"themes/202accepted/node_modules/lodash/lodash.js","hash":"4bba0d83d0daaf993d10e1399d93c2f518b5e04b","modified":1356140414000},{"_id":"themes/202accepted/node_modules/lru-cache/lib/lru-cache.js","hash":"d4091806568fef3089f4522f09d5976d91912dd4","modified":1448475000000},{"_id":"themes/202accepted/node_modules/lru-cache/test/basic.js","hash":"caffd5539b398fb1f369ed259c14dc4d00eda244","modified":1448474452000},{"_id":"themes/202accepted/node_modules/lru-cache/test/foreach.js","hash":"5493ce987892f9c740837c36acd5240d9cf93644","modified":1448413217000},{"_id":"themes/202accepted/node_modules/lru-cache/test/memory-leak.js","hash":"5b5690f4e32c4d2fc501e7f408fdcfd25f8b4e3a","modified":1435688444000},{"_id":"themes/202accepted/node_modules/lru-cache/test/serialize.js","hash":"6383a06c3f56cce6eb364b66f2301eea00db5828","modified":1448474452000},{"_id":"themes/202accepted/node_modules/minimatch/test/basic.js","hash":"91bf75896c5b86f7f8b312e2fab75fc38785371e","modified":1387171514000},{"_id":"themes/202accepted/node_modules/minimatch/test/brace-expand.js","hash":"a274bc9dea6fc8289ad997754bd58ee36bf47197","modified":1324537594000},{"_id":"themes/202accepted/node_modules/minimatch/test/caching.js","hash":"310366ed1bb9228269562ca69f27534cfa611dcd","modified":1332887728000},{"_id":"themes/202accepted/node_modules/minimatch/test/defaults.js","hash":"681bc0bd4e4e1fc342418109294e4d151f992e58","modified":1332985301000},{"_id":"themes/202accepted/node_modules/minimatch/test/extglob-ending-with-state-char.js","hash":"bf57836fc4f7b64e8920baad6945880901a613c0","modified":1387223424000},{"_id":"themes/202accepted/node_modules/nopt/examples/my-program.js","hash":"de3d4a6a7f350fd6846d3ae06334d1fafffc7054","modified":1317851223000},{"_id":"themes/202accepted/node_modules/nopt/lib/nopt.js","hash":"f53ca0f12e0125ecda5b8c13db24c9bd5a3f0150","modified":1317851223000},{"_id":"themes/202accepted/node_modules/nopt/bin/nopt.js","hash":"46110bf51a470f7413fb5da0abfe8790030b6762","modified":1512053955318},{"_id":"themes/202accepted/node_modules/rimraf/test/run.sh","hash":"ad4825520114fcec855dae27491c0af1c61a22b8","modified":1399391468000},{"_id":"themes/202accepted/node_modules/rimraf/test/setup.sh","hash":"a7dafdbc10717be56c98d42550c2bd85b8471c72","modified":1312833801000},{"_id":"themes/202accepted/node_modules/rimraf/test/test-async.js","hash":"7f6b6decc67742212d67529de9a2ee150bde37d0","modified":1312833666000},{"_id":"themes/202accepted/node_modules/rimraf/test/test-sync.js","hash":"c84d98b3e885de4a279527831539660cefa23cb3","modified":1312833666000},{"_id":"themes/202accepted/node_modules/sigmund/test/basic.js","hash":"6424a3fd17afb57e34890c0c330ead99ceb5af25","modified":1344873467000},{"_id":"themes/202accepted/node_modules/which/bin/which","hash":"a57845c25b005b3298ba1482d3fe8fd988e0b7ea","modified":1512053955339},{"_id":"themes/202accepted/node_modules/underscore.string/lib/underscore.string.js","hash":"c204ddb71d8a8c768a45267dc35a7cc2b6ebaabc","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/dist/underscore.string.min.js","hash":"4ececb13db18e636e63f9f903a95c8686214328e","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/run-qunit.js","hash":"4faca6ac345dc4f9a0ab7fc3682575bbea2528d7","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/speed.js","hash":"6c8a486ff2c4a70a640f4b6abde46d39d7bce584","modified":1373452312000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/gbkFile.txt","hash":"c095a2906fa6a7d71a8190d1d66c3678d2637cf8","modified":1322051475000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/turkish-test.js","hash":"54a0d7f8fea844b78541a5d019dff06bf37287a0","modified":1373851113000},{"_id":"themes/202accepted/node_modules/iconv-lite/test/main-test.js","hash":"bb5b5ce9b6714685178cef4249d03a29dadfd503","modified":1373851113000},{"_id":"themes/202accepted/node_modules/underscore.string/test/strings.js","hash":"35fc5935e5d3de8943c64e1c5079bd0a5c7a0bfa","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/strings_standalone.js","hash":"3d7968ba71fc5040df11c009cde2a2a983632569","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_standalone.html","hash":"86605f225d9d22a42e9df65360ee95dbd7ac98db","modified":1373449276000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test.html","hash":"59ba8455b0abcbcecea5af7dc9daece4621b88d1","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-git/tasks/git.js","hash":"5502de5a59ab9c12712633af74f15d12668e7e4d","modified":1403249632000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_archive.js","hash":"4f7987eda505e028f7d6a6e5209441e0ef85c2d0","modified":1400491527000},{"_id":"themes/202accepted/node_modules/underscore.string/test/underscore.js","hash":"4291452b73960fbb7b83d181cd2fedbff1f386d1","modified":1373452312000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_checkout.js","hash":"68950ce4b334c226652ed6f448c78e99494e6338","modified":1400491998000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_clean.js","hash":"7880398fce630900dbb3f91753cb9b604e3a19ed","modified":1398687678000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_commit.js","hash":"4c1695bf3e0f3db5df6beb65b9a2c6c8982b5271","modified":1403154021000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_clone.js","hash":"1ae7facf595755859cf2a7c07b14ddfa7f3f49c6","modified":1403249632000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_pull.js","hash":"9223bd9dcbcc57e955c04854abd1400c8aa54d5d","modified":1394606328000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_push.js","hash":"9a6066d24606308595505a47ed560315e0df420e","modified":1400491998000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_stash.js","hash":"90623ec7342c17757f70c3f6fc3caadb77afb6bc","modified":1398687678000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_tag.js","hash":"7db9c98af4419e54573dd21bbdf9af2acdc6ca61","modified":1398687678000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/commands.js","hash":"0e1c98db9e6a65f4f86e308eed70bca151bfb121","modified":1394606350000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_rebase.js","hash":"aa955d88c9329e31e599eed2c92bdcd821f0265d","modified":1398687678000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_reset.js","hash":"8c0df80201959704b5e75f38776b02393aa8fdc1","modified":1398687678000},{"_id":"themes/202accepted/node_modules/grunt-git/lib/command_merge.js","hash":"a74d60ede815dff0c4554ae68620734b1a797c3e","modified":1403525250000},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1511415204946},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/libpeerconnection.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1373470725000},{"_id":"themes/202accepted/node_modules/findup-sync/test/fixtures/a.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1351803833000},{"_id":"themes/202accepted/node_modules/findup-sync/test/fixtures/aaa.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1351803830000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/libpeerconnection.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1373532129000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/libpeerconnection.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1373532129000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/.npmignore","hash":"66fb5c4102dee8a7952eb6fddf1699b7da8e1001","modified":1416055370000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/README.markdown","hash":"619fde05187f99b059fb15173db9a571ccb6f709","modified":1416055370000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/foo.js","hash":"0dfec71d7b188ace5590d9eef6aa34391295801e","modified":1373472169000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/gulpfile.js","hash":"32e37ce4b100f40c60adc9930c4903a7314f92f5","modified":1416055370000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/package.json","hash":"0c21fb89b6ba1e28b28d61118a273cd5c8648644","modified":1512053955224},{"_id":"themes/202accepted/node_modules/argparse/lib/action/count.js","hash":"dcfbf45e6885e5bed742d231a14f8559ef353d33","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/append.js","hash":"2c0b080e3b955df141fe600f6e98551a5e05547c","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/help.js","hash":"1e4b42c36b216cb0e3c79fb1e887a835e947355e","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/store.js","hash":"a2c72cb7a95cb97a4e83475ad29063a0ef322b3b","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/subparsers.js","hash":"e86f4e29ebc3ea3a1a705e9a229e8c98481ecd33","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/version.js","hash":"9039a1f51c7c978f202b6302d6a61b0ce0b22145","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/argument/error.js","hash":"ebbd30aee8c24eca5643fa73dbf0963244d3bdb7","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/argument/exclusive.js","hash":"c38a1586d7e145698239ccfd20c1645858d8ca6f","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/argument/group.js","hash":"ea26a609a1b4f0308b672c507880495689629ebd","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/help/added_formatters.js","hash":"096905e3eb47ba6addbe91cb339eecc753949e5c","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/help/formatter.js","hash":"4de986ab7f0255ead9b5d3f4c13060acf9f2eacd","modified":1417455549000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/browser.js","hash":"4423f640e2abc6084909684ed41fcd1ace7d9637","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/cake.js","hash":"192fec24c83ba2fe7fd2164916062b62aba28bcf","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/coffee-script.js","hash":"f9753fae5bd3491445fde95dad34ae1762091011","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/command.js","hash":"7d36e8cb75cb8914ef1e30059180e720bc367891","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/grammar.js","hash":"be5bd0ff0915b07f96d326ce2ea590b1a342cc83","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/helpers.js","hash":"3426589fd8c47fd8f44ef88e3980973c6b0fb128","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/index.js","hash":"d23a352834a7a3ee247ea1fd26bfaac814bb8f3d","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/lexer.js","hash":"0254182f9b654cb3698b905aeb7a54e5b92f2c7a","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/optparse.js","hash":"9d8f40a21ccbd9e811580887bbacb37ea3fe49b7","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/repl.js","hash":"fc01ef7f75e6aaa052b992f2b5d2c637ecf5a77b","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/rewriter.js","hash":"cb1ea44353bdcf0c6360ce3f83fb0377f8b6995c","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/scope.js","hash":"2ead1098e199a7d4ad996bec05b2778eb7deebff","modified":1337099669000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/10-stderr.txt","hash":"09b203771aa78e22b0c59709a2f126aa8ab54114","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/10-stdout-stderr.txt","hash":"993088f87819e31b1ce2ea5ac71300955343d305","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/10-stdout.txt","hash":"c2d24f38ecae881032783bc2d45566b00bcd4bd0","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/100-stderr.txt","hash":"0231d229f37c3ac7a83b1efbdcfb3eab956ca64f","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/100-stdout-stderr.txt","hash":"ba4138ef0976213ac79172f9bc7f3ed840096922","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/100-stdout.txt","hash":"29c497636b27eb6bd92856adac923abbaa5f2c58","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/1000-stderr.txt","hash":"cad0c02e259a49bb1487aec3484cd23a77cd57f1","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/1000-stdout-stderr.txt","hash":"6c53beb52a1974cc3be94ff23391885d27a09e49","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/1000-stdout.txt","hash":"862a205905c64a3b516d2cab0ca6dd2557046a83","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/create-files.sh","hash":"a54259d548395ff90501a6ce5af14329128b36b8","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/log.js","hash":"074a031032e9ea28c3e80195168e02be663f67e4","modified":1385493531000},{"_id":"themes/202accepted/node_modules/exit/test/fixtures/log-broken.js","hash":"496a5ab7514d6bf689e20e999ace65595795e47e","modified":1385493531000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/.npmignore","hash":"df0230e54e04f0f4739f4cdf671570dced4a1223","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/.travis.yml","hash":"b0e08ffb1a32bb17941785759a4154f995139ae8","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/LICENSE","hash":"a042a6c4248c82d810b9b617958f222c0de0f6c2","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/README.md","hash":"af862ac74c2748081577030878c943e1ae9aeb64","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/glob.js","hash":"6864fd02cb10c0a019afa98bb1f63f25f03851e4","modified":1393399612000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/package.json","hash":"2f1014ff371b899a133937823618821744a48230","modified":1512053955230},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/LICENSE.txt","hash":"9c21585a158f39abcf1ae6e2c7f98cdd3a3d568e","modified":1430076638000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/README.md","hash":"ce0f6ea6d448d8fdcf2832c3788821e857e2c550","modified":1430078503000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/package.json","hash":"2947b92b8f645a8132470aec15da55252a590362","modified":1512053955228},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1372866257000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/LICENSE","hash":"4a1927e74796f06ac7e7a687ca6b44d39c65d8f4","modified":1311966493000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/README.md","hash":"db98f83f21fa7f9459e78270ed5457ffceeb67ee","modified":1399941882000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/minimatch.js","hash":"b1c4ad104b40c30dab77239ab61821d54bf14b18","modified":1399942015000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/package.json","hash":"c027dc4a2de977faba57803cb2d1b929df903267","modified":1512053955230},{"_id":"themes/202accepted/node_modules/glob/node_modules/inherits/LICENSE","hash":"3b0e8d58a362b1787ef3504fba4f593b22f3cee4","modified":1440704194000},{"_id":"themes/202accepted/node_modules/glob/node_modules/inherits/inherits.js","hash":"0e8b7c5a1e8020e3a93191c12bb0bd529dacfb6e","modified":1302136514000},{"_id":"themes/202accepted/node_modules/glob/node_modules/inherits/README.md","hash":"baafb44348cace2d60b31a3663f43e856a7ba282","modified":1302136514000},{"_id":"themes/202accepted/node_modules/glob/node_modules/inherits/package.json","hash":"0fffcfe9bd9de219de2be7ef8c6971eb0f639f0e","modified":1512053955229},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/LICENSE.txt","hash":"1405d83ff498af3a9fc5bda1b076523e95c45904","modified":1427729364000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/README.md","hash":"dd442c502cd26ed6c47b83ab6fa0024c601ad346","modified":1427729993000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/package.json","hash":"8d9e3989bb9f35ce69b04045c6972834625f2dc0","modified":1512053955230},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/config.js","hash":"b42171146d2e80591e882fcaaaabe87f9c4a1ca6","modified":1399904725000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/cli.js","hash":"0131125f183bffc8f524f84b8a41903860b47729","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/event.js","hash":"206d9794c9aac7b451b74f4851f7a936064af36b","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/fail.js","hash":"289a8f6592b94c6cc01a16612c483419db43e187","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/file.js","hash":"5707d7bb25eae9b5f6d749da01a09163178b28ae","modified":1399664145000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/help.js","hash":"6f91747e4cbc7c0422ac7a1acb6027ad2f949257","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/option.js","hash":"cd41f58261d42f1290614a1799f5e0ae59ff44b0","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/task.js","hash":"a0a961413f5fe8491a7fa4a48f3590a1cff1f278","modified":1399664145000},{"_id":"themes/202accepted/node_modules/grunt/lib/grunt/template.js","hash":"87b8e1aad9f328fe360649a17babbc77121980c0","modified":1399389581000},{"_id":"themes/202accepted/node_modules/grunt/lib/util/task.js","hash":"0e2172bdecb4eb9a0d234d3ed8cac5e79282e290","modified":1399664396000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/single.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/fixtures/.hidden","hash":"bbc357cf5d8b12bc75cd6d697dc33db6d590ec43","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/fixtures/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/fixtures/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/LICENSE.txt","hash":"9c21585a158f39abcf1ae6e2c7f98cdd3a3d568e","modified":1430076638000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/README.md","hash":"ce0f6ea6d448d8fdcf2832c3788821e857e2c550","modified":1430078503000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/bower.json","hash":"e38a1cf256550770bed49a6324a2347386d276e4","modified":1416055370000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/.travis.yml","hash":"e9a0fd1f244a3b4a9b292714cd563bfac71e2aa4","modified":1416055370000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/component.json","hash":"be60b0b0df2fd2efc7f675082cfd4aa670ecb747","modified":1416055370000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/package.json","hash":"a18e95ee3fe4805120d5b3f155c4e5e6c320576b","modified":1512053955229},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/README.markdown","hash":"d5862c720a95a582201ff26ff11bdf44911dde36","modified":1373890137000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/Rakefile","hash":"aebecba3b976b65bb74d63704f37d6f74d7419cf","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/component.json","hash":"b929b12ac3a7bdf402fa87863621259a39a883c2","modified":1373890112000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/package.json","hash":"f21a4e4a7e241b0a62d65ca7294475bac06d440f","modified":1512053955229},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/Gemfile","hash":"dab95a91b5a30ded482c35d9efbc00d33a9322aa","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/.travis.yml","hash":"e33e8d35cf94d67804af457d709d8db1d16f73ae","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/Gemfile.lock","hash":"9236e4ffa7c8ca067369e9b77bd26bc850fd51ea","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/LICENSE.txt","hash":"9c21585a158f39abcf1ae6e2c7f98cdd3a3d568e","modified":1430076638000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/README.md","hash":"ce0f6ea6d448d8fdcf2832c3788821e857e2c550","modified":1430078503000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/Gemfile","hash":"dab95a91b5a30ded482c35d9efbc00d33a9322aa","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/package.json","hash":"0ea307c7e1c2eeb265e09e7363706f821b274421","modified":1512053955229},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/Gemfile.lock","hash":"9236e4ffa7c8ca067369e9b77bd26bc850fd51ea","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/.travis.yml","hash":"e33e8d35cf94d67804af457d709d8db1d16f73ae","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/README.markdown","hash":"d5862c720a95a582201ff26ff11bdf44911dde36","modified":1373890137000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/component.json","hash":"b929b12ac3a7bdf402fa87863621259a39a883c2","modified":1373890112000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/fixtures/Gruntfile-execArgv-child.js","hash":"43e52894de367ccc3054bc5a12b1943283ba04c5","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/Rakefile","hash":"aebecba3b976b65bb74d63704f37d6f74d7419cf","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/package.json","hash":"9cb2953a3c71f3ae54737cae5780da269cda4c10","modified":1512053955229},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/fixtures/Gruntfile-print-text.js","hash":"ff78c7a71ec640d97a322ef16d44a5a4342bd080","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/fixtures/exec.sh","hash":"4d07d64d1c436b521d17794bd219e4fde651d325","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/fixtures/Gruntfile-execArgv.js","hash":"98722db3df31a868c82e53cd73fd7d238df236ad","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/fixtures/spawn-multibyte.js","hash":"a9c874b79306cb4b16aaf33e0e74a425ca7c9987","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/fixtures/spawn.js","hash":"6bb82176253c874a5a973330e9a7e77941f476c2","modified":1397053407000},{"_id":"themes/202accepted/node_modules/grunt-legacy-util/test/fixtures/exec.cmd","hash":"bd98738b7612db9ff9f8c689f1e7976e7ef6d663","modified":1397053407000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/loader.js","hash":"6e36b5b0809cc8aa141fe178c84bb8e9692846e2","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/mark.js","hash":"c31f189315110ac7e78ff37db1c3f4236a9dee73","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/common.js","hash":"aa6880c2c2d4512cc3d1610a4f88771de0945265","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/require.js","hash":"0810bf85ed6067da8140ee5467dfe96578f152c2","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/schema.js","hash":"024b6c3898c7f52e1ac6f77d8e3e3c75b171d50b","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/exception.js","hash":"4b150c5aaa8d15c292c555eaa1c357cd24b2da07","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type.js","hash":"d5b780ef4539d1ccdf9cc381e7ca5556a10b1c64","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/dumper.js","hash":"a4007c42f40e70a8ba9cc0bba2fe598b4abcfe26","modified":1366987222000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/chaining.js","hash":"ce18270861bc5dc97fc6c3160a0887c7c32d46b6","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/arrays.js","hash":"af2673c3e10aeb96729a05027bcfbf4a4e6321f4","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/collections.js","hash":"9e9489886a3885fd17ec54eeef4c891be64deae7","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/functions.js","hash":"ec06bd7308e8a8dec38e94e16385c48da0285e71","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/objects.js","hash":"c5e60f037b4e618e890def438bf60b19ca3ce6a6","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/speed.js","hash":"4ee4d8f743626528a6e4920332ccaa01c99ed661","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/temp.js","hash":"add234fcb75e4f1466a9676c3eacaceab43d4f36","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/test.html","hash":"d0a61570a14053d95422855c4454c9801de81722","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/temp_tests.html","hash":"c72202c306374de3297c50d3288c40d6cccfc863","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/utility.js","hash":"f58d2a42ecda0f6c29d94dcad63f21a456255f9e","modified":1373452312000},{"_id":"themes/202accepted/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1511415204944},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/nodes.js","hash":"e3e62eb8fe829c0c76844cc77e9003d2339115e6","modified":1337099669000},{"_id":"themes/202accepted/node_modules/coffee-script/lib/coffee-script/parser.js","hash":"ccae8ddbc6192bccb9a7600fde79f8d45fd97aff","modified":1337021135000},{"_id":"themes/202accepted/node_modules/findup-sync/test/fixtures/a/foo.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1351803839000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/argparse/node_modules/underscore.string/lib/underscore.string.js","hash":"a5739e6f03fb1a1955b0b3fda7e93c357e05d448","modified":1416055370000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/store/false.js","hash":"2ce4c8417090063fe29d953b04b7c37ad52a1bc2","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/store/constant.js","hash":"ee2f67ed3e7cd9474021add61f9f60bc80019a9d","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/store/true.js","hash":"fb161bdcfab726b0fb8e8f806fd59cc5c9474224","modified":1417455549000},{"_id":"themes/202accepted/node_modules/argparse/lib/action/append/constant.js","hash":"7fc947de30068badd953874f3f331705fa13cdaa","modified":1417455549000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/bash-comparison.js","hash":"c7e27558c5870b5edc3bcd461c88f133fb22b1e2","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/examples/g.js","hash":"c5e6ed35ba98b68b876256e9fa7b15fbac79aa27","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/examples/usr-local.js","hash":"a82d273b8acbbb0728d1d8ba541f406ecb91d612","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/00-setup.js","hash":"78da07aaaadb2b79467173cd94329dd64130de62","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/bash-results.json","hash":"962f4955b403eeb5a3ef3870993a62c5df4cea90","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/cwd-test.js","hash":"3d7413c1706b868c4ee8730ecd58ebb87edcc137","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/new-glob-optional-options.js","hash":"15b4092f72eb8237a73abaa69ddea1f9bcf686bd","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/globstar-match.js","hash":"f6ec5cde93f347e296c634002a99e73780e4c48e","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/mark.js","hash":"cee3e39b2ccf9795360074d5f6a87ecd62d00241","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/nocase-nomagic.js","hash":"cf9482221bae9e253da8262f159135cd13fbb19d","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/pause-resume.js","hash":"2dfb282ca01b1c5187ec0aa8793560c89ef32d51","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/readme-issue.js","hash":"7dfaf81e1592bfa3f05e53560af46093053dca33","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/root.js","hash":"4ea6f42a975120c5fd51613775174a8ab1ceeaad","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/root-nomount.js","hash":"13bdc59237d69e3fe0bbdea9d14a55b5c3cdeea7","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/stat.js","hash":"01545c380b4167f3bbc36a6bc8285d1158ded7de","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/glob/test/zz-cleanup.js","hash":"cac3aa9dca8beaaffe9281f29ce2703a0211f345","modified":1393399375000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/dist/lodash.compat.min.js","hash":"1f42aff57795b266ad770029b34f9c91e910c910","modified":1430076089000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/dist/lodash.min.js","hash":"8d11f71e6c10af1baa47f42b06c229b372367985","modified":1430076022000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/dist/lodash.underscore.min.js","hash":"0422117b2293765b5497d3cf6ec88a2574d53216","modified":1430076000000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/test/brace-expand.js","hash":"a274bc9dea6fc8289ad997754bd58ee36bf47197","modified":1324537594000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/test/defaults.js","hash":"4f30a9b91bcada2aad8a258a3e4abd25e6d7dfa1","modified":1399941975000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/test/basic.js","hash":"91bf75896c5b86f7f8b312e2fab75fc38785371e","modified":1387171514000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/test/caching.js","hash":"310366ed1bb9228269562ca69f27534cfa611dcd","modified":1332887728000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/minimatch/test/extglob-ending-with-state-char.js","hash":"bf57836fc4f7b64e8920baad6945880901a613c0","modified":1387223424000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/dist/lodash.compat.min.js","hash":"c13a20ea314c9ac4ad3e1777e2e28005aad0b092","modified":1427729433000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/dist/lodash.min.js","hash":"3400d1295b3f94d65c3dd30f338298c22f50b817","modified":1427729433000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_files/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/test/fixtures/sample_long/long.txt","hash":"8b26a8dfbc8d252f3d74e996895d5f03e764e5eb","modified":1373659716000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/dist/lodash.underscore.min.js","hash":"27c1f9f657ba13277ef48b5cb425c75ea69ff20b","modified":1427729433000},{"_id":"themes/202accepted/node_modules/grunt-contrib-clean/test/fixtures/sample_short/short.txt","hash":"8b26a8dfbc8d252f3d74e996895d5f03e764e5eb","modified":1373659716000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_files/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/two.js","hash":"9971ef6e49cf03ae10f142377dcf12e69a6d4063","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/fixtures/folder_one/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/fixtures/folder_two/two.js","hash":"9971ef6e49cf03ae10f142377dcf12e69a6d4063","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/dist/lodash.min.js","hash":"8d11f71e6c10af1baa47f42b06c229b372367985","modified":1430076022000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/dist/lodash.compat.min.js","hash":"1f42aff57795b266ad770029b34f9c91e910c910","modified":1430076089000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/dist/lodash.underscore.min.js","hash":"0422117b2293765b5497d3cf6ec88a2574d53216","modified":1430076000000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/lib/underscore.string.js","hash":"78cd42aa76fc0aedf1d4c87acf5d0dc65df09af1","modified":1373890128000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/strings.js","hash":"13f980b52f29d393d3dbc5e70aa4f6a7f31d72bd","modified":1373889747000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/speed.js","hash":"1679135dec8aa60e5e8ef8a99c689eec1af61389","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/run-qunit.js","hash":"7a2f386db195670628c3d66d229327ebc02dab40","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/strings_standalone.js","hash":"d68f872a3522bf6898981a4a95cfaf2f709c66e1","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/dist/underscore.string.min.js","hash":"d9d13d390cbc4422b16a519532491467d938f618","modified":1373889747000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_standalone.html","hash":"86605f225d9d22a42e9df65360ee95dbd7ac98db","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/underscore.js","hash":"934a4bcb13026508e16223cf9f00bb4a38c321f1","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test.html","hash":"59ba8455b0abcbcecea5af7dc9daece4621b88d1","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/dist/lodash.compat.min.js","hash":"1f42aff57795b266ad770029b34f9c91e910c910","modified":1430076089000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/dist/lodash.min.js","hash":"8d11f71e6c10af1baa47f42b06c229b372367985","modified":1430076022000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/dist/lodash.underscore.min.js","hash":"0422117b2293765b5497d3cf6ec88a2574d53216","modified":1430076000000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/lib/underscore.string.js","hash":"78cd42aa76fc0aedf1d4c87acf5d0dc65df09af1","modified":1373890128000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/strings.js","hash":"13f980b52f29d393d3dbc5e70aa4f6a7f31d72bd","modified":1373889747000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/speed.js","hash":"1679135dec8aa60e5e8ef8a99c689eec1af61389","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/strings_standalone.js","hash":"d68f872a3522bf6898981a4a95cfaf2f709c66e1","modified":1373532016000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/run-qunit.js","hash":"7a2f386db195670628c3d66d229327ebc02dab40","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/dist/underscore.string.min.js","hash":"d9d13d390cbc4422b16a519532491467d938f618","modified":1373889747000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_standalone.html","hash":"86605f225d9d22a42e9df65360ee95dbd7ac98db","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test.html","hash":"59ba8455b0abcbcecea5af7dc9daece4621b88d1","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/underscore.js","hash":"934a4bcb13026508e16223cf9f00bb4a38c321f1","modified":1373531985000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/schema/minimal.js","hash":"805fb3d8cf67eab956b3ca7b9e6a6f0c5d307cf8","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/schema/default.js","hash":"8044658b9819a8ba6f9ce5d2dff92158b5ddd195","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/binary.js","hash":"0f620a424c5eaa075e48a4c0699a0274c0e6f868","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/schema/safe.js","hash":"078e46ef59d7560c819dd647bb0e1b5aa78359a8","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/float.js","hash":"79d53b075433d0712e7c25e68877adcbce8e3a9c","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/bool.js","hash":"950edff77d2fd89801136a177ba61636e840602b","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/int.js","hash":"1e5ade9ef96dda4d2b481d4559b82b7cc6a0ee9d","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/map.js","hash":"06e8061824254235ec97c182555cf8368ab5db1c","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/merge.js","hash":"7e46411bdaebc381a1100e8d52d9e7774ca0a680","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/null.js","hash":"2b6764c4e0a6f5802a1c52a37915708d7b7fed97","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/omap.js","hash":"d207a0273cce987105ce8ad3cfb1bf912c9ef02f","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/seq.js","hash":"c887d46220e1eae2038e32f252aaa3f6c5790e1a","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/pairs.js","hash":"455e1d0a2306d026f082b632f5513ae3c830ded8","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/str.js","hash":"0ea939e7f2ba84e8a8a23a3202245f2f853fa73f","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/timestamp.js","hash":"75a00471994d193e70ecfa0b3d607e62f07f24a4","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/set.js","hash":"ae4bf4a01b9e308bb6d44eb25f57995fd058a472","modified":1366987222000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/vendor/jslitmus.js","hash":"141af7191b0f8be947e616cab9816e68231230ca","modified":1373449276000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/vendor/qunit.js","hash":"9fdd85f6ac05336e7717802784dad8ef5ccadb9d","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/vendor/jquery.js","hash":"3dc9f7c2642efff4482e68c9d9df874bf98f5bcb","modified":1373452312000},{"_id":"themes/202accepted/node_modules/underscore.string/test/test_underscore/vendor/qunit.css","hash":"408d35c1e8b7c2ae5e3fa631462864ecdce1719f","modified":1373452312000},{"_id":"themes/202accepted/node_modules/findup-sync/test/fixtures/a/b/bar.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1351803848000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/lodash.js","hash":"16c0086b96a8445c20936b8053d7b8f62638af76","modified":1430076530000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/css/qux.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/css/baz.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/deep/deep.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/js/bar.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/js/foo.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/lodash.js","hash":"16c0086b96a8445c20936b8053d7b8f62638af76","modified":1430076530000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/lodash.js","hash":"16c0086b96a8445c20936b8053d7b8f62638af76","modified":1430076530000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/dist/lodash.underscore.js","hash":"e9355375a05fbc20cec7de1f84e05c70485ddb91","modified":1430076558000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/dist/lodash.compat.js","hash":"41eb73dd63d0732df32e1a8483976c3abd973b29","modified":1427729642000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/dist/lodash.js","hash":"864d4955dce02ae26b48f8c0846e5c62d8c9bdb1","modified":1427729525000},{"_id":"themes/202accepted/node_modules/globule/node_modules/lodash/dist/lodash.underscore.js","hash":"61d3db53b8b711131d87f5d74c2bdf4754e0e933","modified":1427729433000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/folder_one/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/dist/lodash.underscore.js","hash":"e9355375a05fbc20cec7de1f84e05c70485ddb91","modified":1430076558000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/chaining.js","hash":"be55887afb5f05515fc969449c166e924965a0e9","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/collections.js","hash":"735c1cc88fc76df7c4a73c1735d29728404ffe4c","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/functions.js","hash":"51f27a367d732c718ad869b9ed2ab15bc7cadc0b","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/folder_two/two.js","hash":"9971ef6e49cf03ae10f142377dcf12e69a6d4063","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/folder_one/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/arrays.js","hash":"7e65b546ec41d89756176cca0662bee605054f3a","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/objects.js","hash":"ce9b3cc415da73c599fecfb63cb1359439fee3f8","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/utility.js","hash":"39dc56c4a644fb09006b6d967109ab9f94466bd6","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/index.html","hash":"a39a08f5018ae1b231aedc06363ae08acc0b19bc","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/speed.js","hash":"395b81dd34c9267a308c055547e28d8d02198e56","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/chaining.js","hash":"be55887afb5f05515fc969449c166e924965a0e9","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/dist/lodash.underscore.js","hash":"e9355375a05fbc20cec7de1f84e05c70485ddb91","modified":1430076558000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/arrays.js","hash":"7e65b546ec41d89756176cca0662bee605054f3a","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/functions.js","hash":"51f27a367d732c718ad869b9ed2ab15bc7cadc0b","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/speed.js","hash":"395b81dd34c9267a308c055547e28d8d02198e56","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/utility.js","hash":"39dc56c4a644fb09006b6d967109ab9f94466bd6","modified":1373531985000},{"_id":"themes/202accepted/node_modules/iconv-lite/encodings/table/gbk.js","hash":"4ce82c9c942a460dfdbcad5aa3a6e0ae12ae1525","modified":1322134156000},{"_id":"themes/202accepted/node_modules/iconv-lite/encodings/table/big5.js","hash":"1ff76554de139c9bf8c22efbbc2fe67c0f3ede7e","modified":1373851113000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/js/function.js","hash":"91b532771acaf28949c35373da64d107f95104d8","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","hash":"85a40561e34cf12dd05ba7dd3d1456cc02550d3b","modified":1366987222000},{"_id":"themes/202accepted/node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","hash":"79965543010a6a1c935e8a0232035ca3750be2f3","modified":1366987222000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/dist/lodash.compat.js","hash":"e78674568f46c8728bddac05a88790a997192b55","modified":1430076516000},{"_id":"themes/202accepted/node_modules/findup-sync/node_modules/lodash/dist/lodash.js","hash":"1996aca565068a71066e2af03101a073f0cf12b6","modified":1430076546000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/deep/deeper/deeper.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/dist/lodash.js","hash":"1996aca565068a71066e2af03101a073f0cf12b6","modified":1430076546000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/lodash/dist/lodash.compat.js","hash":"e78674568f46c8728bddac05a88790a997192b55","modified":1430076516000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/collections.js","hash":"735c1cc88fc76df7c4a73c1735d29728404ffe4c","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/index.html","hash":"a39a08f5018ae1b231aedc06363ae08acc0b19bc","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/objects.js","hash":"ce9b3cc415da73c599fecfb63cb1359439fee3f8","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/dist/lodash.compat.js","hash":"e78674568f46c8728bddac05a88790a997192b55","modified":1430076516000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/lodash/dist/lodash.js","hash":"1996aca565068a71066e2af03101a073f0cf12b6","modified":1430076546000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/vendor/jslitmus.js","hash":"141af7191b0f8be947e616cab9816e68231230ca","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/vendor/qunit.js","hash":"0d8fdaeec180bcc70af77f58ca31d99f6bded201","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/vendor/qunit.css","hash":"1cf8b4bfff4b27bfdff531b3f51a34ba1bc7c236","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/vendor/qunit.css","hash":"1cf8b4bfff4b27bfdff531b3f51a34ba1bc7c236","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/vendor/jslitmus.js","hash":"141af7191b0f8be947e616cab9816e68231230ca","modified":1373449276000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/vendor/qunit.js","hash":"0d8fdaeec180bcc70af77f58ca31d99f6bded201","modified":1373531985000},{"_id":"themes/202accepted/node_modules/globule/test/fixtures/expand/deep/deeper/deepest/deepest.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1363894196000},{"_id":"themes/202accepted/node_modules/esprima/test/test.js","hash":"b77d6a46ae3f584d198a0e3c5092e4fa07cdb7f6","modified":1377750976000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log/node_modules/underscore.string/test/test_underscore/vendor/jquery.js","hash":"0d7896e2bb23f88e26e52b22a075350b354df447","modified":1373531985000},{"_id":"themes/202accepted/node_modules/grunt-legacy-log-utils/node_modules/underscore.string/test/test_underscore/vendor/jquery.js","hash":"0d7896e2bb23f88e26e52b22a075350b354df447","modified":1373531985000},{"_id":"public/js/test.js","hash":"369eb22113b1394691b28441b55cd537307dd4f1","modified":1512202783253},{"_id":"public/atom.xml","hash":"b9655bf7b789f203523ad5f733f09dd0e164bc06","modified":1512202783253},{"_id":"public/manifest.json","hash":"4725b7e1c54f88603ced51e50a7c3abb279a1b9a","modified":1512202783418},{"_id":"public/sw.js","hash":"ca23f1d6d76f19a70542ff21dc272e4cacb97f65","modified":1512202783418},{"_id":"public/index.html","hash":"26695d11a48319324a3e92c53dcaa8d8bda5b952","modified":1512202783426},{"_id":"public/2017/11/26/how-to-create-a-custom-index/index.html","hash":"da2b1834c2455d7d582869fe2fafb0a190afa4d1","modified":1512202783427},{"_id":"public/2016/12/26/a-polymorphism-puzzle/index.html","hash":"c5a110e872a7dddb0c98ab4052a92c5aea13a18a","modified":1512202783427},{"_id":"public/archives/index.html","hash":"2f532ea490b02c1f6cdc953a4db68b078f79c91c","modified":1512202783427},{"_id":"public/archives/2016/index.html","hash":"1e1c78c12dcebfc1b7569ba60243ee5b7299fe11","modified":1512202783427},{"_id":"public/archives/2016/08/index.html","hash":"cb514e1c895278e94226e2956f95fdc331ea8020","modified":1512202783427},{"_id":"public/archives/2016/11/index.html","hash":"1fd8b5d0b796fed683553f5e176bea056e8f8213","modified":1512202783427},{"_id":"public/archives/2016/12/index.html","hash":"9fe75678db797dab646d61e5c454aa6a5c5d021a","modified":1512202783427},{"_id":"public/archives/2017/index.html","hash":"ff8c562e2fac2c6b08ac0d6dcd254353a6f80df3","modified":1512202783427},{"_id":"public/archives/2017/11/index.html","hash":"0bb8b49a44890caf856f64e7a7908117047ec0ff","modified":1512202783427},{"_id":"public/categories/tech/index.html","hash":"aafbc991f1fab1b29833b1d249f6fd5ea374b220","modified":1512202783427},{"_id":"public/tags/hexo/index.html","hash":"2dbfad2162726ca652515abafaaf1e4cd87a49ff","modified":1512202783427},{"_id":"public/tags/java/index.html","hash":"17cf964f852ae63975b273c11f9df5be49b39013","modified":1512202783428},{"_id":"public/tags/functional-programming/index.html","hash":"0bfaa4ecc280cb267d7c9d45c6bb44cc4b985507","modified":1512202783428},{"_id":"public/tags/vue-js/index.html","hash":"c0017ac8ab3cd61e86f89cb0ed899aa8f2c5a205","modified":1512202783428},{"_id":"public/tags/javascript/index.html","hash":"81c1128cdd466b7a27ba5ae63466668e488405c2","modified":1512202783428},{"_id":"public/blog/index.html","hash":"57bbfa4b30025f9b2ff6ba6c2e52c3c0d6d403aa","modified":1512202783428},{"_id":"public/2016/11/15/try-catch-finally-and-exceptions/index.html","hash":"34e2c9dc4fdd6456af76a39500c25f7382acc79b","modified":1512202783436},{"_id":"public/2016/08/30/communication-among-components-in-vue/index.html","hash":"3d966e28dc73cb99dcfba44020c68cfd3c4c6f51","modified":1512202783436},{"_id":"public/2016/08/01/use-three-or-more-arguments-in-lambda-expressions/index.html","hash":"9b882de8be7152797e8ba4ba11e0fec5dc1682d9","modified":1512202783437},{"_id":"public/images/favicon.ico","hash":"6d86ef84954347da58ba8097b637b002b1cf3f05","modified":1512202783448},{"_id":"public/images/favicon512.png","hash":"a9a5733f387bf8d638528dd2095636f20458269e","modified":1512202783448},{"_id":"public/images/favicon.png","hash":"4d4e9fdb36ee27f4e9c12f5dabc0dd7943749a2f","modified":1512202783448},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1512202783448},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1512202783448},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1512202783448},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1512202783448},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1512202783448},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1512202783449},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1512202783449},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1512202783449},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1512202783449},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1512202783449},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1512202784567},{"_id":"public/css/index.css","hash":"8c05bf37167579099e1d0c6f7b87c3276cb8b991","modified":1512202784575},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1512202784575},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1512202784575},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1512202784575},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1512202784575},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1512202784575},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1512202784575},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1512202784575},{"_id":"public/css/style.css","hash":"47d8aa3d3d5397d4a573e037465f7ec10a05bc0c","modified":1512202784575},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1512202784576},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1512202784576},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1512202784579},{"_id":"public/js/index.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1512202784759}],"Category":[{"name":"tech","_id":"cjap2hqdk0005b82rdik46916"}],"Data":[],"Page":[{"_content":"","source":"index.md","raw":"","date":"2017-11-23T13:33:41.693Z","updated":"2017-11-23T13:33:41.693Z","path":"index.html","title":"","comments":1,"layout":"page","_id":"cjap2hq510000b82rdkf1wxzl","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"blog","date":"2017-11-26T12:14:19.000Z","language":null,"layout":"blog","_content":"","source":"blog/index.md","raw":"---\ntitle: blog\ndate: 2017-11-26 21:14:19\nlanguage:\nlayout: blog\n---\n","updated":"2017-11-26T12:26:11.961Z","path":"blog/index.html","comments":1,"_id":"cjap2hqcs0002b82rkwbyzut5","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"const a = () => {\n  console.log(\"abc\");\n};","source":"js/test.js","raw":"const a = () => {\n  console.log(\"abc\");\n};","date":"2017-12-02T02:48:48.809Z","updated":"2017-12-02T02:48:48.809Z","path":"js/test.js","layout":"false","title":"","comments":1,"_id":"cjap2hqdh0004b82rslgprjq0","content":"const a = () => {\n  console.log(\"abc\");\n};","site":{"data":{}},"excerpt":"","more":"const a = () => {\n  console.log(\"abc\");\n};"}],"Post":[{"title":"Hexoブログのカスタムホームページの作り方","date":"2017-11-26T13:14:22.000Z","language":["japanese"],"_content":"\n# 背景\nデフォルトの設定でHexoのブログを作っている場合、ホームページ(index)がすでに存在しています。かなり便利でありがたい機能ですが、カスタマイズしようとしたら、手数がやや掛ってしまいます。  \n具体的に言うと、テーマ内の`index.ejs`ファイルに記入されているコードは`layout.ejs`の`<%- body %>`に入ります。すなわち、indexページのレイアウトは`index.ejs`のほか、layoutフォルダ内の`layout.ejs`にも左右されます。別に悪い仕様とは全然言えませんが、ホームページだけは通常のテンプレートに適用されたくないというユースケースもあるでしょう。  \nそれを回避するために、HexoのGitHub上のIssueを調査したり、何回か試したりして、ようやく分かりましたので、ここで整理してみたいと思います。  \n\n# 手順\n1. `hexo-generator-index`というプラグインを削除します。自分でインデックスページを作るので、当然ながら自動生成の機能は不要になります。Hexoプロジェクトのルートディレクトリに行って、`npm uninstall hexo-generator-index`を打てば問題ないはずです。  \n2. sourceフォルダーの中で`index.md`というファイルを作ります。こちらのファイルはエントリーポイントになります。\n3. `layout.ejs`内に以下のような条件分岐を加えます。  \n\n\n```ERB\n    <% if (page.source == 'index.md') { %>\n      <span>こちらはホームページのテンプレート</span>\n    <% } else{ %>\n      <span>こちらはその他のページのテンプレート</span>\n    <% } %>\n```\n\n# 参考リンク\n- https://github.com/hexojs/hexo/issues/887\n- https://github.com/hexojs/hexo/issues/959\n- https://github.com/hexojs/hexo/issues/1491\n","source":"_posts/how-to-create-a-custom-index.md","raw":"---\ntitle: Hexoブログのカスタムホームページの作り方\ndate: 2017-11-26 22:14:22\nlanguage: [japanese]\ntags: [hexo]\ncategory: tech\n---\n\n# 背景\nデフォルトの設定でHexoのブログを作っている場合、ホームページ(index)がすでに存在しています。かなり便利でありがたい機能ですが、カスタマイズしようとしたら、手数がやや掛ってしまいます。  \n具体的に言うと、テーマ内の`index.ejs`ファイルに記入されているコードは`layout.ejs`の`<%- body %>`に入ります。すなわち、indexページのレイアウトは`index.ejs`のほか、layoutフォルダ内の`layout.ejs`にも左右されます。別に悪い仕様とは全然言えませんが、ホームページだけは通常のテンプレートに適用されたくないというユースケースもあるでしょう。  \nそれを回避するために、HexoのGitHub上のIssueを調査したり、何回か試したりして、ようやく分かりましたので、ここで整理してみたいと思います。  \n\n# 手順\n1. `hexo-generator-index`というプラグインを削除します。自分でインデックスページを作るので、当然ながら自動生成の機能は不要になります。Hexoプロジェクトのルートディレクトリに行って、`npm uninstall hexo-generator-index`を打てば問題ないはずです。  \n2. sourceフォルダーの中で`index.md`というファイルを作ります。こちらのファイルはエントリーポイントになります。\n3. `layout.ejs`内に以下のような条件分岐を加えます。  \n\n\n```ERB\n    <% if (page.source == 'index.md') { %>\n      <span>こちらはホームページのテンプレート</span>\n    <% } else{ %>\n      <span>こちらはその他のページのテンプレート</span>\n    <% } %>\n```\n\n# 参考リンク\n- https://github.com/hexojs/hexo/issues/887\n- https://github.com/hexojs/hexo/issues/959\n- https://github.com/hexojs/hexo/issues/1491\n","slug":"how-to-create-a-custom-index","published":1,"updated":"2017-11-27T13:08:32.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjap2hqcj0001b82rc3hel9jm","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>デフォルトの設定でHexoのブログを作っている場合、ホームページ(index)がすでに存在しています。かなり便利でありがたい機能ですが、カスタマイズしようとしたら、手数がやや掛ってしまいます。<br>具体的に言うと、テーマ内の<code>index.ejs</code>ファイルに記入されているコードは<code>layout.ejs</code>の<code>&lt;%- body %&gt;</code>に入ります。すなわち、indexページのレイアウトは<code>index.ejs</code>のほか、layoutフォルダ内の<code>layout.ejs</code>にも左右されます。別に悪い仕様とは全然言えませんが、ホームページだけは通常のテンプレートに適用されたくないというユースケースもあるでしょう。<br>それを回避するために、HexoのGitHub上のIssueを調査したり、何回か試したりして、ようやく分かりましたので、ここで整理してみたいと思います。  </p>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><ol>\n<li><code>hexo-generator-index</code>というプラグインを削除します。自分でインデックスページを作るので、当然ながら自動生成の機能は不要になります。Hexoプロジェクトのルートディレクトリに行って、<code>npm uninstall hexo-generator-index</code>を打てば問題ないはずです。  </li>\n<li>sourceフォルダーの中で<code>index.md</code>というファイルを作ります。こちらのファイルはエントリーポイントになります。</li>\n<li><code>layout.ejs</code>内に以下のような条件分岐を加えます。  </li>\n</ol>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (page.source == 'index.md') &#123; %&gt;</span><br><span class=\"line\">  &lt;span&gt;こちらはホームページのテンプレート&lt;/span&gt;</span><br><span class=\"line\">&lt;% &#125; else&#123; %&gt;</span><br><span class=\"line\">  &lt;span&gt;こちらはその他のページのテンプレート&lt;/span&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"参考リンク\"><a href=\"#参考リンク\" class=\"headerlink\" title=\"参考リンク\"></a>参考リンク</h1><ul>\n<li><a href=\"https://github.com/hexojs/hexo/issues/887\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/887</a></li>\n<li><a href=\"https://github.com/hexojs/hexo/issues/959\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/959</a></li>\n<li><a href=\"https://github.com/hexojs/hexo/issues/1491\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/1491</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>デフォルトの設定でHexoのブログを作っている場合、ホームページ(index)がすでに存在しています。かなり便利でありがたい機能ですが、カスタマイズしようとしたら、手数がやや掛ってしまいます。<br>具体的に言うと、テーマ内の<code>index.ejs</code>ファイルに記入されているコードは<code>layout.ejs</code>の<code>&lt;%- body %&gt;</code>に入ります。すなわち、indexページのレイアウトは<code>index.ejs</code>のほか、layoutフォルダ内の<code>layout.ejs</code>にも左右されます。別に悪い仕様とは全然言えませんが、ホームページだけは通常のテンプレートに適用されたくないというユースケースもあるでしょう。<br>それを回避するために、HexoのGitHub上のIssueを調査したり、何回か試したりして、ようやく分かりましたので、ここで整理してみたいと思います。  </p>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><ol>\n<li><code>hexo-generator-index</code>というプラグインを削除します。自分でインデックスページを作るので、当然ながら自動生成の機能は不要になります。Hexoプロジェクトのルートディレクトリに行って、<code>npm uninstall hexo-generator-index</code>を打てば問題ないはずです。  </li>\n<li>sourceフォルダーの中で<code>index.md</code>というファイルを作ります。こちらのファイルはエントリーポイントになります。</li>\n<li><code>layout.ejs</code>内に以下のような条件分岐を加えます。  </li>\n</ol>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (page.source == 'index.md') &#123; %&gt;</span><br><span class=\"line\">  &lt;span&gt;こちらはホームページのテンプレート&lt;/span&gt;</span><br><span class=\"line\">&lt;% &#125; else&#123; %&gt;</span><br><span class=\"line\">  &lt;span&gt;こちらはその他のページのテンプレート&lt;/span&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"参考リンク\"><a href=\"#参考リンク\" class=\"headerlink\" title=\"参考リンク\"></a>参考リンク</h1><ul>\n<li><a href=\"https://github.com/hexojs/hexo/issues/887\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/887</a></li>\n<li><a href=\"https://github.com/hexojs/hexo/issues/959\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/959</a></li>\n<li><a href=\"https://github.com/hexojs/hexo/issues/1491\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/1491</a></li>\n</ul>\n"},{"title":"ラムダ式で３つ以上の引数に対応しよう","date":"2016-08-01T05:16:00.000Z","language":["japanese"],"_content":"\n# 引数が2つ以下の場合 \nJava8既存のFunctionインターフェースを使えば、うまく対応できます。  \n例：  \n\n```java\n// 引数が1つしかない\nFunction<String, String> func1 = (str1) -> str1+\"!\";\nSystem.out.println(func1.apply(\"Aha\")); //Aha!\n\n// 引数が2つしかない\nBiFunction<String, String, String> combineStrings = (str1, str2) -> str1+str2;\nSystem.out.println(combineStrings.apply(\"Hello \", \"World\")); //Hello World\n```\n\nなお、既存のFunctionインターフェースを分かりやすくまとめてくれた図表を見つけましたので、[転載します](http://blog.orfjackal.net/2014/07/java-8-functional-interface-naming-guide.html)。  \n\n![Java 8 Functional Interface Naming Guide](http://2.bp.blogspot.com/-BxiAtQEbcBE/U8fX-k54krI/AAAAAAAAAR4/ke6Ccy4xf0Y/s4000/Java+8+Functional+Interface+Naming+Guide.png)\n\n\n# 引数が3つ以上の場合 \n## 解決法1:　自作関数型インターフェース \n\nJava8のFunctionインターフェースにはインプットが3つ以上のインターフェースが提供されていません。  \nならば、Functionインターフェースを自作してみましょう。  \n実は、ありがたいことに、Java8がただ単純にインプットが3つ以上の関数型インターフェースを提供してないだけで、(少なくてもOracleとOpenJDKのJavaでは)複数の引数へ対応する準備が整っています。どういうことでしょうか？まず、BiFunctionのソースを見てみましょう。  \n\n```java\n\n@FunctionalInterface\npublic interface BiFunction<T, U, R> {\n\n    /**\n     * Applies this function to the given arguments.\n     *\n     * @param t the first function argument\n     * @param u the second function argument\n     * @return the function result\n     */\n    R apply(T t, U u);\n\n    /**\n     * Returns a composed function that first applies this function to\n     * its input, and then applies the {@code after} function to the result.\n     * If evaluation of either function throws an exception, it is relayed to\n     * the caller of the composed function.\n     *\n     * @param <V> the type of output of the {@code after} function, and of the\n     *           composed function\n     * @param after the function to apply after this function is applied\n     * @return a composed function that first applies this function and then\n     * applies the {@code after} function\n     * @throws NullPointerException if after is null\n     */\n    default <V> BiFunction<T, U, V> andThen(Function<? super R, ? extends V> after) {\n        Objects.requireNonNull(after);\n        return (T t, U u) -> after.apply(apply(t, u));\n    }\n}\n```\n\n肝心なのは`R apply(T t, U u);`だけです。このapply関数が`java.lang.reflect.Proxy.KeyFactory#apply`で実装されています。  \n\n```java\n    private static final class KeyFactory\n        implements BiFunction<ClassLoader, Class<?>[], Object>\n    {\n        @Override\n        public Object apply(ClassLoader classLoader, Class<?>[] interfaces) {\n            switch (interfaces.length) {\n                case 1: return new Key1(interfaces[0]); // the most frequent\n                case 2: return new Key2(interfaces[0], interfaces[1]);\n                case 0: return key0;\n                default: return new KeyX(interfaces);\n            }\n        }\n    }\n```\n \nご覧のように、KeyXが存在していて、その中でfor文を使って、interfaceごとに読み込み、レファレンスを作っています。なので、自作関数型インターフェース内でFunctionやBiFunctionと似ている感じでapplyを使えば良いでしょう。  \n\n```java\n@FunctionalInterface\npublic interface TriFunction<T, U, V, R> {\n\tR apply(T t, U u, V v); // KeyX should be called\n}\n```\n\nそして、このTriFunctionを使って、３つ以上の引数が存在するケースに対応すると、  \n\n```java\nTriFunction<String, Integer, Integer, String> newSubString = (str, start, number) -> \n  str.substring(start-1, str.length() <= start-1+number? str.length(): start-1+number);\n\nString f = newSubString.apply(\"Hello World\", 2, 7);\nSystem.out.println(f); // ello Wo\n```\n\nうーん、悪くありません。しかし、もし単純な処理を行いたいだけであれば、わざわざインターフェースを作るなんか少し面倒臭いでしょう。他に方法ないでしょうか。  \n\n## 解決法２：　カリー化 \nJavaScriptの経験者であれば、既に思い付いたかもしれません。カリー化すればいいです。では、カリー化とは何でしょうか？ \n>カリー化 (currying, カリー化された=curried) とは、複数の引数をとる関数を、引数が「もとの関数の最初の引数」で戻り値が「もとの関数の残りの引数を取り結果を返す関数」であるような関数にすること（あるいはその関数のこと）である。  \n\n*Wikipediaより*\n\n要するに、Java 8では、関数が変数のように扱うことができますので、戻り値で関数を返す手法が利用できます。  \n\n```java\nFunction<String, Function<Integer, Function<Integer, String>>> newSubString = (str) -> (start) -> (number) \n  -> str.substring(start-1, str.length() <= start-1+number? str.length(): start-1+number);\n\n\t\t\nString f = newSubString.apply(\"Hello World\").apply(2).apply(7);\nSystem.out.println(f); // ello Wo\n```\n\n一回目、二回目では関数が返され、そして実行スコップから出ていない為、前の変数がクロージャーで持っていて、次の処理でも使用されます。\nこんな感じで既存インターフェースを使うだけで、複数の引数へ対応できるようになりました。  \n","source":"_posts/use-three-or-more-arguments-in-lambda-expressions.md","raw":"---\ntitle: ラムダ式で３つ以上の引数に対応しよう\ndate: 2016-08-01 14:16:00\nlanguage: [japanese]\ntags: [java, functional-programming]\ncategory: tech\n---\n\n# 引数が2つ以下の場合 \nJava8既存のFunctionインターフェースを使えば、うまく対応できます。  \n例：  \n\n```java\n// 引数が1つしかない\nFunction<String, String> func1 = (str1) -> str1+\"!\";\nSystem.out.println(func1.apply(\"Aha\")); //Aha!\n\n// 引数が2つしかない\nBiFunction<String, String, String> combineStrings = (str1, str2) -> str1+str2;\nSystem.out.println(combineStrings.apply(\"Hello \", \"World\")); //Hello World\n```\n\nなお、既存のFunctionインターフェースを分かりやすくまとめてくれた図表を見つけましたので、[転載します](http://blog.orfjackal.net/2014/07/java-8-functional-interface-naming-guide.html)。  \n\n![Java 8 Functional Interface Naming Guide](http://2.bp.blogspot.com/-BxiAtQEbcBE/U8fX-k54krI/AAAAAAAAAR4/ke6Ccy4xf0Y/s4000/Java+8+Functional+Interface+Naming+Guide.png)\n\n\n# 引数が3つ以上の場合 \n## 解決法1:　自作関数型インターフェース \n\nJava8のFunctionインターフェースにはインプットが3つ以上のインターフェースが提供されていません。  \nならば、Functionインターフェースを自作してみましょう。  \n実は、ありがたいことに、Java8がただ単純にインプットが3つ以上の関数型インターフェースを提供してないだけで、(少なくてもOracleとOpenJDKのJavaでは)複数の引数へ対応する準備が整っています。どういうことでしょうか？まず、BiFunctionのソースを見てみましょう。  \n\n```java\n\n@FunctionalInterface\npublic interface BiFunction<T, U, R> {\n\n    /**\n     * Applies this function to the given arguments.\n     *\n     * @param t the first function argument\n     * @param u the second function argument\n     * @return the function result\n     */\n    R apply(T t, U u);\n\n    /**\n     * Returns a composed function that first applies this function to\n     * its input, and then applies the {@code after} function to the result.\n     * If evaluation of either function throws an exception, it is relayed to\n     * the caller of the composed function.\n     *\n     * @param <V> the type of output of the {@code after} function, and of the\n     *           composed function\n     * @param after the function to apply after this function is applied\n     * @return a composed function that first applies this function and then\n     * applies the {@code after} function\n     * @throws NullPointerException if after is null\n     */\n    default <V> BiFunction<T, U, V> andThen(Function<? super R, ? extends V> after) {\n        Objects.requireNonNull(after);\n        return (T t, U u) -> after.apply(apply(t, u));\n    }\n}\n```\n\n肝心なのは`R apply(T t, U u);`だけです。このapply関数が`java.lang.reflect.Proxy.KeyFactory#apply`で実装されています。  \n\n```java\n    private static final class KeyFactory\n        implements BiFunction<ClassLoader, Class<?>[], Object>\n    {\n        @Override\n        public Object apply(ClassLoader classLoader, Class<?>[] interfaces) {\n            switch (interfaces.length) {\n                case 1: return new Key1(interfaces[0]); // the most frequent\n                case 2: return new Key2(interfaces[0], interfaces[1]);\n                case 0: return key0;\n                default: return new KeyX(interfaces);\n            }\n        }\n    }\n```\n \nご覧のように、KeyXが存在していて、その中でfor文を使って、interfaceごとに読み込み、レファレンスを作っています。なので、自作関数型インターフェース内でFunctionやBiFunctionと似ている感じでapplyを使えば良いでしょう。  \n\n```java\n@FunctionalInterface\npublic interface TriFunction<T, U, V, R> {\n\tR apply(T t, U u, V v); // KeyX should be called\n}\n```\n\nそして、このTriFunctionを使って、３つ以上の引数が存在するケースに対応すると、  \n\n```java\nTriFunction<String, Integer, Integer, String> newSubString = (str, start, number) -> \n  str.substring(start-1, str.length() <= start-1+number? str.length(): start-1+number);\n\nString f = newSubString.apply(\"Hello World\", 2, 7);\nSystem.out.println(f); // ello Wo\n```\n\nうーん、悪くありません。しかし、もし単純な処理を行いたいだけであれば、わざわざインターフェースを作るなんか少し面倒臭いでしょう。他に方法ないでしょうか。  \n\n## 解決法２：　カリー化 \nJavaScriptの経験者であれば、既に思い付いたかもしれません。カリー化すればいいです。では、カリー化とは何でしょうか？ \n>カリー化 (currying, カリー化された=curried) とは、複数の引数をとる関数を、引数が「もとの関数の最初の引数」で戻り値が「もとの関数の残りの引数を取り結果を返す関数」であるような関数にすること（あるいはその関数のこと）である。  \n\n*Wikipediaより*\n\n要するに、Java 8では、関数が変数のように扱うことができますので、戻り値で関数を返す手法が利用できます。  \n\n```java\nFunction<String, Function<Integer, Function<Integer, String>>> newSubString = (str) -> (start) -> (number) \n  -> str.substring(start-1, str.length() <= start-1+number? str.length(): start-1+number);\n\n\t\t\nString f = newSubString.apply(\"Hello World\").apply(2).apply(7);\nSystem.out.println(f); // ello Wo\n```\n\n一回目、二回目では関数が返され、そして実行スコップから出ていない為、前の変数がクロージャーで持っていて、次の処理でも使用されます。\nこんな感じで既存インターフェースを使うだけで、複数の引数へ対応できるようになりました。  \n","slug":"use-three-or-more-arguments-in-lambda-expressions","published":1,"updated":"2017-11-27T13:08:39.974Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjap2hqct0003b82rsekirqjr","content":"<h1 id=\"引数が2つ以下の場合\"><a href=\"#引数が2つ以下の場合\" class=\"headerlink\" title=\"引数が2つ以下の場合\"></a>引数が2つ以下の場合</h1><p>Java8既存のFunctionインターフェースを使えば、うまく対応できます。<br>例：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引数が1つしかない</span></span><br><span class=\"line\">Function&lt;String, String&gt; func1 = (str1) -&gt; str1+<span class=\"string\">\"!\"</span>;</span><br><span class=\"line\">System.out.println(func1.apply(<span class=\"string\">\"Aha\"</span>)); <span class=\"comment\">//Aha!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引数が2つしかない</span></span><br><span class=\"line\">BiFunction&lt;String, String, String&gt; combineStrings = (str1, str2) -&gt; str1+str2;</span><br><span class=\"line\">System.out.println(combineStrings.apply(<span class=\"string\">\"Hello \"</span>, <span class=\"string\">\"World\"</span>)); <span class=\"comment\">//Hello World</span></span><br></pre></td></tr></table></figure>\n<p>なお、既存のFunctionインターフェースを分かりやすくまとめてくれた図表を見つけましたので、<a href=\"http://blog.orfjackal.net/2014/07/java-8-functional-interface-naming-guide.html\" target=\"_blank\" rel=\"noopener\">転載します</a>。  </p>\n<p><img src=\"http://2.bp.blogspot.com/-BxiAtQEbcBE/U8fX-k54krI/AAAAAAAAAR4/ke6Ccy4xf0Y/s4000/Java+8+Functional+Interface+Naming+Guide.png\" alt=\"Java 8 Functional Interface Naming Guide\"></p>\n<h1 id=\"引数が3つ以上の場合\"><a href=\"#引数が3つ以上の場合\" class=\"headerlink\" title=\"引数が3つ以上の場合\"></a>引数が3つ以上の場合</h1><h2 id=\"解決法1-自作関数型インターフェース\"><a href=\"#解決法1-自作関数型インターフェース\" class=\"headerlink\" title=\"解決法1:　自作関数型インターフェース\"></a>解決法1:　自作関数型インターフェース</h2><p>Java8のFunctionインターフェースにはインプットが3つ以上のインターフェースが提供されていません。<br>ならば、Functionインターフェースを自作してみましょう。<br>実は、ありがたいことに、Java8がただ単純にインプットが3つ以上の関数型インターフェースを提供してないだけで、(少なくてもOracleとOpenJDKのJavaでは)複数の引数へ対応する準備が整っています。どういうことでしょうか？まず、BiFunctionのソースを見てみましょう。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">BiFunction</span>&lt;<span class=\"title\">T</span>, <span class=\"title\">U</span>, <span class=\"title\">R</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Applies this function to the given arguments.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> t the first function argument</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> u the second function argument</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> the function result</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">R <span class=\"title\">apply</span><span class=\"params\">(T t, U u)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns a composed function that first applies this function to</span></span><br><span class=\"line\"><span class=\"comment\">     * its input, and then applies the &#123;<span class=\"doctag\">@code</span> after&#125; function to the result.</span></span><br><span class=\"line\"><span class=\"comment\">     * If evaluation of either function throws an exception, it is relayed to</span></span><br><span class=\"line\"><span class=\"comment\">     * the caller of the composed function.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;V&gt; the type of output of the &#123;<span class=\"doctag\">@code</span> after&#125; function, and of the</span></span><br><span class=\"line\"><span class=\"comment\">     *           composed function</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> after the function to apply after this function is applied</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> a composed function that first applies this function and then</span></span><br><span class=\"line\"><span class=\"comment\">     * applies the &#123;<span class=\"doctag\">@code</span> after&#125; function</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> NullPointerException if after is null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span> &lt;V&gt; <span class=\"function\">BiFunction&lt;T, U, V&gt; <span class=\"title\">andThen</span><span class=\"params\">(Function&lt;? <span class=\"keyword\">super</span> R, ? extends V&gt; after)</span> </span>&#123;</span><br><span class=\"line\">        Objects.requireNonNull(after);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T t, U u) -&gt; after.apply(apply(t, u));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>肝心なのは<code>R apply(T t, U u);</code>だけです。このapply関数が<code>java.lang.reflect.Proxy.KeyFactory#apply</code>で実装されています。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">KeyFactory</span></span></span><br><span class=\"line\">    implements BiFunction&lt;ClassLoader, Class&lt;?&gt;[], Object&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">apply</span><span class=\"params\">(ClassLoader classLoader, Class&lt;?&gt;[] interfaces)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (interfaces.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Key1(interfaces[<span class=\"number\">0</span>]); <span class=\"comment\">// the most frequent</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Key2(interfaces[<span class=\"number\">0</span>], interfaces[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>: <span class=\"keyword\">return</span> key0;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> KeyX(interfaces);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ご覧のように、KeyXが存在していて、その中でfor文を使って、interfaceごとに読み込み、レファレンスを作っています。なので、自作関数型インターフェース内でFunctionやBiFunctionと似ている感じでapplyを使えば良いでしょう。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">TriFunction</span>&lt;<span class=\"title\">T</span>, <span class=\"title\">U</span>, <span class=\"title\">V</span>, <span class=\"title\">R</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\">R <span class=\"title\">apply</span><span class=\"params\">(T t, U u, V v)</span></span>; <span class=\"comment\">// KeyX should be called</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>そして、このTriFunctionを使って、３つ以上の引数が存在するケースに対応すると、  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TriFunction&lt;String, Integer, Integer, String&gt; newSubString = (str, start, number) -&gt; </span><br><span class=\"line\">  str.substring(start-<span class=\"number\">1</span>, str.length() &lt;= start-<span class=\"number\">1</span>+number? str.length(): start-<span class=\"number\">1</span>+number);</span><br><span class=\"line\"></span><br><span class=\"line\">String f = newSubString.apply(<span class=\"string\">\"Hello World\"</span>, <span class=\"number\">2</span>, <span class=\"number\">7</span>);</span><br><span class=\"line\">System.out.println(f); <span class=\"comment\">// ello Wo</span></span><br></pre></td></tr></table></figure>\n<p>うーん、悪くありません。しかし、もし単純な処理を行いたいだけであれば、わざわざインターフェースを作るなんか少し面倒臭いでしょう。他に方法ないでしょうか。  </p>\n<h2 id=\"解決法２：-カリー化\"><a href=\"#解決法２：-カリー化\" class=\"headerlink\" title=\"解決法２：　カリー化\"></a>解決法２：　カリー化</h2><p>JavaScriptの経験者であれば、既に思い付いたかもしれません。カリー化すればいいです。では、カリー化とは何でしょうか？ </p>\n<blockquote>\n<p>カリー化 (currying, カリー化された=curried) とは、複数の引数をとる関数を、引数が「もとの関数の最初の引数」で戻り値が「もとの関数の残りの引数を取り結果を返す関数」であるような関数にすること（あるいはその関数のこと）である。  </p>\n</blockquote>\n<p><em>Wikipediaより</em></p>\n<p>要するに、Java 8では、関数が変数のように扱うことができますので、戻り値で関数を返す手法が利用できます。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Function&lt;String, Function&lt;Integer, Function&lt;Integer, String&gt;&gt;&gt; newSubString = (str) -&gt; (start) -&gt; (number) </span><br><span class=\"line\">  -&gt; str.substring(start-<span class=\"number\">1</span>, str.length() &lt;= start-<span class=\"number\">1</span>+number? str.length(): start-<span class=\"number\">1</span>+number);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">String f = newSubString.apply(<span class=\"string\">\"Hello World\"</span>).apply(<span class=\"number\">2</span>).apply(<span class=\"number\">7</span>);</span><br><span class=\"line\">System.out.println(f); <span class=\"comment\">// ello Wo</span></span><br></pre></td></tr></table></figure>\n<p>一回目、二回目では関数が返され、そして実行スコップから出ていない為、前の変数がクロージャーで持っていて、次の処理でも使用されます。<br>こんな感じで既存インターフェースを使うだけで、複数の引数へ対応できるようになりました。  </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"引数が2つ以下の場合\"><a href=\"#引数が2つ以下の場合\" class=\"headerlink\" title=\"引数が2つ以下の場合\"></a>引数が2つ以下の場合</h1><p>Java8既存のFunctionインターフェースを使えば、うまく対応できます。<br>例：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引数が1つしかない</span></span><br><span class=\"line\">Function&lt;String, String&gt; func1 = (str1) -&gt; str1+<span class=\"string\">\"!\"</span>;</span><br><span class=\"line\">System.out.println(func1.apply(<span class=\"string\">\"Aha\"</span>)); <span class=\"comment\">//Aha!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引数が2つしかない</span></span><br><span class=\"line\">BiFunction&lt;String, String, String&gt; combineStrings = (str1, str2) -&gt; str1+str2;</span><br><span class=\"line\">System.out.println(combineStrings.apply(<span class=\"string\">\"Hello \"</span>, <span class=\"string\">\"World\"</span>)); <span class=\"comment\">//Hello World</span></span><br></pre></td></tr></table></figure>\n<p>なお、既存のFunctionインターフェースを分かりやすくまとめてくれた図表を見つけましたので、<a href=\"http://blog.orfjackal.net/2014/07/java-8-functional-interface-naming-guide.html\" target=\"_blank\" rel=\"noopener\">転載します</a>。  </p>\n<p><img src=\"http://2.bp.blogspot.com/-BxiAtQEbcBE/U8fX-k54krI/AAAAAAAAAR4/ke6Ccy4xf0Y/s4000/Java+8+Functional+Interface+Naming+Guide.png\" alt=\"Java 8 Functional Interface Naming Guide\"></p>\n<h1 id=\"引数が3つ以上の場合\"><a href=\"#引数が3つ以上の場合\" class=\"headerlink\" title=\"引数が3つ以上の場合\"></a>引数が3つ以上の場合</h1><h2 id=\"解決法1-自作関数型インターフェース\"><a href=\"#解決法1-自作関数型インターフェース\" class=\"headerlink\" title=\"解決法1:　自作関数型インターフェース\"></a>解決法1:　自作関数型インターフェース</h2><p>Java8のFunctionインターフェースにはインプットが3つ以上のインターフェースが提供されていません。<br>ならば、Functionインターフェースを自作してみましょう。<br>実は、ありがたいことに、Java8がただ単純にインプットが3つ以上の関数型インターフェースを提供してないだけで、(少なくてもOracleとOpenJDKのJavaでは)複数の引数へ対応する準備が整っています。どういうことでしょうか？まず、BiFunctionのソースを見てみましょう。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">BiFunction</span>&lt;<span class=\"title\">T</span>, <span class=\"title\">U</span>, <span class=\"title\">R</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Applies this function to the given arguments.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> t the first function argument</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> u the second function argument</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> the function result</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">R <span class=\"title\">apply</span><span class=\"params\">(T t, U u)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns a composed function that first applies this function to</span></span><br><span class=\"line\"><span class=\"comment\">     * its input, and then applies the &#123;<span class=\"doctag\">@code</span> after&#125; function to the result.</span></span><br><span class=\"line\"><span class=\"comment\">     * If evaluation of either function throws an exception, it is relayed to</span></span><br><span class=\"line\"><span class=\"comment\">     * the caller of the composed function.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;V&gt; the type of output of the &#123;<span class=\"doctag\">@code</span> after&#125; function, and of the</span></span><br><span class=\"line\"><span class=\"comment\">     *           composed function</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> after the function to apply after this function is applied</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> a composed function that first applies this function and then</span></span><br><span class=\"line\"><span class=\"comment\">     * applies the &#123;<span class=\"doctag\">@code</span> after&#125; function</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> NullPointerException if after is null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span> &lt;V&gt; <span class=\"function\">BiFunction&lt;T, U, V&gt; <span class=\"title\">andThen</span><span class=\"params\">(Function&lt;? <span class=\"keyword\">super</span> R, ? extends V&gt; after)</span> </span>&#123;</span><br><span class=\"line\">        Objects.requireNonNull(after);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T t, U u) -&gt; after.apply(apply(t, u));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>肝心なのは<code>R apply(T t, U u);</code>だけです。このapply関数が<code>java.lang.reflect.Proxy.KeyFactory#apply</code>で実装されています。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">KeyFactory</span></span></span><br><span class=\"line\">    implements BiFunction&lt;ClassLoader, Class&lt;?&gt;[], Object&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">apply</span><span class=\"params\">(ClassLoader classLoader, Class&lt;?&gt;[] interfaces)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (interfaces.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Key1(interfaces[<span class=\"number\">0</span>]); <span class=\"comment\">// the most frequent</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Key2(interfaces[<span class=\"number\">0</span>], interfaces[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>: <span class=\"keyword\">return</span> key0;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> KeyX(interfaces);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ご覧のように、KeyXが存在していて、その中でfor文を使って、interfaceごとに読み込み、レファレンスを作っています。なので、自作関数型インターフェース内でFunctionやBiFunctionと似ている感じでapplyを使えば良いでしょう。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">TriFunction</span>&lt;<span class=\"title\">T</span>, <span class=\"title\">U</span>, <span class=\"title\">V</span>, <span class=\"title\">R</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\">R <span class=\"title\">apply</span><span class=\"params\">(T t, U u, V v)</span></span>; <span class=\"comment\">// KeyX should be called</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>そして、このTriFunctionを使って、３つ以上の引数が存在するケースに対応すると、  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TriFunction&lt;String, Integer, Integer, String&gt; newSubString = (str, start, number) -&gt; </span><br><span class=\"line\">  str.substring(start-<span class=\"number\">1</span>, str.length() &lt;= start-<span class=\"number\">1</span>+number? str.length(): start-<span class=\"number\">1</span>+number);</span><br><span class=\"line\"></span><br><span class=\"line\">String f = newSubString.apply(<span class=\"string\">\"Hello World\"</span>, <span class=\"number\">2</span>, <span class=\"number\">7</span>);</span><br><span class=\"line\">System.out.println(f); <span class=\"comment\">// ello Wo</span></span><br></pre></td></tr></table></figure>\n<p>うーん、悪くありません。しかし、もし単純な処理を行いたいだけであれば、わざわざインターフェースを作るなんか少し面倒臭いでしょう。他に方法ないでしょうか。  </p>\n<h2 id=\"解決法２：-カリー化\"><a href=\"#解決法２：-カリー化\" class=\"headerlink\" title=\"解決法２：　カリー化\"></a>解決法２：　カリー化</h2><p>JavaScriptの経験者であれば、既に思い付いたかもしれません。カリー化すればいいです。では、カリー化とは何でしょうか？ </p>\n<blockquote>\n<p>カリー化 (currying, カリー化された=curried) とは、複数の引数をとる関数を、引数が「もとの関数の最初の引数」で戻り値が「もとの関数の残りの引数を取り結果を返す関数」であるような関数にすること（あるいはその関数のこと）である。  </p>\n</blockquote>\n<p><em>Wikipediaより</em></p>\n<p>要するに、Java 8では、関数が変数のように扱うことができますので、戻り値で関数を返す手法が利用できます。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Function&lt;String, Function&lt;Integer, Function&lt;Integer, String&gt;&gt;&gt; newSubString = (str) -&gt; (start) -&gt; (number) </span><br><span class=\"line\">  -&gt; str.substring(start-<span class=\"number\">1</span>, str.length() &lt;= start-<span class=\"number\">1</span>+number? str.length(): start-<span class=\"number\">1</span>+number);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">String f = newSubString.apply(<span class=\"string\">\"Hello World\"</span>).apply(<span class=\"number\">2</span>).apply(<span class=\"number\">7</span>);</span><br><span class=\"line\">System.out.println(f); <span class=\"comment\">// ello Wo</span></span><br></pre></td></tr></table></figure>\n<p>一回目、二回目では関数が返され、そして実行スコップから出ていない為、前の変数がクロージャーで持っていて、次の処理でも使用されます。<br>こんな感じで既存インターフェースを使うだけで、複数の引数へ対応できるようになりました。  </p>\n"},{"title":"try-catch-finally、try-with-resources、そして発生した例外たち","date":"2016-11-15T03:00:00.000Z","language":["japanese"],"_content":"\n# 問題\n\n下記のコードの出力内容はどんな感じでしょうか？  \n\n```java\npublic class Test {\n    public static void main (String[] args) throws Exception {\n        try {\n            run();\n        } catch(Exception e) {\n            printSuppressedExceptions(e, \"-\");\n        }\n    }\n\n    public static void printSuppressedExceptions(Throwable t, String s) {\n        System.out.println(s + t + \" suppressed \" + t.getSuppressed().length + \" exception/exceptions.\");\n        if(t.getSuppressed().length != 0) {\n            for (Throwable ts : t.getSuppressed()) {\n                System.out.println(s + ts + \"[ is suppressed by ]\" + t);\n                printSuppressedExceptions(ts, s + s);\n            }\n        }\n    }\n    \n    public static String run() throws Exception {\n        try(MyResource r = new MyResource(\"resource 1\");\n            MyResource r2 = new MyResource(\"resource 2\");   \n            ) {\n            return System.out.printf(\"return from try\\n\").append(\"\",1,2).toString();\n        } catch(Exception e) {\n            printSuppressedExceptions(e, \"*\");\n            throw e;\n        } catch(Throwable t) {\n            System.out.println(\"print from 2nd catch block\");\n            return \"return from 2nd catch block\";\n        } finally {         \n            new MyResource(\"resource 3\").close();\n            new MyResource(\"resource 4\").close();\n        }\n    }       \n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\n# 分析\nこれを回答するのに、以下の内容を把握する必要があります。\n\n## １．System.out.printf(String)に戻り値が存在します？\n[Javadoc](https://docs.oracle.com/javase/jp/8/docs/api/java/io/PrintStream.html)を調べれば分かりますが、`PrintStream#printf`は`PrintStream#print`や`PrintStream#println`と違い、戻り値はPrintStreamになっています。  \n一見あんまり意味がなさそうですが、コンソールへの出力が可能でありながら**式**として扱える為、**文**としてしか扱えない`System.out.println`なんかより用途が多いはずです。\n\n```java\nclass Test\n{\n\tpublic static void main (String[] args)\n\t{\n\t\tif(System.out.printf(\"hello, \") != null) {\n\t\t\tSystem.out.println(\"world\");\n\t\t}\n\t}\n}\n```\n\n例えば、上記のコードの出力値は`Hello, world`になりますね。\n\nそして、PrintStream型である為、appendメソッドを使用することが可能です。しかし、二つ目の引数と3つ目の引数の大きさに気をつけなければ、お馴染みのStringBuilderと同じく、StringIndexOutOfBoundsExceptionが発生してしまうかもしれません。\n\n## ２．try-with-resources文で宣言したリソースのクローズ順番は？\ntryブロック内に例外が発生した場合、try-with-resources文の内で宣言したリソースは閉じられるのでしょうか？答えはYesになります。\nそうじゃなければ、データベースに関する処理を行う時に例外が発生してしまったら、データベースのコネクションなどが開かれたままになる恐れがありますね。  \nどういう順番で閉じられるかといいますと、宣言時の**逆順**で行います。例えば、下記の文では、r2が先に閉じられ、r1がその次になります。\n\n```java\npublic class Test {\n    public static void main (String[] args) {\n        run();\n    }\n    \n    public static void run() {\n        try(MyResource r = new MyResource(\"resource 1\");\n            MyResource r2 = new MyResource(\"resource 2\");\n            ) {\n           \n        } catch(Exception e) {\n\n        }\n    }       \n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        System.out.println(this.name);\n    }\n}\n```\n\nそのため、この例の出力は以下のようになります。\n\n```\nresource 2\nresource 1\n```\n\n## ３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\n例外を一旦置いといて、次のリソースを閉じに行きます。すなわち、リソースの宣言さえすれば、**必ず**閉じてくれます（バーチャルマシンが死んでしまったなど、異常な状況を除く）。では、次のリソースを閉じる時に、例外がまた発生してしまったらどうなります？この時は1.7より導入されたSuppressed Exceptions（抑制済み例外）の出番です。二つ目の例外が一つ目の例外に抑制られ、一つ目の例外の「抑制済み例外リスト」に加えられます。この「抑制済み例外リスト（Throwableの配列）」は[getSuppressed](https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#getSuppressed--)というメソッドより呼び出されられます。\n\n```java\nclass Test\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\ttry(\n\t\t\tMyResource r1 = new MyResource(\"resource 1\");\n\t\t\tMyResource r2 = new MyResource(\"resource 2\");\n\t\t){\n\t\t\t\n\t\t} catch(Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tfor(Throwable t: e.getSuppressed())\n\t\t\t\tSystem.out.println(\"**\" + t + \"**\");\n\t\t}\n\t}\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\nとなると、上記のコードの実行結果がこのようになることは容易に理解できるはずですね。\n\n```\njava.lang.Exception: exception from resource 2\n**java.lang.Exception: exception from resource 1**\n```\n\n## ４．tryのブロックに例外が発生したらどうなります？\ntryブロック内に例外が発生する可能性は一番高いですね（じゃないと、そもそもなぜtryを使うでしょう）。  \ntryブロック内に例外が発生したら、まずtry-with-resourcesのリソースが閉じられます。それからcatchブロック内の文が順番に実行されます。  \n「try-with-resources」のブロックと「try」のブロックから例外が飛んできた場合、「try-with-resources」で発生した例外が抑制されます。今の例を少し改造して実行してみれば一目瞭然ですね。  \n\n例：  \n\n```java\nclass Test\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\ttry(\n\t\t\tMyResource r1 = new MyResource(\"resource 1\");\n\t\t\tMyResource r2 = new MyResource(\"resource 2\");\n\t\t){\n\t\t\tSystem.getProperty(\"\");\t\t\t\n\t\t} catch(Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tfor(Throwable t: e.getSuppressed())\n\t\t\t\tSystem.out.println(\"**\" + t + \"**\");\n\t\t}\n\t}\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\n  \n結果：\n```\njava.lang.IllegalArgumentException: key can't be empty\n**java.lang.Exception: exception from resource 2**\n**java.lang.Exception: exception from resource 1**\n```\n\n## ５．複数のcatchブロックが存在する時、そいつらの関係は？\n下のcatchが上のcatchブロック内に発生した例外をキャッチすることはできません。catch文はtryの例外を処理するもので、お互いに例外を投げられません。catchブロック内で例外が発生したら、一層上に投げられます。  \nしかし、上のcatchがハンドリングできない例外は下に任せることができます。その逆は不可です。\n\n```java\n・・・\ntry {\n   System.out.println(\"0\");\n} catch(Excption e) {\n   System.out.println(\"1\");\n} catch(IOException ioe) {\n   System.out.println(\"2\");\n}\n・・・\n```\n\nはコンパイルエラーになります。下のcatchブロックは到達不可能だからです。\n\n## ６．finallyを加えたらどうなります？\nまず、tryの下に、finallyを加えたら、finallyブロック内の文は実行するのでしょうか？答えはYesです。  \nスレッドが死んだ時や`System#exit`が呼ばれたなど、とても珍しい状況じゃなければ、finallyは必ず実行されます。  \nそしたら、finallyブロックに例外が発生した場合、tryブロックとtry-with-resourcesから投げられてきた例外はどうなるでしょう？  \nfinallyで発生した例外以外の例外は無視されます。つまり、**消えてしまいます**。try-with-resourcesの場合、例外は「抑制済み例外リスト」に入れられますが、それは1.7以降から導入された内容で、従来のtry-catch-finallyはそれを使用していません。  \n\n```java\nclass Test\n{\n\tpublic static void main (String[] args) {\n\t\ttry {\n\t\t\trun();\n\t\t} catch(Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tSystem.out.println(e.getSuppressed().length);\n\t\t}\n\t}\n\t\n\tprivate static void run() throws Exception {\n\t\ttry(\n\t\t\tMyResource r1 = new MyResource(\"resource 1\");\n\t\t\tMyResource r2 = new MyResource(\"resource 2\");\n\t\t){\n\t\t\tSystem.getProperty(\"\");\n\t\t} finally {\n\t\t\tnew MyResource(\"resource 3\").close();\n\t\t}\n\t}\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\nというコードの実行結果は下記のようになります。\n\n```\njava.lang.Exception: exception from resource 3\n0\n```\n\nそれに、finallyは最後に実行する為、finallyブロック内で発生した例外は上へ投げられます。つまり、例外が発生したら、それ以降のコードは実行されない恐れがあります。finallyは必ず実行されますが、**finally内の全ての文は必ず実行されるわけではありません**。その為、finallyの中でtry-catchを行うコードが良く見かけます。  \n\n# 回答\n以上の内容を理解できたら、最初に出てきた問題の結果がわかるようになるでしょう。\n\n```\nreturn from try\n*java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.\n*java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n**java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.\n*java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n**java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.\n-java.lang.Exception: exception from resource 3 suppressed 0 exception/exceptions.\n```\n\n# ボーナス\n抑制されたのに、その情報が揉み消されるなんてイヤですね。[addSuppressed](https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#addSuppressed-java.lang.Throwable-)というメソッドを利用すれば、自ら抑制済み例外リストに追加することが可能です。\n\n```java\npublic class Test {\n    public static void main (String[] args) throws Exception {\n        try {\n            run();\n        } catch(Exception e) {\n            printSuppressedExceptions(e, \"-\");\n        }\n    }\n\n\tpublic static void printSuppressedExceptions(Throwable t, String s) {\n\t\tSystem.out.println(s + t + \" suppressed \" + t.getSuppressed().length + \" exception/exceptions.\");\n\t\tif(t.getSuppressed().length != 0) {\n\t\t\tfor (Throwable ts : t.getSuppressed()) {\n    \t\t\tSystem.out.println(s + ts + \"[ is suppressed by ]\" + t);\n    \t\t\tprintSuppressedExceptions(ts, s + s);\n\t\t\t}\n\t\t}\n\t}\n\t\n    public static String run() throws Exception {\n        Exception ex = null;\n        try(MyResource r = new MyResource(\"resource 1\");\n        \tMyResource r2 = new MyResource(\"resource 2\");\t\n        \t) {\n        \treturn System.out.printf(\"return from try\\n\").append(\"\",1,2).toString();\n        } catch(Exception e) {\n        \tex = e;\n        \tthrow ex;\n        } finally {\n        \ttry(\n        \t\tMyResource r3 = new MyResource(\"my resource 3\");\n                MyResource r4 = new MyResource(\"my resource 4\");\n        \t\t) {\n        \t\t\n        \t} catch(Exception e) {\n        \t\tif(ex != null) e.addSuppressed(ex);\n        \t\tthrow e;\n        \t}\n        }\n    }   \t\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\n上記のコードの実行結果はこんな感じです。\n\n```\nreturn from try\n-java.lang.Exception: exception from my resource 4 suppressed 2 exception/exceptions.\n-java.lang.Exception: exception from my resource 3[ is suppressed by ]java.lang.Exception: exception from my resource 4\n--java.lang.Exception: exception from my resource 3 suppressed 0 exception/exceptions.\n-java.lang.StringIndexOutOfBoundsException: String index out of range: 2[ is suppressed by ]java.lang.Exception: exception from my resource 4\n--java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.\n--java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n----java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.\n--java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n----java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.\n```\n\nfinallyのtry-with-resourcesブロック内の例外は同じブロック内の例外とtryブロック内を例外を抑制し、tryブロック内の例外はrunメソッド内のtry-with-resourcesブロックから出てきた例外を抑制していることが分かります。\n\n# 終わりに\n長文になりましたが、\n\n- 実行順番：  \ntry-with-resources内の宣言文（上から下へ）⇒try内の文⇒try-with-resourcesのcloseメソッド（下から上へ）⇒catch内の文⇒finally内の文\n- 例外優先度：  \nfinally内の例外⇒_消化_⇒try内の例外⇒_抑制_⇒try-with-resources内の例外\n- finallyは取扱注意：  \ntryとcatchブロック内の例外か戻り値を上書きする為、returnのようなものを入れることは論外です。\n\nと覚えればいいかと思います。\n\n# 参考になったページ\n1. https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\n2. http://stackoverflow.com/questions/40503733/suppressed-exception-disappeared-when-using-finally\n3. http://stackoverflow.com/questions/10736238/in-a-finally-block-can-i-tell-if-an-exception-has-been-thrown\n4. http://stackoverflow.com/questions/2309964/multiple-returns-which-one-sets-the-final-return-value\n","source":"_posts/try-catch-finally-and-exceptions.md","raw":"---\ntitle: try-catch-finally、try-with-resources、そして発生した例外たち\ndate: 2016-11-15 12:00:00\nlanguage: [japanese]\ntags: [java]\ncategory: tech\n---\n\n# 問題\n\n下記のコードの出力内容はどんな感じでしょうか？  \n\n```java\npublic class Test {\n    public static void main (String[] args) throws Exception {\n        try {\n            run();\n        } catch(Exception e) {\n            printSuppressedExceptions(e, \"-\");\n        }\n    }\n\n    public static void printSuppressedExceptions(Throwable t, String s) {\n        System.out.println(s + t + \" suppressed \" + t.getSuppressed().length + \" exception/exceptions.\");\n        if(t.getSuppressed().length != 0) {\n            for (Throwable ts : t.getSuppressed()) {\n                System.out.println(s + ts + \"[ is suppressed by ]\" + t);\n                printSuppressedExceptions(ts, s + s);\n            }\n        }\n    }\n    \n    public static String run() throws Exception {\n        try(MyResource r = new MyResource(\"resource 1\");\n            MyResource r2 = new MyResource(\"resource 2\");   \n            ) {\n            return System.out.printf(\"return from try\\n\").append(\"\",1,2).toString();\n        } catch(Exception e) {\n            printSuppressedExceptions(e, \"*\");\n            throw e;\n        } catch(Throwable t) {\n            System.out.println(\"print from 2nd catch block\");\n            return \"return from 2nd catch block\";\n        } finally {         \n            new MyResource(\"resource 3\").close();\n            new MyResource(\"resource 4\").close();\n        }\n    }       \n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\n# 分析\nこれを回答するのに、以下の内容を把握する必要があります。\n\n## １．System.out.printf(String)に戻り値が存在します？\n[Javadoc](https://docs.oracle.com/javase/jp/8/docs/api/java/io/PrintStream.html)を調べれば分かりますが、`PrintStream#printf`は`PrintStream#print`や`PrintStream#println`と違い、戻り値はPrintStreamになっています。  \n一見あんまり意味がなさそうですが、コンソールへの出力が可能でありながら**式**として扱える為、**文**としてしか扱えない`System.out.println`なんかより用途が多いはずです。\n\n```java\nclass Test\n{\n\tpublic static void main (String[] args)\n\t{\n\t\tif(System.out.printf(\"hello, \") != null) {\n\t\t\tSystem.out.println(\"world\");\n\t\t}\n\t}\n}\n```\n\n例えば、上記のコードの出力値は`Hello, world`になりますね。\n\nそして、PrintStream型である為、appendメソッドを使用することが可能です。しかし、二つ目の引数と3つ目の引数の大きさに気をつけなければ、お馴染みのStringBuilderと同じく、StringIndexOutOfBoundsExceptionが発生してしまうかもしれません。\n\n## ２．try-with-resources文で宣言したリソースのクローズ順番は？\ntryブロック内に例外が発生した場合、try-with-resources文の内で宣言したリソースは閉じられるのでしょうか？答えはYesになります。\nそうじゃなければ、データベースに関する処理を行う時に例外が発生してしまったら、データベースのコネクションなどが開かれたままになる恐れがありますね。  \nどういう順番で閉じられるかといいますと、宣言時の**逆順**で行います。例えば、下記の文では、r2が先に閉じられ、r1がその次になります。\n\n```java\npublic class Test {\n    public static void main (String[] args) {\n        run();\n    }\n    \n    public static void run() {\n        try(MyResource r = new MyResource(\"resource 1\");\n            MyResource r2 = new MyResource(\"resource 2\");\n            ) {\n           \n        } catch(Exception e) {\n\n        }\n    }       \n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        System.out.println(this.name);\n    }\n}\n```\n\nそのため、この例の出力は以下のようになります。\n\n```\nresource 2\nresource 1\n```\n\n## ３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\n例外を一旦置いといて、次のリソースを閉じに行きます。すなわち、リソースの宣言さえすれば、**必ず**閉じてくれます（バーチャルマシンが死んでしまったなど、異常な状況を除く）。では、次のリソースを閉じる時に、例外がまた発生してしまったらどうなります？この時は1.7より導入されたSuppressed Exceptions（抑制済み例外）の出番です。二つ目の例外が一つ目の例外に抑制られ、一つ目の例外の「抑制済み例外リスト」に加えられます。この「抑制済み例外リスト（Throwableの配列）」は[getSuppressed](https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#getSuppressed--)というメソッドより呼び出されられます。\n\n```java\nclass Test\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\ttry(\n\t\t\tMyResource r1 = new MyResource(\"resource 1\");\n\t\t\tMyResource r2 = new MyResource(\"resource 2\");\n\t\t){\n\t\t\t\n\t\t} catch(Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tfor(Throwable t: e.getSuppressed())\n\t\t\t\tSystem.out.println(\"**\" + t + \"**\");\n\t\t}\n\t}\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\nとなると、上記のコードの実行結果がこのようになることは容易に理解できるはずですね。\n\n```\njava.lang.Exception: exception from resource 2\n**java.lang.Exception: exception from resource 1**\n```\n\n## ４．tryのブロックに例外が発生したらどうなります？\ntryブロック内に例外が発生する可能性は一番高いですね（じゃないと、そもそもなぜtryを使うでしょう）。  \ntryブロック内に例外が発生したら、まずtry-with-resourcesのリソースが閉じられます。それからcatchブロック内の文が順番に実行されます。  \n「try-with-resources」のブロックと「try」のブロックから例外が飛んできた場合、「try-with-resources」で発生した例外が抑制されます。今の例を少し改造して実行してみれば一目瞭然ですね。  \n\n例：  \n\n```java\nclass Test\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\ttry(\n\t\t\tMyResource r1 = new MyResource(\"resource 1\");\n\t\t\tMyResource r2 = new MyResource(\"resource 2\");\n\t\t){\n\t\t\tSystem.getProperty(\"\");\t\t\t\n\t\t} catch(Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tfor(Throwable t: e.getSuppressed())\n\t\t\t\tSystem.out.println(\"**\" + t + \"**\");\n\t\t}\n\t}\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\n  \n結果：\n```\njava.lang.IllegalArgumentException: key can't be empty\n**java.lang.Exception: exception from resource 2**\n**java.lang.Exception: exception from resource 1**\n```\n\n## ５．複数のcatchブロックが存在する時、そいつらの関係は？\n下のcatchが上のcatchブロック内に発生した例外をキャッチすることはできません。catch文はtryの例外を処理するもので、お互いに例外を投げられません。catchブロック内で例外が発生したら、一層上に投げられます。  \nしかし、上のcatchがハンドリングできない例外は下に任せることができます。その逆は不可です。\n\n```java\n・・・\ntry {\n   System.out.println(\"0\");\n} catch(Excption e) {\n   System.out.println(\"1\");\n} catch(IOException ioe) {\n   System.out.println(\"2\");\n}\n・・・\n```\n\nはコンパイルエラーになります。下のcatchブロックは到達不可能だからです。\n\n## ６．finallyを加えたらどうなります？\nまず、tryの下に、finallyを加えたら、finallyブロック内の文は実行するのでしょうか？答えはYesです。  \nスレッドが死んだ時や`System#exit`が呼ばれたなど、とても珍しい状況じゃなければ、finallyは必ず実行されます。  \nそしたら、finallyブロックに例外が発生した場合、tryブロックとtry-with-resourcesから投げられてきた例外はどうなるでしょう？  \nfinallyで発生した例外以外の例外は無視されます。つまり、**消えてしまいます**。try-with-resourcesの場合、例外は「抑制済み例外リスト」に入れられますが、それは1.7以降から導入された内容で、従来のtry-catch-finallyはそれを使用していません。  \n\n```java\nclass Test\n{\n\tpublic static void main (String[] args) {\n\t\ttry {\n\t\t\trun();\n\t\t} catch(Exception e) {\n\t\t\tSystem.out.println(e);\n\t\t\tSystem.out.println(e.getSuppressed().length);\n\t\t}\n\t}\n\t\n\tprivate static void run() throws Exception {\n\t\ttry(\n\t\t\tMyResource r1 = new MyResource(\"resource 1\");\n\t\t\tMyResource r2 = new MyResource(\"resource 2\");\n\t\t){\n\t\t\tSystem.getProperty(\"\");\n\t\t} finally {\n\t\t\tnew MyResource(\"resource 3\").close();\n\t\t}\n\t}\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\nというコードの実行結果は下記のようになります。\n\n```\njava.lang.Exception: exception from resource 3\n0\n```\n\nそれに、finallyは最後に実行する為、finallyブロック内で発生した例外は上へ投げられます。つまり、例外が発生したら、それ以降のコードは実行されない恐れがあります。finallyは必ず実行されますが、**finally内の全ての文は必ず実行されるわけではありません**。その為、finallyの中でtry-catchを行うコードが良く見かけます。  \n\n# 回答\n以上の内容を理解できたら、最初に出てきた問題の結果がわかるようになるでしょう。\n\n```\nreturn from try\n*java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.\n*java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n**java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.\n*java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n**java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.\n-java.lang.Exception: exception from resource 3 suppressed 0 exception/exceptions.\n```\n\n# ボーナス\n抑制されたのに、その情報が揉み消されるなんてイヤですね。[addSuppressed](https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#addSuppressed-java.lang.Throwable-)というメソッドを利用すれば、自ら抑制済み例外リストに追加することが可能です。\n\n```java\npublic class Test {\n    public static void main (String[] args) throws Exception {\n        try {\n            run();\n        } catch(Exception e) {\n            printSuppressedExceptions(e, \"-\");\n        }\n    }\n\n\tpublic static void printSuppressedExceptions(Throwable t, String s) {\n\t\tSystem.out.println(s + t + \" suppressed \" + t.getSuppressed().length + \" exception/exceptions.\");\n\t\tif(t.getSuppressed().length != 0) {\n\t\t\tfor (Throwable ts : t.getSuppressed()) {\n    \t\t\tSystem.out.println(s + ts + \"[ is suppressed by ]\" + t);\n    \t\t\tprintSuppressedExceptions(ts, s + s);\n\t\t\t}\n\t\t}\n\t}\n\t\n    public static String run() throws Exception {\n        Exception ex = null;\n        try(MyResource r = new MyResource(\"resource 1\");\n        \tMyResource r2 = new MyResource(\"resource 2\");\t\n        \t) {\n        \treturn System.out.printf(\"return from try\\n\").append(\"\",1,2).toString();\n        } catch(Exception e) {\n        \tex = e;\n        \tthrow ex;\n        } finally {\n        \ttry(\n        \t\tMyResource r3 = new MyResource(\"my resource 3\");\n                MyResource r4 = new MyResource(\"my resource 4\");\n        \t\t) {\n        \t\t\n        \t} catch(Exception e) {\n        \t\tif(ex != null) e.addSuppressed(ex);\n        \t\tthrow e;\n        \t}\n        }\n    }   \t\n}\n\nclass MyResource implements AutoCloseable {\n    private final String name;\n\n    public MyResource(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"exception\" + \" from \" + this.name);\n    }\n}\n```\n\n上記のコードの実行結果はこんな感じです。\n\n```\nreturn from try\n-java.lang.Exception: exception from my resource 4 suppressed 2 exception/exceptions.\n-java.lang.Exception: exception from my resource 3[ is suppressed by ]java.lang.Exception: exception from my resource 4\n--java.lang.Exception: exception from my resource 3 suppressed 0 exception/exceptions.\n-java.lang.StringIndexOutOfBoundsException: String index out of range: 2[ is suppressed by ]java.lang.Exception: exception from my resource 4\n--java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.\n--java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n----java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.\n--java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n----java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.\n```\n\nfinallyのtry-with-resourcesブロック内の例外は同じブロック内の例外とtryブロック内を例外を抑制し、tryブロック内の例外はrunメソッド内のtry-with-resourcesブロックから出てきた例外を抑制していることが分かります。\n\n# 終わりに\n長文になりましたが、\n\n- 実行順番：  \ntry-with-resources内の宣言文（上から下へ）⇒try内の文⇒try-with-resourcesのcloseメソッド（下から上へ）⇒catch内の文⇒finally内の文\n- 例外優先度：  \nfinally内の例外⇒_消化_⇒try内の例外⇒_抑制_⇒try-with-resources内の例外\n- finallyは取扱注意：  \ntryとcatchブロック内の例外か戻り値を上書きする為、returnのようなものを入れることは論外です。\n\nと覚えればいいかと思います。\n\n# 参考になったページ\n1. https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\n2. http://stackoverflow.com/questions/40503733/suppressed-exception-disappeared-when-using-finally\n3. http://stackoverflow.com/questions/10736238/in-a-finally-block-can-i-tell-if-an-exception-has-been-thrown\n4. http://stackoverflow.com/questions/2309964/multiple-returns-which-one-sets-the-final-return-value\n","slug":"try-catch-finally-and-exceptions","published":1,"updated":"2017-11-27T13:08:36.039Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjap2hqdp0007b82rr6csqox9","content":"<h1 id=\"問題\"><a href=\"#問題\" class=\"headerlink\" title=\"問題\"></a>問題</h1><p>下記のコードの出力内容はどんな感じでしょうか？  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            run();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            printSuppressedExceptions(e, <span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printSuppressedExceptions</span><span class=\"params\">(Throwable t, String s)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(s + t + <span class=\"string\">\" suppressed \"</span> + t.getSuppressed().length + <span class=\"string\">\" exception/exceptions.\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t.getSuppressed().length != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Throwable ts : t.getSuppressed()) &#123;</span><br><span class=\"line\">                System.out.println(s + ts + <span class=\"string\">\"[ is suppressed by ]\"</span> + t);</span><br><span class=\"line\">                printSuppressedExceptions(ts, s + s);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>(MyResource r = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">            MyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);   </span><br><span class=\"line\">            ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> System.out.printf(<span class=\"string\">\"return from try\\n\"</span>).append(<span class=\"string\">\"\"</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>).toString();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            printSuppressedExceptions(e, <span class=\"string\">\"*\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Throwable t) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"print from 2nd catch block\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"return from 2nd catch block\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;         </span><br><span class=\"line\">            <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 3\"</span>).close();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 4\"</span>).close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><p>これを回答するのに、以下の内容を把握する必要があります。</p>\n<h2 id=\"１．System-out-printf-String-に戻り値が存在します？\"><a href=\"#１．System-out-printf-String-に戻り値が存在します？\" class=\"headerlink\" title=\"１．System.out.printf(String)に戻り値が存在します？\"></a>１．System.out.printf(String)に戻り値が存在します？</h2><p><a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/io/PrintStream.html\" target=\"_blank\" rel=\"noopener\">Javadoc</a>を調べれば分かりますが、<code>PrintStream#printf</code>は<code>PrintStream#print</code>や<code>PrintStream#println</code>と違い、戻り値はPrintStreamになっています。<br>一見あんまり意味がなさそうですが、コンソールへの出力が可能でありながら<strong>式</strong>として扱える為、<strong>文</strong>としてしか扱えない<code>System.out.println</code>なんかより用途が多いはずです。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(System.out.printf(<span class=\"string\">\"hello, \"</span>) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"world\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>例えば、上記のコードの出力値は<code>Hello, world</code>になりますね。</p>\n<p>そして、PrintStream型である為、appendメソッドを使用することが可能です。しかし、二つ目の引数と3つ目の引数の大きさに気をつけなければ、お馴染みのStringBuilderと同じく、StringIndexOutOfBoundsExceptionが発生してしまうかもしれません。</p>\n<h2 id=\"２．try-with-resources文で宣言したリソースのクローズ順番は？\"><a href=\"#２．try-with-resources文で宣言したリソースのクローズ順番は？\" class=\"headerlink\" title=\"２．try-with-resources文で宣言したリソースのクローズ順番は？\"></a>２．try-with-resources文で宣言したリソースのクローズ順番は？</h2><p>tryブロック内に例外が発生した場合、try-with-resources文の内で宣言したリソースは閉じられるのでしょうか？答えはYesになります。<br>そうじゃなければ、データベースに関する処理を行う時に例外が発生してしまったら、データベースのコネクションなどが開かれたままになる恐れがありますね。<br>どういう順番で閉じられるかといいますと、宣言時の<strong>逆順</strong>で行います。例えば、下記の文では、r2が先に閉じられ、r1がその次になります。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        run();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>(MyResource r = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">            MyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">            ) &#123;</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>そのため、この例の出力は以下のようになります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resource 2</span><br><span class=\"line\">resource 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\"><a href=\"#３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\" class=\"headerlink\" title=\"３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\"></a>３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？</h2><p>例外を一旦置いといて、次のリソースを閉じに行きます。すなわち、リソースの宣言さえすれば、<strong>必ず</strong>閉じてくれます（バーチャルマシンが死んでしまったなど、異常な状況を除く）。では、次のリソースを閉じる時に、例外がまた発生してしまったらどうなります？この時は1.7より導入されたSuppressed Exceptions（抑制済み例外）の出番です。二つ目の例外が一つ目の例外に抑制られ、一つ目の例外の「抑制済み例外リスト」に加えられます。この「抑制済み例外リスト（Throwableの配列）」は<a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#getSuppressed--\" target=\"_blank\" rel=\"noopener\">getSuppressed</a>というメソッドより呼び出されられます。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> java.lang.Exception</span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">\t\t\tMyResource r1 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">\t\t\tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">\t\t)&#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(Throwable t: e.getSuppressed())</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"**\"</span> + t + <span class=\"string\">\"**\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>となると、上記のコードの実行結果がこのようになることは容易に理解できるはずですね。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.Exception: exception from resource 2</span><br><span class=\"line\">**java.lang.Exception: exception from resource 1**</span><br></pre></td></tr></table></figure>\n<h2 id=\"４．tryのブロックに例外が発生したらどうなります？\"><a href=\"#４．tryのブロックに例外が発生したらどうなります？\" class=\"headerlink\" title=\"４．tryのブロックに例外が発生したらどうなります？\"></a>４．tryのブロックに例外が発生したらどうなります？</h2><p>tryブロック内に例外が発生する可能性は一番高いですね（じゃないと、そもそもなぜtryを使うでしょう）。<br>tryブロック内に例外が発生したら、まずtry-with-resourcesのリソースが閉じられます。それからcatchブロック内の文が順番に実行されます。<br>「try-with-resources」のブロックと「try」のブロックから例外が飛んできた場合、「try-with-resources」で発生した例外が抑制されます。今の例を少し改造して実行してみれば一目瞭然ですね。  </p>\n<p>例：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> java.lang.Exception</span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">\t\t\tMyResource r1 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">\t\t\tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">\t\t)&#123;</span><br><span class=\"line\">\t\t\tSystem.getProperty(<span class=\"string\">\"\"</span>);\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(Throwable t: e.getSuppressed())</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"**\"</span> + t + <span class=\"string\">\"**\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>結果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.IllegalArgumentException: key can&apos;t be empty</span><br><span class=\"line\">**java.lang.Exception: exception from resource 2**</span><br><span class=\"line\">**java.lang.Exception: exception from resource 1**</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"５．複数のcatchブロックが存在する時、そいつらの関係は？\"><a href=\"#５．複数のcatchブロックが存在する時、そいつらの関係は？\" class=\"headerlink\" title=\"５．複数のcatchブロックが存在する時、そいつらの関係は？\"></a>５．複数のcatchブロックが存在する時、そいつらの関係は？</h2><p>下のcatchが上のcatchブロック内に発生した例外をキャッチすることはできません。catch文はtryの例外を処理するもので、お互いに例外を投げられません。catchブロック内で例外が発生したら、一層上に投げられます。<br>しかし、上のcatchがハンドリングできない例外は下に任せることができます。その逆は不可です。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">・・・</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(Excption e) &#123;</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(IOException ioe) &#123;</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"2\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">・・・</span><br></pre></td></tr></table></figure>\n<p>はコンパイルエラーになります。下のcatchブロックは到達不可能だからです。</p>\n<h2 id=\"６．finallyを加えたらどうなります？\"><a href=\"#６．finallyを加えたらどうなります？\" class=\"headerlink\" title=\"６．finallyを加えたらどうなります？\"></a>６．finallyを加えたらどうなります？</h2><p>まず、tryの下に、finallyを加えたら、finallyブロック内の文は実行するのでしょうか？答えはYesです。<br>スレッドが死んだ時や<code>System#exit</code>が呼ばれたなど、とても珍しい状況じゃなければ、finallyは必ず実行されます。<br>そしたら、finallyブロックに例外が発生した場合、tryブロックとtry-with-resourcesから投げられてきた例外はどうなるでしょう？<br>finallyで発生した例外以外の例外は無視されます。つまり、<strong>消えてしまいます</strong>。try-with-resourcesの場合、例外は「抑制済み例外リスト」に入れられますが、それは1.7以降から導入された内容で、従来のtry-catch-finallyはそれを使用していません。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\trun();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\tSystem.out.println(e.getSuppressed().length);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">\t\t\tMyResource r1 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">\t\t\tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">\t\t)&#123;</span><br><span class=\"line\">\t\t\tSystem.getProperty(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 3\"</span>).close();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>というコードの実行結果は下記のようになります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.Exception: exception from resource 3</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n<p>それに、finallyは最後に実行する為、finallyブロック内で発生した例外は上へ投げられます。つまり、例外が発生したら、それ以降のコードは実行されない恐れがあります。finallyは必ず実行されますが、<strong>finally内の全ての文は必ず実行されるわけではありません</strong>。その為、finallyの中でtry-catchを行うコードが良く見かけます。  </p>\n<h1 id=\"回答\"><a href=\"#回答\" class=\"headerlink\" title=\"回答\"></a>回答</h1><p>以上の内容を理解できたら、最初に出てきた問題の結果がわかるようになるでしょう。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return from try</span><br><span class=\"line\">*java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.</span><br><span class=\"line\">*java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">**java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.</span><br><span class=\"line\">*java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">**java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.</span><br><span class=\"line\">-java.lang.Exception: exception from resource 3 suppressed 0 exception/exceptions.</span><br></pre></td></tr></table></figure>\n<h1 id=\"ボーナス\"><a href=\"#ボーナス\" class=\"headerlink\" title=\"ボーナス\"></a>ボーナス</h1><p>抑制されたのに、その情報が揉み消されるなんてイヤですね。<a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#addSuppressed-java.lang.Throwable-\" target=\"_blank\" rel=\"noopener\">addSuppressed</a>というメソッドを利用すれば、自ら抑制済み例外リストに追加することが可能です。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            run();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            printSuppressedExceptions(e, <span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printSuppressedExceptions</span><span class=\"params\">(Throwable t, String s)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(s + t + <span class=\"string\">\" suppressed \"</span> + t.getSuppressed().length + <span class=\"string\">\" exception/exceptions.\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(t.getSuppressed().length != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Throwable ts : t.getSuppressed()) &#123;</span><br><span class=\"line\">    \t\t\tSystem.out.println(s + ts + <span class=\"string\">\"[ is suppressed by ]\"</span> + t);</span><br><span class=\"line\">    \t\t\tprintSuppressedExceptions(ts, s + s);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Exception ex = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>(MyResource r = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">        \tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);\t</span><br><span class=\"line\">        \t) &#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">return</span> System.out.printf(<span class=\"string\">\"return from try\\n\"</span>).append(<span class=\"string\">\"\"</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>).toString();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">        \tex = e;</span><br><span class=\"line\">        \t<span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">        \t\tMyResource r3 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"my resource 3\"</span>);</span><br><span class=\"line\">                MyResource r4 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"my resource 4\"</span>);</span><br><span class=\"line\">        \t\t) &#123;</span><br><span class=\"line\">        \t\t</span><br><span class=\"line\">        \t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">        \t\t<span class=\"keyword\">if</span>(ex != <span class=\"keyword\">null</span>) e.addSuppressed(ex);</span><br><span class=\"line\">        \t\t<span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">        \t&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;   \t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上記のコードの実行結果はこんな感じです。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return from try</span><br><span class=\"line\">-java.lang.Exception: exception from my resource 4 suppressed 2 exception/exceptions.</span><br><span class=\"line\">-java.lang.Exception: exception from my resource 3[ is suppressed by ]java.lang.Exception: exception from my resource 4</span><br><span class=\"line\">--java.lang.Exception: exception from my resource 3 suppressed 0 exception/exceptions.</span><br><span class=\"line\">-java.lang.StringIndexOutOfBoundsException: String index out of range: 2[ is suppressed by ]java.lang.Exception: exception from my resource 4</span><br><span class=\"line\">--java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.</span><br><span class=\"line\">--java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">----java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.</span><br><span class=\"line\">--java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">----java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.</span><br></pre></td></tr></table></figure>\n<p>finallyのtry-with-resourcesブロック内の例外は同じブロック内の例外とtryブロック内を例外を抑制し、tryブロック内の例外はrunメソッド内のtry-with-resourcesブロックから出てきた例外を抑制していることが分かります。</p>\n<h1 id=\"終わりに\"><a href=\"#終わりに\" class=\"headerlink\" title=\"終わりに\"></a>終わりに</h1><p>長文になりましたが、</p>\n<ul>\n<li>実行順番：<br>try-with-resources内の宣言文（上から下へ）⇒try内の文⇒try-with-resourcesのcloseメソッド（下から上へ）⇒catch内の文⇒finally内の文</li>\n<li>例外優先度：<br>finally内の例外⇒<em>消化</em>⇒try内の例外⇒<em>抑制</em>⇒try-with-resources内の例外</li>\n<li>finallyは取扱注意：<br>tryとcatchブロック内の例外か戻り値を上書きする為、returnのようなものを入れることは論外です。</li>\n</ul>\n<p>と覚えればいいかと思います。</p>\n<h1 id=\"参考になったページ\"><a href=\"#参考になったページ\" class=\"headerlink\" title=\"参考になったページ\"></a>参考になったページ</h1><ol>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html</a></li>\n<li><a href=\"http://stackoverflow.com/questions/40503733/suppressed-exception-disappeared-when-using-finally\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/40503733/suppressed-exception-disappeared-when-using-finally</a></li>\n<li><a href=\"http://stackoverflow.com/questions/10736238/in-a-finally-block-can-i-tell-if-an-exception-has-been-thrown\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/10736238/in-a-finally-block-can-i-tell-if-an-exception-has-been-thrown</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2309964/multiple-returns-which-one-sets-the-final-return-value\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/2309964/multiple-returns-which-one-sets-the-final-return-value</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"問題\"><a href=\"#問題\" class=\"headerlink\" title=\"問題\"></a>問題</h1><p>下記のコードの出力内容はどんな感じでしょうか？  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            run();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            printSuppressedExceptions(e, <span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printSuppressedExceptions</span><span class=\"params\">(Throwable t, String s)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(s + t + <span class=\"string\">\" suppressed \"</span> + t.getSuppressed().length + <span class=\"string\">\" exception/exceptions.\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t.getSuppressed().length != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Throwable ts : t.getSuppressed()) &#123;</span><br><span class=\"line\">                System.out.println(s + ts + <span class=\"string\">\"[ is suppressed by ]\"</span> + t);</span><br><span class=\"line\">                printSuppressedExceptions(ts, s + s);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>(MyResource r = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">            MyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);   </span><br><span class=\"line\">            ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> System.out.printf(<span class=\"string\">\"return from try\\n\"</span>).append(<span class=\"string\">\"\"</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>).toString();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            printSuppressedExceptions(e, <span class=\"string\">\"*\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Throwable t) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"print from 2nd catch block\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"return from 2nd catch block\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;         </span><br><span class=\"line\">            <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 3\"</span>).close();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 4\"</span>).close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><p>これを回答するのに、以下の内容を把握する必要があります。</p>\n<h2 id=\"１．System-out-printf-String-に戻り値が存在します？\"><a href=\"#１．System-out-printf-String-に戻り値が存在します？\" class=\"headerlink\" title=\"１．System.out.printf(String)に戻り値が存在します？\"></a>１．System.out.printf(String)に戻り値が存在します？</h2><p><a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/io/PrintStream.html\" target=\"_blank\" rel=\"noopener\">Javadoc</a>を調べれば分かりますが、<code>PrintStream#printf</code>は<code>PrintStream#print</code>や<code>PrintStream#println</code>と違い、戻り値はPrintStreamになっています。<br>一見あんまり意味がなさそうですが、コンソールへの出力が可能でありながら<strong>式</strong>として扱える為、<strong>文</strong>としてしか扱えない<code>System.out.println</code>なんかより用途が多いはずです。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(System.out.printf(<span class=\"string\">\"hello, \"</span>) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"world\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>例えば、上記のコードの出力値は<code>Hello, world</code>になりますね。</p>\n<p>そして、PrintStream型である為、appendメソッドを使用することが可能です。しかし、二つ目の引数と3つ目の引数の大きさに気をつけなければ、お馴染みのStringBuilderと同じく、StringIndexOutOfBoundsExceptionが発生してしまうかもしれません。</p>\n<h2 id=\"２．try-with-resources文で宣言したリソースのクローズ順番は？\"><a href=\"#２．try-with-resources文で宣言したリソースのクローズ順番は？\" class=\"headerlink\" title=\"２．try-with-resources文で宣言したリソースのクローズ順番は？\"></a>２．try-with-resources文で宣言したリソースのクローズ順番は？</h2><p>tryブロック内に例外が発生した場合、try-with-resources文の内で宣言したリソースは閉じられるのでしょうか？答えはYesになります。<br>そうじゃなければ、データベースに関する処理を行う時に例外が発生してしまったら、データベースのコネクションなどが開かれたままになる恐れがありますね。<br>どういう順番で閉じられるかといいますと、宣言時の<strong>逆順</strong>で行います。例えば、下記の文では、r2が先に閉じられ、r1がその次になります。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        run();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>(MyResource r = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">            MyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">            ) &#123;</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>そのため、この例の出力は以下のようになります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resource 2</span><br><span class=\"line\">resource 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\"><a href=\"#３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\" class=\"headerlink\" title=\"３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？\"></a>３．try-with-resources内のリソースが閉じられる時に、例外が発生したらどうなります？</h2><p>例外を一旦置いといて、次のリソースを閉じに行きます。すなわち、リソースの宣言さえすれば、<strong>必ず</strong>閉じてくれます（バーチャルマシンが死んでしまったなど、異常な状況を除く）。では、次のリソースを閉じる時に、例外がまた発生してしまったらどうなります？この時は1.7より導入されたSuppressed Exceptions（抑制済み例外）の出番です。二つ目の例外が一つ目の例外に抑制られ、一つ目の例外の「抑制済み例外リスト」に加えられます。この「抑制済み例外リスト（Throwableの配列）」は<a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#getSuppressed--\" target=\"_blank\" rel=\"noopener\">getSuppressed</a>というメソッドより呼び出されられます。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> java.lang.Exception</span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">\t\t\tMyResource r1 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">\t\t\tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">\t\t)&#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(Throwable t: e.getSuppressed())</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"**\"</span> + t + <span class=\"string\">\"**\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>となると、上記のコードの実行結果がこのようになることは容易に理解できるはずですね。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.Exception: exception from resource 2</span><br><span class=\"line\">**java.lang.Exception: exception from resource 1**</span><br></pre></td></tr></table></figure>\n<h2 id=\"４．tryのブロックに例外が発生したらどうなります？\"><a href=\"#４．tryのブロックに例外が発生したらどうなります？\" class=\"headerlink\" title=\"４．tryのブロックに例外が発生したらどうなります？\"></a>４．tryのブロックに例外が発生したらどうなります？</h2><p>tryブロック内に例外が発生する可能性は一番高いですね（じゃないと、そもそもなぜtryを使うでしょう）。<br>tryブロック内に例外が発生したら、まずtry-with-resourcesのリソースが閉じられます。それからcatchブロック内の文が順番に実行されます。<br>「try-with-resources」のブロックと「try」のブロックから例外が飛んできた場合、「try-with-resources」で発生した例外が抑制されます。今の例を少し改造して実行してみれば一目瞭然ですね。  </p>\n<p>例：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> java.lang.Exception</span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">\t\t\tMyResource r1 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">\t\t\tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">\t\t)&#123;</span><br><span class=\"line\">\t\t\tSystem.getProperty(<span class=\"string\">\"\"</span>);\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(Throwable t: e.getSuppressed())</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"**\"</span> + t + <span class=\"string\">\"**\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>結果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.IllegalArgumentException: key can&apos;t be empty</span><br><span class=\"line\">**java.lang.Exception: exception from resource 2**</span><br><span class=\"line\">**java.lang.Exception: exception from resource 1**</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"５．複数のcatchブロックが存在する時、そいつらの関係は？\"><a href=\"#５．複数のcatchブロックが存在する時、そいつらの関係は？\" class=\"headerlink\" title=\"５．複数のcatchブロックが存在する時、そいつらの関係は？\"></a>５．複数のcatchブロックが存在する時、そいつらの関係は？</h2><p>下のcatchが上のcatchブロック内に発生した例外をキャッチすることはできません。catch文はtryの例外を処理するもので、お互いに例外を投げられません。catchブロック内で例外が発生したら、一層上に投げられます。<br>しかし、上のcatchがハンドリングできない例外は下に任せることができます。その逆は不可です。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">・・・</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(Excption e) &#123;</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(IOException ioe) &#123;</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"2\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">・・・</span><br></pre></td></tr></table></figure>\n<p>はコンパイルエラーになります。下のcatchブロックは到達不可能だからです。</p>\n<h2 id=\"６．finallyを加えたらどうなります？\"><a href=\"#６．finallyを加えたらどうなります？\" class=\"headerlink\" title=\"６．finallyを加えたらどうなります？\"></a>６．finallyを加えたらどうなります？</h2><p>まず、tryの下に、finallyを加えたら、finallyブロック内の文は実行するのでしょうか？答えはYesです。<br>スレッドが死んだ時や<code>System#exit</code>が呼ばれたなど、とても珍しい状況じゃなければ、finallyは必ず実行されます。<br>そしたら、finallyブロックに例外が発生した場合、tryブロックとtry-with-resourcesから投げられてきた例外はどうなるでしょう？<br>finallyで発生した例外以外の例外は無視されます。つまり、<strong>消えてしまいます</strong>。try-with-resourcesの場合、例外は「抑制済み例外リスト」に入れられますが、それは1.7以降から導入された内容で、従来のtry-catch-finallyはそれを使用していません。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\trun();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(e);</span><br><span class=\"line\">\t\t\tSystem.out.println(e.getSuppressed().length);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">\t\t\tMyResource r1 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">\t\t\tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);</span><br><span class=\"line\">\t\t)&#123;</span><br><span class=\"line\">\t\t\tSystem.getProperty(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 3\"</span>).close();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>というコードの実行結果は下記のようになります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.Exception: exception from resource 3</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n<p>それに、finallyは最後に実行する為、finallyブロック内で発生した例外は上へ投げられます。つまり、例外が発生したら、それ以降のコードは実行されない恐れがあります。finallyは必ず実行されますが、<strong>finally内の全ての文は必ず実行されるわけではありません</strong>。その為、finallyの中でtry-catchを行うコードが良く見かけます。  </p>\n<h1 id=\"回答\"><a href=\"#回答\" class=\"headerlink\" title=\"回答\"></a>回答</h1><p>以上の内容を理解できたら、最初に出てきた問題の結果がわかるようになるでしょう。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return from try</span><br><span class=\"line\">*java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.</span><br><span class=\"line\">*java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">**java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.</span><br><span class=\"line\">*java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">**java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.</span><br><span class=\"line\">-java.lang.Exception: exception from resource 3 suppressed 0 exception/exceptions.</span><br></pre></td></tr></table></figure>\n<h1 id=\"ボーナス\"><a href=\"#ボーナス\" class=\"headerlink\" title=\"ボーナス\"></a>ボーナス</h1><p>抑制されたのに、その情報が揉み消されるなんてイヤですね。<a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Throwable.html#addSuppressed-java.lang.Throwable-\" target=\"_blank\" rel=\"noopener\">addSuppressed</a>というメソッドを利用すれば、自ら抑制済み例外リストに追加することが可能です。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            run();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            printSuppressedExceptions(e, <span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printSuppressedExceptions</span><span class=\"params\">(Throwable t, String s)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(s + t + <span class=\"string\">\" suppressed \"</span> + t.getSuppressed().length + <span class=\"string\">\" exception/exceptions.\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(t.getSuppressed().length != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Throwable ts : t.getSuppressed()) &#123;</span><br><span class=\"line\">    \t\t\tSystem.out.println(s + ts + <span class=\"string\">\"[ is suppressed by ]\"</span> + t);</span><br><span class=\"line\">    \t\t\tprintSuppressedExceptions(ts, s + s);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Exception ex = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>(MyResource r = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 1\"</span>);</span><br><span class=\"line\">        \tMyResource r2 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"resource 2\"</span>);\t</span><br><span class=\"line\">        \t) &#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">return</span> System.out.printf(<span class=\"string\">\"return from try\\n\"</span>).append(<span class=\"string\">\"\"</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>).toString();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">        \tex = e;</span><br><span class=\"line\">        \t<span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">try</span>(</span><br><span class=\"line\">        \t\tMyResource r3 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"my resource 3\"</span>);</span><br><span class=\"line\">                MyResource r4 = <span class=\"keyword\">new</span> MyResource(<span class=\"string\">\"my resource 4\"</span>);</span><br><span class=\"line\">        \t\t) &#123;</span><br><span class=\"line\">        \t\t</span><br><span class=\"line\">        \t&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">        \t\t<span class=\"keyword\">if</span>(ex != <span class=\"keyword\">null</span>) e.addSuppressed(ex);</span><br><span class=\"line\">        \t\t<span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">        \t&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;   \t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> <span class=\"keyword\">implements</span> <span class=\"title\">AutoCloseable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"exception\"</span> + <span class=\"string\">\" from \"</span> + <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上記のコードの実行結果はこんな感じです。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return from try</span><br><span class=\"line\">-java.lang.Exception: exception from my resource 4 suppressed 2 exception/exceptions.</span><br><span class=\"line\">-java.lang.Exception: exception from my resource 3[ is suppressed by ]java.lang.Exception: exception from my resource 4</span><br><span class=\"line\">--java.lang.Exception: exception from my resource 3 suppressed 0 exception/exceptions.</span><br><span class=\"line\">-java.lang.StringIndexOutOfBoundsException: String index out of range: 2[ is suppressed by ]java.lang.Exception: exception from my resource 4</span><br><span class=\"line\">--java.lang.StringIndexOutOfBoundsException: String index out of range: 2 suppressed 2 exception/exceptions.</span><br><span class=\"line\">--java.lang.Exception: exception from resource 2[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">----java.lang.Exception: exception from resource 2 suppressed 0 exception/exceptions.</span><br><span class=\"line\">--java.lang.Exception: exception from resource 1[ is suppressed by ]java.lang.StringIndexOutOfBoundsException: String index out of range: 2</span><br><span class=\"line\">----java.lang.Exception: exception from resource 1 suppressed 0 exception/exceptions.</span><br></pre></td></tr></table></figure>\n<p>finallyのtry-with-resourcesブロック内の例外は同じブロック内の例外とtryブロック内を例外を抑制し、tryブロック内の例外はrunメソッド内のtry-with-resourcesブロックから出てきた例外を抑制していることが分かります。</p>\n<h1 id=\"終わりに\"><a href=\"#終わりに\" class=\"headerlink\" title=\"終わりに\"></a>終わりに</h1><p>長文になりましたが、</p>\n<ul>\n<li>実行順番：<br>try-with-resources内の宣言文（上から下へ）⇒try内の文⇒try-with-resourcesのcloseメソッド（下から上へ）⇒catch内の文⇒finally内の文</li>\n<li>例外優先度：<br>finally内の例外⇒<em>消化</em>⇒try内の例外⇒<em>抑制</em>⇒try-with-resources内の例外</li>\n<li>finallyは取扱注意：<br>tryとcatchブロック内の例外か戻り値を上書きする為、returnのようなものを入れることは論外です。</li>\n</ul>\n<p>と覚えればいいかと思います。</p>\n<h1 id=\"参考になったページ\"><a href=\"#参考になったページ\" class=\"headerlink\" title=\"参考になったページ\"></a>参考になったページ</h1><ol>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html</a></li>\n<li><a href=\"http://stackoverflow.com/questions/40503733/suppressed-exception-disappeared-when-using-finally\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/40503733/suppressed-exception-disappeared-when-using-finally</a></li>\n<li><a href=\"http://stackoverflow.com/questions/10736238/in-a-finally-block-can-i-tell-if-an-exception-has-been-thrown\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/10736238/in-a-finally-block-can-i-tell-if-an-exception-has-been-thrown</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2309964/multiple-returns-which-one-sets-the-final-return-value\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/2309964/multiple-returns-which-one-sets-the-final-return-value</a></li>\n</ol>\n"},{"title":"コンポーネント間イベント通信の方法を変更しよう","date":"2016-08-30T03:50:00.000Z","language":["japanese"],"_content":"\n# 背景\n今までVue.jsのコンポーネント間のイベント通信を行わせる時に、`$dispatch()`と`$broadcast()`を用いたことが多いです（Vue.js及びコンポーネントについては[公式ページ](http://vuejs.org/guide/)をご参考ください）。しかし、これらはVue.js 2.0で廃止される予定です[^1]。コンポーネントのツリー構造の膨大化によって追跡が難しくなることと兄弟コンポーネントの通信がやりにくいことが理由として挙げられています。その代わりに、Node.jsのEventEmitterパターンが推奨されています[^2]。このやり方はVue.js 1.0のAPIを使って実現できます[^3]ので、まだ2.0に移行していなくても、これからイベント通信を書く時に使用すべきでしょう。\n\n# 移行の手順\n下記のコードを2.0の書き方に移行するとしましょう。\n\n```html\n<div id=\"app\">\n<div @click=\"clicked\">\n{{ text }}\n</div>\n<comp-a></comp-a>\n<comp-b></comp-b>\n</div>\n```\n\n```js\nvar CompA = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component A',\n      text: 'Component A'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component a clicked');\n      this.$dispatch('DISPATCHED', this.name);\n    }\n  },\n  events: {\n    BROADCASTED(name) {\n      console.log(name);\n      this.text = 'broadcasted from ' + name;\n    }\n  }\n});\n\nvar CompB = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component B',\n      text: 'Component B'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component b clicked');\n      this.$dispatch('DISPATCHED', this.name);\n    }\n  },\n  events: {\n    BROADCASTED(name) {\n      console.log(name);\n      this.text = 'broadcasted from ' + name;\n    }\n  }\n});\n\nvar App = new Vue({\n  el: '#app',\n  components: {\n    CompA, CompB\n  },\n  data: {\n    name: 'app',\n    text: 'app'\n  },\n  methods: {\n    clicked() {\n      console.log('app clicked');\n      this.$broadcast('BROADCASTED', this.name);\n    }\n  },\n  events: {\n    DISPATCHED(name) {\n      console.log(name);\n      this.text = 'dispatched from ' + name; \n    }\n  }\n});\n```\n\n## 1. まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。  \n\n```js\nvar bus = new Vue();\n```\n\n## 2. 送信側は`$dispatch`か`$broadcast`を使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを`$emit`に書き換えます。\n\n```js\n  // old\n  this.$dispatch('DISPATCHED', this.name);\n  // new  \n  bus.$emit('DISPATCHED', this.name);\n```\n\n## 3. 受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの`$on`に結びつけ、リッスンしてもらいます。\n\n```js\n  // old\n  events: {\n    DISPATCHED(name) {\n      console.log(name);\n      this.text = 'dispatched from ' + name; \n    }\n  }\n  // new\n  created() {\n    const self = this;\n    bus.$on('DISPATCHED', function(name) {\n      console.log(name);\n      self.text = 'dispatched from ' + name; \n    })\n  }\n```\n\n## 4. 最終的なコードはこんな感じになります。\n\n```js\nvar bus = new Vue();\n\nvar CompA = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component A',\n      text: 'Component A'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component a clicked');\n      //this.$dispatch('DISPATCHED', this.name);\n      bus.$emit('DISPATCHED', this.name);\n    }\n  },\n//  events: {\n//    BROADCASTED(name) {\n//      console.log(name);\n//      this.text = 'broadcasted from ' + name;\n//    }\n//  }\n  created() {\n    const self = this;\n    bus.$on('BROADCASTED', function(name) {\n      console.log(name);\n      self.text = 'broadcasted from ' + name;\n    });\n  }\n});\n\nvar CompB = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component B',\n      text: 'Component B'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component b clicked');\n      //this.$dispatch('DISPATCHED', this.name);\n      bus.$emit('DISPATCHED', this.name);\n    }\n  },\n//  events: {\n//    BROADCASTED(name) {\n//      console.log(name);\n//      this.text = 'broadcasted from ' + name;\n//    }\n//  }\n  created() {\n    const self = this;\n    bus.$on('BROADCASTED', function(name) {\n      console.log(name);\n      self.text = 'broadcasted from ' + name;\n    });\n  }\n});\n\nvar App = new Vue({\n  el: '#app',\n  components: {\n    CompA, CompB\n  },\n  data: {\n    name: 'app',\n    text: 'app'\n  },\n  methods: {\n    clicked() {\n      console.log('app clicked');\n      //this.$broadcast('BROADCASTED', this.name);\n      bus.$emit('BROADCASTED', this.name);\n    }\n  },\n//  events: {\n//    DISPATCHED(name) {\n//      console.log(name);\n//      this.text = 'dispatched from ' + name; \n//    }\n//  }\n  created() {\n    const self = this;\n    bus.$on('DISPATCHED', function(name) {\n      console.log(name);\n      self.text = 'dispatched from ' + name; \n    })\n  }\n});\n```\n\n# まとめ\n移行のイメージは下記の図のようにまとめられると思います。  \n\n![ComponentsEventCommunication.png](https://qiita-image-store.s3.amazonaws.com/0/129176/b29e4e37-4017-fc2e-045c-fcc08d123b7a.png)\n\n全てのイベントを一旦Busというハブに送り、そしてハブからリッスンしているところにイベントを送信します。イメージ図だけを観察したら、やや複雑になってきましたが、前に挙げた2つの欠点が確かに解消できました。  \nしかし、全てのイベントがまとめられて同じところに送信する必要があるため、間違って意図しなかったコンポーネントに送ってしまう可能性も高くなってきていますので、気をつける必要があります。また、この設計にしたら、Vuexとほぼ変わらない感覚になってしまいます[^4]ので、Vuexを面倒くさがらず、いっそ導入してしまえばとも思いますね。\n\n# Vuexを使って実装してみよう\nVuexを使用して実装するのに、Vuexのstoreを追加してインスタンスに入れ、stateとmutationを配置し、getterとactionを作成する必要があります。また、今回においてコンポーネントに表示すべきなテキストは最初から決められているわけでないため、computeを使ってtextを計算した方が妥当でしょう。Vuexを使った実装は下記のようになります。\n\n```js\n// -- Vuex --\nconst state = {\n  dispatched: '',\n  broadcasted: ''\n};\n\nconst mutations = {\n  DISPATCHED(state, name) {\n    state.dispatched = 'dispatched from ' + name;\n  },\n  BROADCASTED(state, name) {\n    state.broadcasted = 'broadcasted from ' + name;\n  }\n};\n\nconst store = new Vuex.Store({\n  state,\n  mutations\n});\n// -- Vuex --\n\nvar CompA = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component A',\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component a clicked');\n      this.dispatch_(this.name);\n    }\n  },\n  computed: {\n    text() {\n      return this.broadcasted || this.name;\n    }\n  },\n  vuex: {\n    getters: {\n      broadcasted() {\n        return state.broadcasted;\n      }\n    },\n    actions: {\n      dispatch_({dispatch}, name) {\n        dispatch('DISPATCHED', name);\n      }\n    }\n  }\n});\n\nvar CompB = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component B',\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component b clicked');\n      this.dispatch_(this.name);\n    }\n  },\n  computed: {\n    text() {\n      return this.broadcasted || this.name;\n    }\n  },\n  vuex: {\n    getters: {\n      broadcasted() {\n        return state.broadcasted;\n      }\n    },\n    actions: {\n      dispatch_({dispatch}, name) {\n        dispatch('DISPATCHED', name);\n      }\n    }\n  }\n});\n\nvar App = new Vue({\n  el: '#app',\n  store,\n  components: {\n    CompA, CompB\n  },\n  data: {\n    name: 'app'\n  },\n  methods: {\n    clicked() {\n      console.log('app clicked');\n      this.broadcast_(this.name);\n    }\n  },\n  computed: {\n    text() {\n      return this.dispatched || this.name;\n    }\n  },\n  vuex: {\n    getters: {\n      dispatched() {\n        return state.dispatched;\n      }\n    },\n    actions: {\n      broadcast_({dispatch}, name) {\n        dispatch('BROADCASTED', name);\n      }\n    }\n  }\n});\n```\n\n基本的な考え方は送信がactionで行い、受信がgetterでやることです。  \n\n# 真・まとめ\nVue.jsの発達によって、Vueで大規模なサービスを構築するケースも増えてきていますので、従来のdispatch/broadcastの考え方が追いつけなくなりました。dispatch/broadcastのようなやり方より、ハブのようなものを利用し、データの保存・転送を行うことが望ましくなってきました。なので、Vue.js 2.0においてdispatchとbroadcastを廃止してしまってもおかしくありません。今からVue.jsでサービスを作り始めたい場合、早々からVuexを導入してもいいかもしれませんね。  \n\n[^1]: https://github.com/vuejs/vue/issues/2873\n[^2]: https://nodejs.org/api/events.html#events_class_eventemitter\n[^3]: http://jp.vuejs.org/guide/components.html#カスタムイベント\n[^4]: http://vuex.vuejs.org/ja/data-flow.html\n","source":"_posts/communication-among-components-in-vue.md","raw":"---\ntitle: コンポーネント間イベント通信の方法を変更しよう\ndate: 2016-08-30 12:50:00\nlanguage: [japanese]\ntags: [vue.js, javascript]\ncategory: tech\n---\n\n# 背景\n今までVue.jsのコンポーネント間のイベント通信を行わせる時に、`$dispatch()`と`$broadcast()`を用いたことが多いです（Vue.js及びコンポーネントについては[公式ページ](http://vuejs.org/guide/)をご参考ください）。しかし、これらはVue.js 2.0で廃止される予定です[^1]。コンポーネントのツリー構造の膨大化によって追跡が難しくなることと兄弟コンポーネントの通信がやりにくいことが理由として挙げられています。その代わりに、Node.jsのEventEmitterパターンが推奨されています[^2]。このやり方はVue.js 1.0のAPIを使って実現できます[^3]ので、まだ2.0に移行していなくても、これからイベント通信を書く時に使用すべきでしょう。\n\n# 移行の手順\n下記のコードを2.0の書き方に移行するとしましょう。\n\n```html\n<div id=\"app\">\n<div @click=\"clicked\">\n{{ text }}\n</div>\n<comp-a></comp-a>\n<comp-b></comp-b>\n</div>\n```\n\n```js\nvar CompA = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component A',\n      text: 'Component A'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component a clicked');\n      this.$dispatch('DISPATCHED', this.name);\n    }\n  },\n  events: {\n    BROADCASTED(name) {\n      console.log(name);\n      this.text = 'broadcasted from ' + name;\n    }\n  }\n});\n\nvar CompB = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component B',\n      text: 'Component B'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component b clicked');\n      this.$dispatch('DISPATCHED', this.name);\n    }\n  },\n  events: {\n    BROADCASTED(name) {\n      console.log(name);\n      this.text = 'broadcasted from ' + name;\n    }\n  }\n});\n\nvar App = new Vue({\n  el: '#app',\n  components: {\n    CompA, CompB\n  },\n  data: {\n    name: 'app',\n    text: 'app'\n  },\n  methods: {\n    clicked() {\n      console.log('app clicked');\n      this.$broadcast('BROADCASTED', this.name);\n    }\n  },\n  events: {\n    DISPATCHED(name) {\n      console.log(name);\n      this.text = 'dispatched from ' + name; \n    }\n  }\n});\n```\n\n## 1. まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。  \n\n```js\nvar bus = new Vue();\n```\n\n## 2. 送信側は`$dispatch`か`$broadcast`を使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを`$emit`に書き換えます。\n\n```js\n  // old\n  this.$dispatch('DISPATCHED', this.name);\n  // new  \n  bus.$emit('DISPATCHED', this.name);\n```\n\n## 3. 受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの`$on`に結びつけ、リッスンしてもらいます。\n\n```js\n  // old\n  events: {\n    DISPATCHED(name) {\n      console.log(name);\n      this.text = 'dispatched from ' + name; \n    }\n  }\n  // new\n  created() {\n    const self = this;\n    bus.$on('DISPATCHED', function(name) {\n      console.log(name);\n      self.text = 'dispatched from ' + name; \n    })\n  }\n```\n\n## 4. 最終的なコードはこんな感じになります。\n\n```js\nvar bus = new Vue();\n\nvar CompA = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component A',\n      text: 'Component A'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component a clicked');\n      //this.$dispatch('DISPATCHED', this.name);\n      bus.$emit('DISPATCHED', this.name);\n    }\n  },\n//  events: {\n//    BROADCASTED(name) {\n//      console.log(name);\n//      this.text = 'broadcasted from ' + name;\n//    }\n//  }\n  created() {\n    const self = this;\n    bus.$on('BROADCASTED', function(name) {\n      console.log(name);\n      self.text = 'broadcasted from ' + name;\n    });\n  }\n});\n\nvar CompB = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component B',\n      text: 'Component B'\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component b clicked');\n      //this.$dispatch('DISPATCHED', this.name);\n      bus.$emit('DISPATCHED', this.name);\n    }\n  },\n//  events: {\n//    BROADCASTED(name) {\n//      console.log(name);\n//      this.text = 'broadcasted from ' + name;\n//    }\n//  }\n  created() {\n    const self = this;\n    bus.$on('BROADCASTED', function(name) {\n      console.log(name);\n      self.text = 'broadcasted from ' + name;\n    });\n  }\n});\n\nvar App = new Vue({\n  el: '#app',\n  components: {\n    CompA, CompB\n  },\n  data: {\n    name: 'app',\n    text: 'app'\n  },\n  methods: {\n    clicked() {\n      console.log('app clicked');\n      //this.$broadcast('BROADCASTED', this.name);\n      bus.$emit('BROADCASTED', this.name);\n    }\n  },\n//  events: {\n//    DISPATCHED(name) {\n//      console.log(name);\n//      this.text = 'dispatched from ' + name; \n//    }\n//  }\n  created() {\n    const self = this;\n    bus.$on('DISPATCHED', function(name) {\n      console.log(name);\n      self.text = 'dispatched from ' + name; \n    })\n  }\n});\n```\n\n# まとめ\n移行のイメージは下記の図のようにまとめられると思います。  \n\n![ComponentsEventCommunication.png](https://qiita-image-store.s3.amazonaws.com/0/129176/b29e4e37-4017-fc2e-045c-fcc08d123b7a.png)\n\n全てのイベントを一旦Busというハブに送り、そしてハブからリッスンしているところにイベントを送信します。イメージ図だけを観察したら、やや複雑になってきましたが、前に挙げた2つの欠点が確かに解消できました。  \nしかし、全てのイベントがまとめられて同じところに送信する必要があるため、間違って意図しなかったコンポーネントに送ってしまう可能性も高くなってきていますので、気をつける必要があります。また、この設計にしたら、Vuexとほぼ変わらない感覚になってしまいます[^4]ので、Vuexを面倒くさがらず、いっそ導入してしまえばとも思いますね。\n\n# Vuexを使って実装してみよう\nVuexを使用して実装するのに、Vuexのstoreを追加してインスタンスに入れ、stateとmutationを配置し、getterとactionを作成する必要があります。また、今回においてコンポーネントに表示すべきなテキストは最初から決められているわけでないため、computeを使ってtextを計算した方が妥当でしょう。Vuexを使った実装は下記のようになります。\n\n```js\n// -- Vuex --\nconst state = {\n  dispatched: '',\n  broadcasted: ''\n};\n\nconst mutations = {\n  DISPATCHED(state, name) {\n    state.dispatched = 'dispatched from ' + name;\n  },\n  BROADCASTED(state, name) {\n    state.broadcasted = 'broadcasted from ' + name;\n  }\n};\n\nconst store = new Vuex.Store({\n  state,\n  mutations\n});\n// -- Vuex --\n\nvar CompA = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component A',\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component a clicked');\n      this.dispatch_(this.name);\n    }\n  },\n  computed: {\n    text() {\n      return this.broadcasted || this.name;\n    }\n  },\n  vuex: {\n    getters: {\n      broadcasted() {\n        return state.broadcasted;\n      }\n    },\n    actions: {\n      dispatch_({dispatch}, name) {\n        dispatch('DISPATCHED', name);\n      }\n    }\n  }\n});\n\nvar CompB = Vue.extend({\n  template: '<div @click=\"clicked\">{{text}}</div>',\n  data() {\n    return {\n      name: 'Component B',\n    };\n  },\n  methods: {\n    clicked() {\n      console.log('component b clicked');\n      this.dispatch_(this.name);\n    }\n  },\n  computed: {\n    text() {\n      return this.broadcasted || this.name;\n    }\n  },\n  vuex: {\n    getters: {\n      broadcasted() {\n        return state.broadcasted;\n      }\n    },\n    actions: {\n      dispatch_({dispatch}, name) {\n        dispatch('DISPATCHED', name);\n      }\n    }\n  }\n});\n\nvar App = new Vue({\n  el: '#app',\n  store,\n  components: {\n    CompA, CompB\n  },\n  data: {\n    name: 'app'\n  },\n  methods: {\n    clicked() {\n      console.log('app clicked');\n      this.broadcast_(this.name);\n    }\n  },\n  computed: {\n    text() {\n      return this.dispatched || this.name;\n    }\n  },\n  vuex: {\n    getters: {\n      dispatched() {\n        return state.dispatched;\n      }\n    },\n    actions: {\n      broadcast_({dispatch}, name) {\n        dispatch('BROADCASTED', name);\n      }\n    }\n  }\n});\n```\n\n基本的な考え方は送信がactionで行い、受信がgetterでやることです。  \n\n# 真・まとめ\nVue.jsの発達によって、Vueで大規模なサービスを構築するケースも増えてきていますので、従来のdispatch/broadcastの考え方が追いつけなくなりました。dispatch/broadcastのようなやり方より、ハブのようなものを利用し、データの保存・転送を行うことが望ましくなってきました。なので、Vue.js 2.0においてdispatchとbroadcastを廃止してしまってもおかしくありません。今からVue.jsでサービスを作り始めたい場合、早々からVuexを導入してもいいかもしれませんね。  \n\n[^1]: https://github.com/vuejs/vue/issues/2873\n[^2]: https://nodejs.org/api/events.html#events_class_eventemitter\n[^3]: http://jp.vuejs.org/guide/components.html#カスタムイベント\n[^4]: http://vuex.vuejs.org/ja/data-flow.html\n","slug":"communication-among-components-in-vue","published":1,"updated":"2017-11-27T13:08:28.828Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjap2hqdr0008b82r812oi97o","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>今までVue.jsのコンポーネント間のイベント通信を行わせる時に、<code>$dispatch()</code>と<code>$broadcast()</code>を用いたことが多いです（Vue.js及びコンポーネントについては<a href=\"http://vuejs.org/guide/\" target=\"_blank\" rel=\"noopener\">公式ページ</a>をご参考ください）。しかし、これらはVue.js 2.0で廃止される予定です<a href=\"https://github.com/vuejs/vue/issues/2873\" target=\"_blank\" rel=\"noopener\">^1</a>。コンポーネントのツリー構造の膨大化によって追跡が難しくなることと兄弟コンポーネントの通信がやりにくいことが理由として挙げられています。その代わりに、Node.jsのEventEmitterパターンが推奨されています<a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\" target=\"_blank\" rel=\"noopener\">^2</a>。このやり方はVue.js 1.0のAPIを使って実現できます<a href=\"http://jp.vuejs.org/guide/components.html#カスタムイベント\" target=\"_blank\" rel=\"noopener\">^3</a>ので、まだ2.0に移行していなくても、これからイベント通信を書く時に使用すべきでしょう。</p>\n<h1 id=\"移行の手順\"><a href=\"#移行の手順\" class=\"headerlink\" title=\"移行の手順\"></a>移行の手順</h1><p>下記のコードを2.0の書き方に移行するとしましょう。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clicked\"</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; text &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp-a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp-a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp-b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp-b</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> CompA = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component A'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component A'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component a clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$dispatch(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  events: &#123;</span><br><span class=\"line\">    BROADCASTED(name) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompB = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component B'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component B'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component b clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$dispatch(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  events: &#123;</span><br><span class=\"line\">    BROADCASTED(name) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    CompA, CompB</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span>,</span><br><span class=\"line\">    text: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'app clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$broadcast(<span class=\"string\">'BROADCASTED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  events: &#123;</span><br><span class=\"line\">    DISPATCHED(name) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。\"><a href=\"#1-まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。\" class=\"headerlink\" title=\"1. まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。\"></a>1. まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bus = <span class=\"keyword\">new</span> Vue();</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-送信側は-dispatchか-broadcastを使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを-emitに書き換えます。\"><a href=\"#2-送信側は-dispatchか-broadcastを使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを-emitに書き換えます。\" class=\"headerlink\" title=\"2. 送信側は$dispatchか$broadcastを使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを$emitに書き換えます。\"></a>2. 送信側は<code>$dispatch</code>か<code>$broadcast</code>を使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを<code>$emit</code>に書き換えます。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// old</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$dispatch(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\"><span class=\"comment\">// new  </span></span><br><span class=\"line\">bus.$emit(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの-onに結びつけ、リッスンしてもらいます。\"><a href=\"#3-受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの-onに結びつけ、リッスンしてもらいます。\" class=\"headerlink\" title=\"3. 受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの$onに結びつけ、リッスンしてもらいます。\"></a>3. 受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの<code>$on</code>に結びつけ、リッスンしてもらいます。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// old</span></span><br><span class=\"line\">events: &#123;</span><br><span class=\"line\">  DISPATCHED(name) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// new</span></span><br><span class=\"line\">created() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  bus.$on(<span class=\"string\">'DISPATCHED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">    self.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-最終的なコードはこんな感じになります。\"><a href=\"#4-最終的なコードはこんな感じになります。\" class=\"headerlink\" title=\"4. 最終的なコードはこんな感じになります。\"></a>4. 最終的なコードはこんな感じになります。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bus = <span class=\"keyword\">new</span> Vue();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompA = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component A'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component A'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component a clicked'</span>);</span><br><span class=\"line\">      <span class=\"comment\">//this.$dispatch('DISPATCHED', this.name);</span></span><br><span class=\"line\">      bus.$emit(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//  events: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    BROADCASTED(name) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//      console.log(name);</span></span><br><span class=\"line\"><span class=\"comment\">//      this.text = 'broadcasted from ' + name;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//  &#125;</span></span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    bus.$on(<span class=\"string\">'BROADCASTED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      self.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompB = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component B'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component B'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component b clicked'</span>);</span><br><span class=\"line\">      <span class=\"comment\">//this.$dispatch('DISPATCHED', this.name);</span></span><br><span class=\"line\">      bus.$emit(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//  events: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    BROADCASTED(name) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//      console.log(name);</span></span><br><span class=\"line\"><span class=\"comment\">//      this.text = 'broadcasted from ' + name;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//  &#125;</span></span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    bus.$on(<span class=\"string\">'BROADCASTED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      self.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    CompA, CompB</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span>,</span><br><span class=\"line\">    text: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'app clicked'</span>);</span><br><span class=\"line\">      <span class=\"comment\">//this.$broadcast('BROADCASTED', this.name);</span></span><br><span class=\"line\">      bus.$emit(<span class=\"string\">'BROADCASTED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//  events: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    DISPATCHED(name) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//      console.log(name);</span></span><br><span class=\"line\"><span class=\"comment\">//      this.text = 'dispatched from ' + name; </span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//  &#125;</span></span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    bus.$on(<span class=\"string\">'DISPATCHED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      self.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"まとめ\"><a href=\"#まとめ\" class=\"headerlink\" title=\"まとめ\"></a>まとめ</h1><p>移行のイメージは下記の図のようにまとめられると思います。  </p>\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/129176/b29e4e37-4017-fc2e-045c-fcc08d123b7a.png\" alt=\"ComponentsEventCommunication.png\"></p>\n<p>全てのイベントを一旦Busというハブに送り、そしてハブからリッスンしているところにイベントを送信します。イメージ図だけを観察したら、やや複雑になってきましたが、前に挙げた2つの欠点が確かに解消できました。<br>しかし、全てのイベントがまとめられて同じところに送信する必要があるため、間違って意図しなかったコンポーネントに送ってしまう可能性も高くなってきていますので、気をつける必要があります。また、この設計にしたら、Vuexとほぼ変わらない感覚になってしまいます<a href=\"http://vuex.vuejs.org/ja/data-flow.html\" target=\"_blank\" rel=\"noopener\">^4</a>ので、Vuexを面倒くさがらず、いっそ導入してしまえばとも思いますね。</p>\n<h1 id=\"Vuexを使って実装してみよう\"><a href=\"#Vuexを使って実装してみよう\" class=\"headerlink\" title=\"Vuexを使って実装してみよう\"></a>Vuexを使って実装してみよう</h1><p>Vuexを使用して実装するのに、Vuexのstoreを追加してインスタンスに入れ、stateとmutationを配置し、getterとactionを作成する必要があります。また、今回においてコンポーネントに表示すべきなテキストは最初から決められているわけでないため、computeを使ってtextを計算した方が妥当でしょう。Vuexを使った実装は下記のようになります。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// -- Vuex --</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">  dispatched: <span class=\"string\">''</span>,</span><br><span class=\"line\">  broadcasted: <span class=\"string\">''</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> mutations = &#123;</span><br><span class=\"line\">  DISPATCHED(state, name) &#123;</span><br><span class=\"line\">    state.dispatched = <span class=\"string\">'dispatched from '</span> + name;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  BROADCASTED(state, name) &#123;</span><br><span class=\"line\">    state.broadcasted = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state,</span><br><span class=\"line\">  mutations</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// -- Vuex --</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompA = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component A'</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component a clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dispatch_(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    text() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.broadcasted || <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  vuex: &#123;</span><br><span class=\"line\">    getters: &#123;</span><br><span class=\"line\">      broadcasted() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.broadcasted;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    actions: &#123;</span><br><span class=\"line\">      dispatch_(&#123;dispatch&#125;, name) &#123;</span><br><span class=\"line\">        dispatch(<span class=\"string\">'DISPATCHED'</span>, name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompB = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component B'</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component b clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dispatch_(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    text() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.broadcasted || <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  vuex: &#123;</span><br><span class=\"line\">    getters: &#123;</span><br><span class=\"line\">      broadcasted() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.broadcasted;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    actions: &#123;</span><br><span class=\"line\">      dispatch_(&#123;dispatch&#125;, name) &#123;</span><br><span class=\"line\">        dispatch(<span class=\"string\">'DISPATCHED'</span>, name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  store,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    CompA, CompB</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'app clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.broadcast_(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    text() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dispatched || <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  vuex: &#123;</span><br><span class=\"line\">    getters: &#123;</span><br><span class=\"line\">      dispatched() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.dispatched;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    actions: &#123;</span><br><span class=\"line\">      broadcast_(&#123;dispatch&#125;, name) &#123;</span><br><span class=\"line\">        dispatch(<span class=\"string\">'BROADCASTED'</span>, name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>基本的な考え方は送信がactionで行い、受信がgetterでやることです。  </p>\n<h1 id=\"真・まとめ\"><a href=\"#真・まとめ\" class=\"headerlink\" title=\"真・まとめ\"></a>真・まとめ</h1><p>Vue.jsの発達によって、Vueで大規模なサービスを構築するケースも増えてきていますので、従来のdispatch/broadcastの考え方が追いつけなくなりました。dispatch/broadcastのようなやり方より、ハブのようなものを利用し、データの保存・転送を行うことが望ましくなってきました。なので、Vue.js 2.0においてdispatchとbroadcastを廃止してしまってもおかしくありません。今からVue.jsでサービスを作り始めたい場合、早々からVuexを導入してもいいかもしれませんね。  </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>今までVue.jsのコンポーネント間のイベント通信を行わせる時に、<code>$dispatch()</code>と<code>$broadcast()</code>を用いたことが多いです（Vue.js及びコンポーネントについては<a href=\"http://vuejs.org/guide/\" target=\"_blank\" rel=\"noopener\">公式ページ</a>をご参考ください）。しかし、これらはVue.js 2.0で廃止される予定です<a href=\"https://github.com/vuejs/vue/issues/2873\" target=\"_blank\" rel=\"noopener\">^1</a>。コンポーネントのツリー構造の膨大化によって追跡が難しくなることと兄弟コンポーネントの通信がやりにくいことが理由として挙げられています。その代わりに、Node.jsのEventEmitterパターンが推奨されています<a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\" target=\"_blank\" rel=\"noopener\">^2</a>。このやり方はVue.js 1.0のAPIを使って実現できます<a href=\"http://jp.vuejs.org/guide/components.html#カスタムイベント\" target=\"_blank\" rel=\"noopener\">^3</a>ので、まだ2.0に移行していなくても、これからイベント通信を書く時に使用すべきでしょう。</p>\n<h1 id=\"移行の手順\"><a href=\"#移行の手順\" class=\"headerlink\" title=\"移行の手順\"></a>移行の手順</h1><p>下記のコードを2.0の書き方に移行するとしましょう。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clicked\"</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; text &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp-a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp-a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp-b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp-b</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> CompA = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component A'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component A'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component a clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$dispatch(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  events: &#123;</span><br><span class=\"line\">    BROADCASTED(name) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompB = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component B'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component B'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component b clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$dispatch(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  events: &#123;</span><br><span class=\"line\">    BROADCASTED(name) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    CompA, CompB</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span>,</span><br><span class=\"line\">    text: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'app clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$broadcast(<span class=\"string\">'BROADCASTED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  events: &#123;</span><br><span class=\"line\">    DISPATCHED(name) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。\"><a href=\"#1-まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。\" class=\"headerlink\" title=\"1. まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。\"></a>1. まず、新しいVueインスタンスを作成し、イベントハブの役割を担わせます。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bus = <span class=\"keyword\">new</span> Vue();</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-送信側は-dispatchか-broadcastを使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを-emitに書き換えます。\"><a href=\"#2-送信側は-dispatchか-broadcastを使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを-emitに書き換えます。\" class=\"headerlink\" title=\"2. 送信側は$dispatchか$broadcastを使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを$emitに書き換えます。\"></a>2. 送信側は<code>$dispatch</code>か<code>$broadcast</code>を使用してイベントを発信していましたが、イベントハブに一旦送信するので、全てを<code>$emit</code>に書き換えます。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// old</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$dispatch(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\"><span class=\"comment\">// new  </span></span><br><span class=\"line\">bus.$emit(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの-onに結びつけ、リッスンしてもらいます。\"><a href=\"#3-受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの-onに結びつけ、リッスンしてもらいます。\" class=\"headerlink\" title=\"3. 受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの$onに結びつけ、リッスンしてもらいます。\"></a>3. 受信側において、今まではリッスンしたいイベントをeventsで定義していましたが、その内容をcreatedでイベントハブの<code>$on</code>に結びつけ、リッスンしてもらいます。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// old</span></span><br><span class=\"line\">events: &#123;</span><br><span class=\"line\">  DISPATCHED(name) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// new</span></span><br><span class=\"line\">created() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  bus.$on(<span class=\"string\">'DISPATCHED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">    self.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-最終的なコードはこんな感じになります。\"><a href=\"#4-最終的なコードはこんな感じになります。\" class=\"headerlink\" title=\"4. 最終的なコードはこんな感じになります。\"></a>4. 最終的なコードはこんな感じになります。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bus = <span class=\"keyword\">new</span> Vue();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompA = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component A'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component A'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component a clicked'</span>);</span><br><span class=\"line\">      <span class=\"comment\">//this.$dispatch('DISPATCHED', this.name);</span></span><br><span class=\"line\">      bus.$emit(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//  events: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    BROADCASTED(name) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//      console.log(name);</span></span><br><span class=\"line\"><span class=\"comment\">//      this.text = 'broadcasted from ' + name;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//  &#125;</span></span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    bus.$on(<span class=\"string\">'BROADCASTED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      self.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompB = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component B'</span>,</span><br><span class=\"line\">      text: <span class=\"string\">'Component B'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component b clicked'</span>);</span><br><span class=\"line\">      <span class=\"comment\">//this.$dispatch('DISPATCHED', this.name);</span></span><br><span class=\"line\">      bus.$emit(<span class=\"string\">'DISPATCHED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//  events: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    BROADCASTED(name) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//      console.log(name);</span></span><br><span class=\"line\"><span class=\"comment\">//      this.text = 'broadcasted from ' + name;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//  &#125;</span></span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    bus.$on(<span class=\"string\">'BROADCASTED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      self.text = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    CompA, CompB</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span>,</span><br><span class=\"line\">    text: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'app clicked'</span>);</span><br><span class=\"line\">      <span class=\"comment\">//this.$broadcast('BROADCASTED', this.name);</span></span><br><span class=\"line\">      bus.$emit(<span class=\"string\">'BROADCASTED'</span>, <span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//  events: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    DISPATCHED(name) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//      console.log(name);</span></span><br><span class=\"line\"><span class=\"comment\">//      this.text = 'dispatched from ' + name; </span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//  &#125;</span></span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    bus.$on(<span class=\"string\">'DISPATCHED'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">      self.text = <span class=\"string\">'dispatched from '</span> + name; </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"まとめ\"><a href=\"#まとめ\" class=\"headerlink\" title=\"まとめ\"></a>まとめ</h1><p>移行のイメージは下記の図のようにまとめられると思います。  </p>\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/129176/b29e4e37-4017-fc2e-045c-fcc08d123b7a.png\" alt=\"ComponentsEventCommunication.png\"></p>\n<p>全てのイベントを一旦Busというハブに送り、そしてハブからリッスンしているところにイベントを送信します。イメージ図だけを観察したら、やや複雑になってきましたが、前に挙げた2つの欠点が確かに解消できました。<br>しかし、全てのイベントがまとめられて同じところに送信する必要があるため、間違って意図しなかったコンポーネントに送ってしまう可能性も高くなってきていますので、気をつける必要があります。また、この設計にしたら、Vuexとほぼ変わらない感覚になってしまいます<a href=\"http://vuex.vuejs.org/ja/data-flow.html\" target=\"_blank\" rel=\"noopener\">^4</a>ので、Vuexを面倒くさがらず、いっそ導入してしまえばとも思いますね。</p>\n<h1 id=\"Vuexを使って実装してみよう\"><a href=\"#Vuexを使って実装してみよう\" class=\"headerlink\" title=\"Vuexを使って実装してみよう\"></a>Vuexを使って実装してみよう</h1><p>Vuexを使用して実装するのに、Vuexのstoreを追加してインスタンスに入れ、stateとmutationを配置し、getterとactionを作成する必要があります。また、今回においてコンポーネントに表示すべきなテキストは最初から決められているわけでないため、computeを使ってtextを計算した方が妥当でしょう。Vuexを使った実装は下記のようになります。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// -- Vuex --</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">  dispatched: <span class=\"string\">''</span>,</span><br><span class=\"line\">  broadcasted: <span class=\"string\">''</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> mutations = &#123;</span><br><span class=\"line\">  DISPATCHED(state, name) &#123;</span><br><span class=\"line\">    state.dispatched = <span class=\"string\">'dispatched from '</span> + name;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  BROADCASTED(state, name) &#123;</span><br><span class=\"line\">    state.broadcasted = <span class=\"string\">'broadcasted from '</span> + name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state,</span><br><span class=\"line\">  mutations</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// -- Vuex --</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompA = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component A'</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component a clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dispatch_(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    text() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.broadcasted || <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  vuex: &#123;</span><br><span class=\"line\">    getters: &#123;</span><br><span class=\"line\">      broadcasted() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.broadcasted;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    actions: &#123;</span><br><span class=\"line\">      dispatch_(&#123;dispatch&#125;, name) &#123;</span><br><span class=\"line\">        dispatch(<span class=\"string\">'DISPATCHED'</span>, name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> CompB = Vue.extend(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div @click=\"clicked\"&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'Component B'</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'component b clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dispatch_(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    text() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.broadcasted || <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  vuex: &#123;</span><br><span class=\"line\">    getters: &#123;</span><br><span class=\"line\">      broadcasted() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.broadcasted;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    actions: &#123;</span><br><span class=\"line\">      dispatch_(&#123;dispatch&#125;, name) &#123;</span><br><span class=\"line\">        dispatch(<span class=\"string\">'DISPATCHED'</span>, name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> App = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  store,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    CompA, CompB</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'app'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clicked() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'app clicked'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.broadcast_(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    text() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dispatched || <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  vuex: &#123;</span><br><span class=\"line\">    getters: &#123;</span><br><span class=\"line\">      dispatched() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.dispatched;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    actions: &#123;</span><br><span class=\"line\">      broadcast_(&#123;dispatch&#125;, name) &#123;</span><br><span class=\"line\">        dispatch(<span class=\"string\">'BROADCASTED'</span>, name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>基本的な考え方は送信がactionで行い、受信がgetterでやることです。  </p>\n<h1 id=\"真・まとめ\"><a href=\"#真・まとめ\" class=\"headerlink\" title=\"真・まとめ\"></a>真・まとめ</h1><p>Vue.jsの発達によって、Vueで大規模なサービスを構築するケースも増えてきていますので、従来のdispatch/broadcastの考え方が追いつけなくなりました。dispatch/broadcastのようなやり方より、ハブのようなものを利用し、データの保存・転送を行うことが望ましくなってきました。なので、Vue.js 2.0においてdispatchとbroadcastを廃止してしまってもおかしくありません。今からVue.jsでサービスを作り始めたい場合、早々からVuexを導入してもいいかもしれませんね。  </p>\n"},{"title":"ポリモーフィズムクイズ","date":"2016-12-26T05:12:00.000Z","language":["japanese"],"_content":"\n# 問題\n\n```java\nclass MyTest\n{\n\tprivate static class A {\n\t\tString message = \"hello\";\n\t\tConsumer<String> hello = s -> System.out.print(message + s);\n\t\tvoid hello(String s) { this.hello.accept(s); }\n\t}\n\t\n\tprivate static class B extends A {\n\t\tString message = \"ハロー\";\n\t\tvoid hello(String s) { this.hello.accept(s); }\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tA b = (A) new B();\n\t\tb.hello(\" world\");\n\t\tSystem.out.print(\"/\");\n\t\tb.hello.accept(\" world\");\n\t}\n}\n```\n\n上記のコードの実行結果は\n\n- [ ] A. ハロー world/hello world\n- [ ] B. ハロー world/ハロー world\n- [ ] C. hello world/ハロー world\n- [ ] D. hello world/hello world\n- [ ] E. コンパイルエラー\n\n\n# 正解\n答えは\n\n- [x] D. hello world/hello world\n\n\n# 説明\n一見複雑そうですが、実はポリモーフィズムをちゃんと理解できれば、すぐ解けるはずです。それでは、`main`メソッドの処理を追って見ましょう。  \n- `main`メソッドの一行目では`A`型`B`実装の変数`b`を宣言しました。`(A)`というアップキャストの処理が書かれていますが、実はコンパイラが自動的に行ってくれる作業なので、ただの目障りで意味がありません（勿論エラーにもなりませんが・・）。\n- `b`のメソッドを利用する際に、コンパイラはまず実装型にそのメソッドがあるかどうかを見ます（二行目）。クラス`B`に`hello`というメソッドがありましたね。オーバーライドが明記されていませんが、シグネチャに違いがない為、親クラスの`hello`メソッドがオーバーライドされていることは分かります。ポリモーフィズムのルールによりクラス`B`の`hello`メソッドが実行されます。\n- `hello`いうメソッドは`hello`というコンシューマー関数のフィールドを呼んでいますが、残念ながら`A`クラスにしか`hello`が存在しません。その為、やむを得ず`A`クラス内の`hello`関数を利用することになります。（ちなみに、メソッド名とフィールド名の重複は許されますので、コンパイルエラーになりません）\n- `hello`という関数は`message`というフィールドを使います。クラス`A`の`message`は`hello`ですので、出力結果は`hello world`になります。クラス`B`にも`message`というフィールドが存在しますが、今使っている`hello`関数とは無関係ですね。\n- さらに`main`の四行目ですが、`b`オブジェクトの`hello`関数を利用しているように見えますね。しかし、フィールド変数のオーバーライドが存在しないことを忘れてはいけません。`hello`関数は`hello`メソッドと同じく処理手続きを定義するものですが、本質的には`message`のようなフィールド変数です。その為、どのフィールドが利用されるかは宣言時の参照型によります。`A`として宣言された為、クラス`A`の`hello`関数が利用され、二行目の出力結果と同じようになります。\n\n# 参考\n- https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html\n- https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/Consumer.html\n\n","source":"_posts/a-polymorphism-puzzle.md","raw":"---\ntitle: ポリモーフィズムクイズ\ndate: 2016-12-26 14:12:00\nlanguage: [japanese]\ntags: [java]\ncategory: tech\n---\n\n# 問題\n\n```java\nclass MyTest\n{\n\tprivate static class A {\n\t\tString message = \"hello\";\n\t\tConsumer<String> hello = s -> System.out.print(message + s);\n\t\tvoid hello(String s) { this.hello.accept(s); }\n\t}\n\t\n\tprivate static class B extends A {\n\t\tString message = \"ハロー\";\n\t\tvoid hello(String s) { this.hello.accept(s); }\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tA b = (A) new B();\n\t\tb.hello(\" world\");\n\t\tSystem.out.print(\"/\");\n\t\tb.hello.accept(\" world\");\n\t}\n}\n```\n\n上記のコードの実行結果は\n\n- [ ] A. ハロー world/hello world\n- [ ] B. ハロー world/ハロー world\n- [ ] C. hello world/ハロー world\n- [ ] D. hello world/hello world\n- [ ] E. コンパイルエラー\n\n\n# 正解\n答えは\n\n- [x] D. hello world/hello world\n\n\n# 説明\n一見複雑そうですが、実はポリモーフィズムをちゃんと理解できれば、すぐ解けるはずです。それでは、`main`メソッドの処理を追って見ましょう。  \n- `main`メソッドの一行目では`A`型`B`実装の変数`b`を宣言しました。`(A)`というアップキャストの処理が書かれていますが、実はコンパイラが自動的に行ってくれる作業なので、ただの目障りで意味がありません（勿論エラーにもなりませんが・・）。\n- `b`のメソッドを利用する際に、コンパイラはまず実装型にそのメソッドがあるかどうかを見ます（二行目）。クラス`B`に`hello`というメソッドがありましたね。オーバーライドが明記されていませんが、シグネチャに違いがない為、親クラスの`hello`メソッドがオーバーライドされていることは分かります。ポリモーフィズムのルールによりクラス`B`の`hello`メソッドが実行されます。\n- `hello`いうメソッドは`hello`というコンシューマー関数のフィールドを呼んでいますが、残念ながら`A`クラスにしか`hello`が存在しません。その為、やむを得ず`A`クラス内の`hello`関数を利用することになります。（ちなみに、メソッド名とフィールド名の重複は許されますので、コンパイルエラーになりません）\n- `hello`という関数は`message`というフィールドを使います。クラス`A`の`message`は`hello`ですので、出力結果は`hello world`になります。クラス`B`にも`message`というフィールドが存在しますが、今使っている`hello`関数とは無関係ですね。\n- さらに`main`の四行目ですが、`b`オブジェクトの`hello`関数を利用しているように見えますね。しかし、フィールド変数のオーバーライドが存在しないことを忘れてはいけません。`hello`関数は`hello`メソッドと同じく処理手続きを定義するものですが、本質的には`message`のようなフィールド変数です。その為、どのフィールドが利用されるかは宣言時の参照型によります。`A`として宣言された為、クラス`A`の`hello`関数が利用され、二行目の出力結果と同じようになります。\n\n# 参考\n- https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html\n- https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/Consumer.html\n\n","slug":"a-polymorphism-puzzle","published":1,"updated":"2017-11-28T11:50:28.479Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjap2hqdu0009b82rmf5hkfnf","content":"<h1 id=\"問題\"><a href=\"#問題\" class=\"headerlink\" title=\"問題\"></a>問題</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">\t\tString message = <span class=\"string\">\"hello\"</span>;</span><br><span class=\"line\">\t\tConsumer&lt;String&gt; hello = s -&gt; System.out.print(message + s);</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(String s)</span> </span>&#123; <span class=\"keyword\">this</span>.hello.accept(s); &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">\t\tString message = <span class=\"string\">\"ハロー\"</span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(String s)</span> </span>&#123; <span class=\"keyword\">this</span>.hello.accept(s); &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tA b = (A) <span class=\"keyword\">new</span> B();</span><br><span class=\"line\">\t\tb.hello(<span class=\"string\">\" world\"</span>);</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">\t\tb.hello.accept(<span class=\"string\">\" world\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上記のコードの実行結果は</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> A. ハロー world/hello world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> B. ハロー world/ハロー world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> C. hello world/ハロー world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> D. hello world/hello world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> E. コンパイルエラー</li>\n</ul>\n<h1 id=\"正解\"><a href=\"#正解\" class=\"headerlink\" title=\"正解\"></a>正解</h1><p>答えは</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> D. hello world/hello world</li>\n</ul>\n<h1 id=\"説明\"><a href=\"#説明\" class=\"headerlink\" title=\"説明\"></a>説明</h1><p>一見複雑そうですが、実はポリモーフィズムをちゃんと理解できれば、すぐ解けるはずです。それでは、<code>main</code>メソッドの処理を追って見ましょう。  </p>\n<ul>\n<li><code>main</code>メソッドの一行目では<code>A</code>型<code>B</code>実装の変数<code>b</code>を宣言しました。<code>(A)</code>というアップキャストの処理が書かれていますが、実はコンパイラが自動的に行ってくれる作業なので、ただの目障りで意味がありません（勿論エラーにもなりませんが・・）。</li>\n<li><code>b</code>のメソッドを利用する際に、コンパイラはまず実装型にそのメソッドがあるかどうかを見ます（二行目）。クラス<code>B</code>に<code>hello</code>というメソッドがありましたね。オーバーライドが明記されていませんが、シグネチャに違いがない為、親クラスの<code>hello</code>メソッドがオーバーライドされていることは分かります。ポリモーフィズムのルールによりクラス<code>B</code>の<code>hello</code>メソッドが実行されます。</li>\n<li><code>hello</code>いうメソッドは<code>hello</code>というコンシューマー関数のフィールドを呼んでいますが、残念ながら<code>A</code>クラスにしか<code>hello</code>が存在しません。その為、やむを得ず<code>A</code>クラス内の<code>hello</code>関数を利用することになります。（ちなみに、メソッド名とフィールド名の重複は許されますので、コンパイルエラーになりません）</li>\n<li><code>hello</code>という関数は<code>message</code>というフィールドを使います。クラス<code>A</code>の<code>message</code>は<code>hello</code>ですので、出力結果は<code>hello world</code>になります。クラス<code>B</code>にも<code>message</code>というフィールドが存在しますが、今使っている<code>hello</code>関数とは無関係ですね。</li>\n<li>さらに<code>main</code>の四行目ですが、<code>b</code>オブジェクトの<code>hello</code>関数を利用しているように見えますね。しかし、フィールド変数のオーバーライドが存在しないことを忘れてはいけません。<code>hello</code>関数は<code>hello</code>メソッドと同じく処理手続きを定義するものですが、本質的には<code>message</code>のようなフィールド変数です。その為、どのフィールドが利用されるかは宣言時の参照型によります。<code>A</code>として宣言された為、クラス<code>A</code>の<code>hello</code>関数が利用され、二行目の出力結果と同じようになります。</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html</a></li>\n<li><a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/Consumer.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/Consumer.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"問題\"><a href=\"#問題\" class=\"headerlink\" title=\"問題\"></a>問題</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">\t\tString message = <span class=\"string\">\"hello\"</span>;</span><br><span class=\"line\">\t\tConsumer&lt;String&gt; hello = s -&gt; System.out.print(message + s);</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(String s)</span> </span>&#123; <span class=\"keyword\">this</span>.hello.accept(s); &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">\t\tString message = <span class=\"string\">\"ハロー\"</span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(String s)</span> </span>&#123; <span class=\"keyword\">this</span>.hello.accept(s); &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tA b = (A) <span class=\"keyword\">new</span> B();</span><br><span class=\"line\">\t\tb.hello(<span class=\"string\">\" world\"</span>);</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">\t\tb.hello.accept(<span class=\"string\">\" world\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上記のコードの実行結果は</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> A. ハロー world/hello world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> B. ハロー world/ハロー world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> C. hello world/ハロー world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> D. hello world/hello world</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> E. コンパイルエラー</li>\n</ul>\n<h1 id=\"正解\"><a href=\"#正解\" class=\"headerlink\" title=\"正解\"></a>正解</h1><p>答えは</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> D. hello world/hello world</li>\n</ul>\n<h1 id=\"説明\"><a href=\"#説明\" class=\"headerlink\" title=\"説明\"></a>説明</h1><p>一見複雑そうですが、実はポリモーフィズムをちゃんと理解できれば、すぐ解けるはずです。それでは、<code>main</code>メソッドの処理を追って見ましょう。  </p>\n<ul>\n<li><code>main</code>メソッドの一行目では<code>A</code>型<code>B</code>実装の変数<code>b</code>を宣言しました。<code>(A)</code>というアップキャストの処理が書かれていますが、実はコンパイラが自動的に行ってくれる作業なので、ただの目障りで意味がありません（勿論エラーにもなりませんが・・）。</li>\n<li><code>b</code>のメソッドを利用する際に、コンパイラはまず実装型にそのメソッドがあるかどうかを見ます（二行目）。クラス<code>B</code>に<code>hello</code>というメソッドがありましたね。オーバーライドが明記されていませんが、シグネチャに違いがない為、親クラスの<code>hello</code>メソッドがオーバーライドされていることは分かります。ポリモーフィズムのルールによりクラス<code>B</code>の<code>hello</code>メソッドが実行されます。</li>\n<li><code>hello</code>いうメソッドは<code>hello</code>というコンシューマー関数のフィールドを呼んでいますが、残念ながら<code>A</code>クラスにしか<code>hello</code>が存在しません。その為、やむを得ず<code>A</code>クラス内の<code>hello</code>関数を利用することになります。（ちなみに、メソッド名とフィールド名の重複は許されますので、コンパイルエラーになりません）</li>\n<li><code>hello</code>という関数は<code>message</code>というフィールドを使います。クラス<code>A</code>の<code>message</code>は<code>hello</code>ですので、出力結果は<code>hello world</code>になります。クラス<code>B</code>にも<code>message</code>というフィールドが存在しますが、今使っている<code>hello</code>関数とは無関係ですね。</li>\n<li>さらに<code>main</code>の四行目ですが、<code>b</code>オブジェクトの<code>hello</code>関数を利用しているように見えますね。しかし、フィールド変数のオーバーライドが存在しないことを忘れてはいけません。<code>hello</code>関数は<code>hello</code>メソッドと同じく処理手続きを定義するものですが、本質的には<code>message</code>のようなフィールド変数です。その為、どのフィールドが利用されるかは宣言時の参照型によります。<code>A</code>として宣言された為、クラス<code>A</code>の<code>hello</code>関数が利用され、二行目の出力結果と同じようになります。</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html</a></li>\n<li><a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/Consumer.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/Consumer.html</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjap2hqdr0008b82r812oi97o","category_id":"cjap2hqdk0005b82rdik46916","_id":"cjap2hqe7000db82rhte2h6l5"},{"post_id":"cjap2hqcj0001b82rc3hel9jm","category_id":"cjap2hqdk0005b82rdik46916","_id":"cjap2hqe9000gb82r1aqclu6k"},{"post_id":"cjap2hqdu0009b82rmf5hkfnf","category_id":"cjap2hqdk0005b82rdik46916","_id":"cjap2hqe9000hb82r7ll8vf8f"},{"post_id":"cjap2hqct0003b82rsekirqjr","category_id":"cjap2hqdk0005b82rdik46916","_id":"cjap2hqeb000jb82rlsjy921d"},{"post_id":"cjap2hqdp0007b82rr6csqox9","category_id":"cjap2hqdk0005b82rdik46916","_id":"cjap2hqed000lb82rp377o6o2"}],"PostTag":[{"post_id":"cjap2hqcj0001b82rc3hel9jm","tag_id":"cjap2hqdo0006b82rr34mx4ie","_id":"cjap2hqe3000cb82rowxp9bnl"},{"post_id":"cjap2hqct0003b82rsekirqjr","tag_id":"cjap2hqdy000bb82rgkjj4ln2","_id":"cjap2hqeb000kb82rw94h9lfj"},{"post_id":"cjap2hqct0003b82rsekirqjr","tag_id":"cjap2hqe8000fb82rlibe7rsq","_id":"cjap2hqed000mb82redv7c4kn"},{"post_id":"cjap2hqdp0007b82rr6csqox9","tag_id":"cjap2hqdy000bb82rgkjj4ln2","_id":"cjap2hqee000ob82rbjwhcvi2"},{"post_id":"cjap2hqdr0008b82r812oi97o","tag_id":"cjap2hqed000nb82ro3msuorc","_id":"cjap2hqeg000rb82rc0oq8jhy"},{"post_id":"cjap2hqdr0008b82r812oi97o","tag_id":"cjap2hqee000pb82r96tf94h3","_id":"cjap2hqeg000sb82rmsrysrr0"},{"post_id":"cjap2hqdu0009b82rmf5hkfnf","tag_id":"cjap2hqdy000bb82rgkjj4ln2","_id":"cjap2hqeh000tb82rqefz3fy6"}],"Tag":[{"name":"hexo","_id":"cjap2hqdo0006b82rr34mx4ie"},{"name":"java","_id":"cjap2hqdy000bb82rgkjj4ln2"},{"name":"functional-programming","_id":"cjap2hqe8000fb82rlibe7rsq"},{"name":"vue.js","_id":"cjap2hqed000nb82ro3msuorc"},{"name":"javascript","_id":"cjap2hqee000pb82r96tf94h3"}]}}